(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/root/orgpress/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/part2.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Summary") . 240106089) ((headline "Summary") . 240106089) ((other "Cont") . 19663143) ((headline "Cont") . 19663143) ((other "回到" "Validation") . 34381847) ((headline "回到" "Validation") . 34381847) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 166450434) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 166450434) ((other "Validation") . 265781908) ((headline "Validation") . 265781908) ((other "State") . 87365116) ((headline "State") . 87365116) ((other "Writer") . 53799334) ((headline "Writer") . 53799334) ((other "do" "notation") . 214551247) ((headline "do" "notation") . 214551247) ((other "Reader") . 198381131) ((headline "Reader") . 198381131) ((other "Either" "Monad") . 58927519) ((headline "Either" "Monad") . 58927519) ((other "Product" "&" "Coproduct") . 193468887) ((headline "Product" "&" "Coproduct") . 193468887) ((other "Either") . 35123857) ((headline "Either") . 35123857) ((other "Maybe") . 83178501) ((headline "Maybe") . 83178501) ((other "Identity") . 248096954) ((headline "Identity") . 248096954) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 206975768) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 206975768)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/part3.org" '(:date (23387 45568) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Comonad") . 43571442) ((headline "Comonad") . 43571442) ((other "Eff") . 204178094) ((headline "Eff") . 204178094) ((other "Free" "Monoid") . 247020397) ((headline "Free" "Monoid") . 247020397) ((other "Interpreter") . 69763026) ((headline "Interpreter") . 69763026) ((other "Free" "Functor") . 234260793) ((headline "Free" "Functor") . 234260793) ((other "Coyoneda") . 258372958) ((headline "Coyoneda") . 258372958) ((other "Free") . 80105030) ((headline "Free") . 80105030) ((other "Free" "Monad") . 248448543) ((headline "Free" "Monad") . 248448543) ((other "ST" "Monad") . 64212453) ((headline "ST" "Monad") . 64212453) ((other "MonadPlus") . 125935373) ((headline "MonadPlus") . 125935373) ((other "Alternative") . 122472920) ((headline "Alternative") . 122472920) ((other "ReaderT") . 168864575) ((headline "ReaderT") . 168864575) ((other "Monad" "Transform") . 3906783) ((headline "Monad" "Transform") . 3906783) ((other "RWS") . 2249862) ((headline "RWS") . 2249862) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 47409139) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 47409139)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/scala/en/part3.org" '(:date (23537 64768) :title "Grokking Monad in Scala - Free" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/index.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "References") . 33210866) ((headline "References") . 33210866) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 22609046) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 22609046) ((other "Comonad") . 236742841) ((headline "Comonad") . 236742841) ((other "Eff") . 58271511) ((headline "Eff") . 58271511) ((other "Free" "Monoid") . 7333731) ((headline "Free" "Monoid") . 7333731) ((other "Free" "Monad") . 69909193) ((headline "Free" "Monad") . 69909193) ((other "Interpreter") . 61242800) ((headline "Interpreter") . 61242800) ((other "Free" "Functor") . 139512857) ((headline "Free" "Functor") . 139512857) ((other "Coyoneda") . 235211527) ((headline "Coyoneda") . 235211527) ((other "Free") . 48757470) ((headline "Free") . 48757470) ((other "ST" "Monad") . 110194562) ((headline "ST" "Monad") . 110194562) ((other "MonadPlus") . 105873773) ((headline "MonadPlus") . 105873773) ((other "Alternative") . 121474327) ((headline "Alternative") . 121474327) ((other "Monad" "Transform") . 53670228) ((headline "Monad" "Transform") . 53670228) ((other "ReaderT") . 157951915) ((headline "ReaderT") . 157951915) ((other "RWS") . 266686852) ((headline "RWS") . 266686852) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 27600524) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 27600524) ((other "Cont") . 91944866) ((headline "Cont") . 91944866) ((other "Validation") . 240695156) ((headline "Validation") . 240695156) ((other "回到" "Validation") . 237145939) ((headline "回到" "Validation") . 237145939) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 64268380) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 64268380) ((other "State") . 54230329) ((headline "State") . 54230329) ((other "Writer") . 228468148) ((headline "Writer") . 228468148) ((other "Reader") . 13454081) ((headline "Reader") . 13454081) ((other "do" "notation") . 267458243) ((headline "do" "notation") . 267458243) ((other "Either") . 216041295) ((headline "Either") . 216041295) ((other "Either" "Monad") . 193172380) ((headline "Either" "Monad") . 193172380) ((other "Product" "&" "Coproduct") . 35260456) ((headline "Product" "&" "Coproduct") . 35260456) ((other "Maybe") . 237587148) ((headline "Maybe") . 237587148) ((other "Identity") . 224866261) ((headline "Identity") . 224866261) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 208131495) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 208131495) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 226727811) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 226727811) ((other "Rank" "N" "Type") . 68318650) ((headline "Rank" "N" "Type") . 68318650) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 102828227) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 102828227) ((other "结合律") . 243191790) ((headline "结合律") . 243191790) ((other "三角等式") . 39313544) ((headline "三角等式") . 39313544) ((other "/Adjunction" "Functor/" "伴随函子") . 31718254) ((headline "/Adjunction" "Functor/" "伴随函子") . 31718254) ((other "String" "Diagram") . 94815682) ((headline "String" "Diagram") . 94815682) ((other "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 15102330) ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 15102330) ((target "NT") . 244024534) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 21579074) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 21579074) ((other "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 94206590) ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 94206590) ((other "/Category/") . 46607389) ((headline "/Category/") . 46607389) ((other "/Duel/") . 25728796) ((headline "/Duel/") . 25728796) ((other "/Hask/") . 259511810) ((headline "/Hask/") . 259511810)) :index (("Catergory" "/root/orgpress/org/grokking-monad/index.org" (name . "/Category/")) ("范畴" "/root/orgpress/org/grokking-monad/index.org" (name . "/Category/")) ("Kind" "/root/orgpress/org/grokking-monad/index.org" (name . "/Category/")) ("Hask" "/root/orgpress/org/grokking-monad/index.org" (name . "/Hask/")) ("Duel" "/root/orgpress/org/grokking-monad/index.org" (name . "/Duel/")) ("Functor" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("猫" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>Cat<rt> +猫+</rt></ruby>@@/")) ("Natural Transformations" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("自然变换" "/root/orgpress/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("Adjunction Functor" "/root/orgpress/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/orgpress/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/orgpress/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/orgpress/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/orgpress/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")))) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/part1.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 105642791) ((headline "Footnotes") . 105642791) ((other "Summary") . 103488704) ((headline "Summary") . 103488704) ((other "/Kleisli" "Catergory/") . 119782391) ((headline "/Kleisli" "Catergory/") . 119782391) ((other "Rank" "N" "Type") . 11828249) ((headline "Rank" "N" "Type") . 11828249) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 105621067) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 105621067) ((other "结合律") . 166908865) ((headline "结合律") . 166908865) ((other "三角等式") . 73354831) ((headline "三角等式") . 73354831) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 182563590) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 182563590) ((other "/Adjunction" "Functor/" "伴随函子") . 74859174) ((headline "/Adjunction" "Functor/" "伴随函子") . 74859174) ((other "String" "Diagram") . 171750759) ((headline "String" "Diagram") . 171750759) ((target "NT") . 23564857) ((other "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 199471966) ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 199471966) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 65913809) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 65913809) ((other "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 87037101) ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 87037101) ((other "/Duel/") . 22360560) ((headline "/Duel/") . 22360560) ((other "/Hask/") . 167626658) ((headline "/Hask/") . 167626658) ((other "/Category/") . 63140182) ((headline "/Category/") . 63140182) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 90196496) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 90196496)) :index (("Catergory" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Category/")) ("范畴" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Category/")) ("Kind" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Category/")) ("Hask" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Hask/")) ("Duel" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Duel/")) ("Functor" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("猫" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>Cat<rt> +猫+</rt></ruby>@@/")) ("Natural Transformations" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("自然变换" "/root/orgpress/org/grokking-monad/part1.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("Adjunction Functor" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/orgpress/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/orgpress/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/root/orgpress/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Rank N Type" "/root/orgpress/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Kleisi Catergory" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Kleisli Catergory/")))) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/scala/en/part2.org" '(:date (23549 55936) :title "Grokking Monad in Scala" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/reactive-programming.org" '(:date (22025 54400) :title "Monadic Reactive Programming in JavaScript" :crossrefs (((other "Monad") . 214474169) ((headline "Monad") . 214474169) ((other "Applicative") . 234454021) ((headline "Applicative") . 234454021) ((other "Functor") . 144896085) ((headline "Functor") . 144896085) ((other "Stream") . 229821599) ((headline "Stream") . 229821599)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/2016-year-in-review.org" '(:date (22621 47744) :title "2016 Year in Review" :crossrefs (((other "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 119089263) ((headline "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 119089263) ((other "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 6638785) ((headline "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 6638785) ((other "[[https://github.com/cujojs/most][most]]") . 44594057) ((headline "[[https://github.com/cujojs/most][most]]") . 44594057) ((other "[[https://github.com/reactive-react/transdux][transdux]]") . 177466191) ((headline "[[https://github.com/reactive-react/transdux][transdux]]") . 177466191) ((other "[[https://github.com/jcouyang/union-type][union-type]]") . 220967022) ((headline "[[https://github.com/jcouyang/union-type][union-type]]") . 220967022) ((other "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 132411856) ((headline "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 132411856) ((other "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 110058488) ((headline "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 110058488) ((other "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 63710890) ((headline "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 63710890) ((other "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . 7419115) ((headline "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . 7419115) ((other "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 221056283) ((headline "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 221056283) ((other "[[https://github.com/jcouyang/cat.js][cat.js]]") . 24930962) ((headline "[[https://github.com/jcouyang/cat.js][cat.js]]") . 24930962) ((other "duckling") . 147593268) ((headline "duckling") . 147593268) ((other "同构的" "JS" "方法") . 55089157) ((headline "同构的" "JS" "方法") . 55089157) ((other "core.async") . 1437229) ((headline "core.async") . 1437229) ((other "[[https://github.com/jcouyang/conjs][conjs]]") . 41019273) ((headline "[[https://github.com/jcouyang/conjs][conjs]]") . 41019273) ((other "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 228527271) ((headline "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 228527271) ((other "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 126649426) ((headline "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 126649426)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:date (21822 52608) :title "Clojure 风格的 JavaScript 并发编程" :crossrefs (((other "Footnotes") . 11919596) ((headline "Footnotes") . 11919596) ((other "JavaScript" "版本" "的" "CSP") . 238176080) ((headline "JavaScript" "版本" "的" "CSP") . 238176080) ((other "put" ">!") . 140493395) ((headline "put" ">!") . 140493395) ((other "take" "<!") . 234134973) ((headline "take" "<!") . 234134973) ((other "timeout") . 234608780) ((headline "timeout") . 234608780) ((other "Goroutines" "in" "JavaScript") . 88020128) ((headline "Goroutines" "in" "JavaScript") . 88020128) ((other "Generator") . 249916617) ((headline "Generator") . 249916617) ((other "CSP" "in" "JavaScript[fn:2]") . 153507156) ((headline "CSP" "in" "JavaScript[fn:2]") . 153507156) ((other "CSP," "Channel," "Goroutines") . 149400597) ((headline "CSP," "Channel," "Goroutines") . 149400597) ((other "Event" "loop") . 154745962) ((headline "Event" "loop") . 154745962) ((other "CSP") . 18823739) ((headline "CSP") . 18823739) ((other "异步与多线程") . 56774778) ((headline "异步与多线程") . 56774778) ((other "什么是并发") . 97055232) ((headline "什么是并发") . 97055232) ((other "Communicating" "Sequential" "Processes") . 150305166) ((headline "Communicating" "Sequential" "Processes") . 150305166) ((other "TL;DR" "SLIDES") . 72292014) ((headline "TL;DR" "SLIDES") . 72292014)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:date (22097 1408) :title "看我们3天 hackday 都干了些什么" :crossrefs (((other "Footnotes") . 202760046) ((headline "Footnotes") . 202760046) ((other "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 245688859) ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 245688859) ((other "1." "把你的" "component" "包到" "Transdux" "里") . 155932891) ((headline "1." "把你的" "component" "包到" "Transdux" "里") . 155932891) ((other "Recap") . 208189029) ((headline "Recap") . 208189029) ((other "Day" "2" "-" "Show" "Case") . 77673080) ((headline "Day" "2" "-" "Show" "Case") . 77673080) ((other "bindActions") . 206589393) ((headline "bindActions") . 206589393) ((other "分辨不同的" "ReactClass") . 69672751) ((headline "分辨不同的" "ReactClass") . 69672751) ((other "传递" "inputChan" "和" "action" "的" "publication") . 228247283) ((headline "传递" "inputChan" "和" "action" "的" "publication") . 228247283) ((other "提取框架") . 13463513) ((headline "提取框架") . 13463513) ((other "初版，只实现一个功能") . 55284802) ((headline "初版，只实现一个功能") . 55284802) ((other "Day" "1" "-" "Hack" "Hack" "Hack...") . 43283202) ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . 43283202) ((other "Day" "0" "-" "Inception") . 226998756) ((headline "Day" "0" "-" "Inception") . 226998756) ((other "Atom") . 27392640) ((headline "Atom") . 27392640) ((other "Transducers") . 20752535) ((headline "Transducers") . 20752535) ((other "PubSub") . 10744807) ((headline "PubSub") . 10744807) ((other "Channels") . 108573298) ((headline "Channels") . 108573298) ((other "Clojure" "Avengers" "来相助") . 178969862) ((headline "Clojure" "Avengers" "来相助") . 178969862) ((other "redux") . 217180095) ((headline "redux") . 217180095) ((other "flux") . 18287172) ((headline "flux") . 18287172) ((other "Rationale") . 68908393) ((headline "Rationale") . 68908393)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/essential-ecmascript6.org" '(:date (21771 25344) :title "Essential EcmaScript 6" :crossrefs (((other "Generator") . 1999931) ((headline "Generator") . 1999931) ((other "Promises") . 204368942) ((headline "Promises") . 204368942) ((other "Class") . 259422439) ((headline "Class") . 259422439) ((other "Template" "Strings") . 194896036) ((headline "Template" "Strings") . 194896036) ((other "Destructuring") . 145347052) ((headline "Destructuring") . 145347052) ((other "Proxy") . 140387855) ((headline "Proxy") . 140387855) ((other "Let") . 34753152) ((headline "Let") . 34753152) ((other "Arrow" "Function") . 257695380) ((headline "Arrow" "Function") . 257695380) ((other "Tail" "Calling") . 77031049) ((headline "Tail" "Calling") . 77031049)) :index (("Arrow Function" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/root/orgpress/org/javascript/react-cookbook-mini.org" '(:date (22078 36992) :title "A Compact React Cookbook" :crossrefs (((other "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 162518207) ((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 162518207) ((other "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 127977329) ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 127977329) ((other "PureRenderMixin") . 148384589) ((headline "PureRenderMixin") . 148384589) ((other "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 45664910) ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 45664910) ((other "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 111044679) ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 111044679) ((other "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 89018075) ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 89018075) ((other "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 152991685) ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 152991685) ((other "应用级别" "state") . 145153606) ((headline "应用级别" "state") . 145153606) ((other "router") . 149503593) ((headline "router") . 149503593) ((other "flux") . 39792785) ((headline "flux") . 39792785) ((other "store") . 58511124) ((headline "store") . 58511124) ((other "dispatcher") . 172731348) ((headline "dispatcher") . 172731348) ((other "event") . 165348097) ((headline "event") . 165348097) ((other "What" "about" "Router" "/" "router" "怎么办") . 237451229) ((headline "What" "about" "Router" "/" "router" "怎么办") . 237451229) ((other "[[https://github.com/rackt/react-router][react" "router]]") . 153674587) ((headline "[[https://github.com/rackt/react-router][react" "router]]") . 153674587) ((other "[[https://github.com/flatiron/director][direactor]]") . 173608579) ((headline "[[https://github.com/flatiron/director][direactor]]") . 173608579) ((other "server" "side") . 18983981) ((headline "server" "side") . 18983981) ((other "client" "side") . 185009362) ((headline "client" "side") . 185009362) ((other "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 228909658) ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 228909658) ((other "[[https://github.com/netflix/falcor][falcor]]") . 15086100) ((headline "[[https://github.com/netflix/falcor][falcor]]") . 15086100) ((other "[[https://facebook.github.io/relay/][relay/graphql]]") . 86867694) ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . 86867694) ((other "just" "[[https://github.com/cujojs/rest][rest]]") . 232998033) ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . 232998033) ((other "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 163807691) ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 163807691) ((other "Modular" "and" "Components") . 155393253) ((headline "Modular" "and" "Components") . 155393253) ((other "webpack") . 152973456) ((headline "webpack") . 152973456) ((other "browserify") . 67521924) ((headline "browserify") . 67521924) ((other "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 126076638) ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 126076638) ((other "mocha") . 8764987) ((headline "mocha") . 8764987) ((other "jasmine") . 98545892) ((headline "jasmine") . 98545892) ((other "[[http://facebook.github.io/jest/][Jest]]") . 149865536) ((headline "[[http://facebook.github.io/jest/][Jest]]") . 149865536) ((other "Why" "Immutable" "/" "为毛要不可变") . 162593635) ((headline "Why" "Immutable" "/" "为毛要不可变") . 162593635) ((other "让你的数据结构" "immutable" "的工具们") . 136643434) ((headline "让你的数据结构" "immutable" "的工具们") . 136643434) ((other "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 39574855) ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 39574855) ((other "[[https://github.com/swannodette/mori][mori]]") . 207240282) ((headline "[[https://github.com/swannodette/mori][mori]]") . 207240282) ((other "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 127947921) ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 127947921) ((other "Class") . 10413858) ((headline "Class") . 10413858) ((other "状态") . 44586388) ((headline "状态") . 44586388) ((other "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 214686079) ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 214686079) ((other "Virtual" "DOM" "（Immutable）") . 117395626) ((headline "Virtual" "DOM" "（Immutable）") . 117395626) ((other "以前是如何操作" "DOM" "的" "（Mutable）") . 154169780) ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . 154169780) ((other "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 186872578) ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 186872578) ((other "单向有什么好") . 205668419) ((headline "单向有什么好") . 205668419) ((other "双向有什么不好[fn:1]") . 160054648) ((headline "双向有什么不好[fn:1]") . 160054648) ((other "单向绑定") . 39427598) ((headline "单向绑定") . 39427598) ((other "双向绑定") . 3087990) ((headline "双向绑定") . 3087990)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:date (21864 64896) :title "JavaScript玩转Clojure大法之 - Trampoline" :crossrefs (((other "Trampoline") . 239868170) ((headline "Trampoline") . 239868170) ((other "DFA") . 260261634) ((headline "DFA") . 260261634) ((other "尾递归(tail" "recursion)") . 54139025) ((headline "尾递归(tail" "recursion)") . 54139025) ((other "相互递归(mutual" "recursion)") . 130391672) ((headline "相互递归(mutual" "recursion)") . 130391672)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/ru-lang-second-attampt.org" '(:date (21967 53888) :title "入语言第二试: readtable 与 core.async" :crossrefs (((other "core.async") . 220200906) ((headline "core.async") . 220200906) ((other "Readtable") . 126818632) ((headline "Readtable") . 126818632)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/rethinking-react-dataflow.org" '(:date (22228 56192) :title "Rethinking React Dataflow" :crossrefs (((other "Model") . 88550934) ((headline "Model") . 88550934) ((other "继续" "flatMap" "结果到流上") . 238365297) ((headline "继续" "flatMap" "结果到流上") . 238365297) ((other "发送" "API" "请求") . 4766756) ((headline "发送" "API" "请求") . 4766756) ((other "Debounce") . 141986301) ((headline "Debounce") . 141986301) ((other "一个简单的" "Pure" "Component") . 267365664) ((headline "一个简单的" "Pure" "Component") . 267365664) ((other "🌰") . 194610585) ((headline "🌰") . 194610585) ((other "Monadic") . 213456800) ((headline "Monadic") . 213456800) ((other "Reactive") . 24821690) ((headline "Reactive") . 24821690)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" '(:date (21846 34944) :title "JavaScript玩转Clojure大法之Transducer" :crossrefs (((other "Footnotes") . 263852958) ((headline "Footnotes") . 263852958) ((other "完整例子") . 237969989) ((headline "完整例子") . 237969989) ((other "Is" "it" "Curry?") . 67900277) ((headline "Is" "it" "Curry?") . 67900277) ((other "Transducer") . 173385550) ((headline "Transducer") . 173385550) ((other "Reducible") . 163362322) ((headline "Reducible") . 163362322) ((other "[[http://clojure.org/reducers][Reducer]]") . 179482725) ((headline "[[http://clojure.org/reducers][Reducer]]") . 179482725) ((other "transform") . 132768758) ((headline "transform") . 132768758) ((other "Reducer") . 220870242) ((headline "Reducer") . 220870242)) :index (("reducer" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/orgpress/org/javascript/functional-javascript.org" '(:date (21842 37888) :title "Functional JavaScript Mini Book" :crossrefs (((other "Monad") . 105810640) ((headline "Monad") . 105810640) ((other "Monad" "在" "JavaScript" "中的应用") . 176312946) ((headline "Monad" "在" "JavaScript" "中的应用") . 176312946) ((other "到底有什么用呢," "Monad") . 216191536) ((headline "到底有什么用呢," "Monad") . 216191536) ((other "走钢索") . 232233189) ((headline "走钢索") . 232233189) ((other "现在来试试用" "Either") . 79698875) ((headline "现在来试试用" "Either") . 79698875) ((other "一般解法") . 126630811) ((headline "一般解法") . 126630811) ((other "Either") . 1290199) ((headline "Either") . 1290199) ((other "Functor") . 49194170) ((headline "Functor") . 49194170) ((other "Functor" "in" "JavaScript") . 147024794) ((headline "Functor" "in" "JavaScript") . 147024794) ((other "举个栗子🌰") . 122204289) ((headline "举个栗子🌰") . 122204289) ((other "Functor") . 151343432) ((headline "Functor") . 151343432) ((other "Transducers") . 100336091) ((headline "Transducers") . 100336091) ((other "完整例子") . 239579780) ((headline "完整例子") . 239579780) ((other "Is" "it" "Curry?") . 74894612) ((headline "Is" "it" "Curry?") . 74894612) ((other "Transducer") . 166956427) ((headline "Transducer") . 166956427) ((other "Reducer") . 106527597) ((headline "Reducer") . 106527597) ((other "[[http://clojure.org/reducers][Reducer]]") . 209935863) ((headline "[[http://clojure.org/reducers][Reducer]]") . 209935863) ((other "Reducible") . 158314409) ((headline "Reducible") . 158314409) ((other "transform") . 79811788) ((headline "transform") . 79811788) ((other "高阶函数(Higher-order" "function)") . 192908593) ((headline "高阶函数(Higher-order" "function)") . 192908593) ((other "函数组合" "function" "composition") . 181267211) ((headline "函数组合" "function" "composition") . 181267211) ((other "pipe") . 165237456) ((headline "pipe") . 165237456) ((other "Compose") . 240885780) ((headline "Compose") . 240885780) ((other "柯里化" "currying") . 56219998) ((headline "柯里化" "currying") . 56219998) ((other "自动柯里化") . 211012705) ((headline "自动柯里化") . 211012705) ((other "柯里化函数接口") . 129076441) ((headline "柯里化函数接口") . 129076441) ((other "我们来看一个问题") . 242947931) ((headline "我们来看一个问题") . 242947931) ((other "所有数字乘以2," "再重构试试看") . 89910352) ((headline "所有数字乘以2," "再重构试试看") . 89910352) ((other "现在我要其中所有数字加1," "然后在连接") . 173902655) ((headline "现在我要其中所有数字加1," "然后在连接") . 173902655) ((other "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 253094602) ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 253094602) ((other "Higher-order" "function") . 204916464) ((headline "Higher-order" "function") . 204916464) ((other "函数作为返回值") . 88533088) ((headline "函数作为返回值") . 88533088) ((other "函数作为参数") . 230808068) ((headline "函数作为参数") . 230808068) ((other "Lambda") . 164672359) ((headline "Lambda") . 164672359) ((other "JavaScript的匿名函数(anonymous" "function)") . 135776586) ((headline "JavaScript的匿名函数(anonymous" "function)") . 135776586) ((other "使用匿名函数") . 192688770) ((headline "使用匿名函数") . 192688770) ((other "创建一个匿名函数") . 53719642) ((headline "创建一个匿名函数") . 53719642) ((other "箭头函数(arrow" "function)") . 254314214) ((headline "箭头函数(arrow" "function)") . 254314214) ((other "Lexical" "=this=") . 43783523) ((headline "Lexical" "=this=") . 43783523) ((other "为什么要用箭头函数") . 196797120) ((headline "为什么要用箭头函数") . 196797120) ((other "声明一个箭头函数") . 97605566) ((headline "声明一个箭头函数") . 97605566) ((other "Preface") . 229331503) ((headline "Preface") . 229331503)) :index (("柯里化" "/root/orgpress/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/root/orgpress/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/root/orgpress/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/root/orgpress/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/root/orgpress/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/root/orgpress/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-macro.org" '(:date (21884 50176) :title "JavaScript玩转Clojure大法之 - Macro (1)" :crossrefs (((other "Footnotes") . 49006374) ((headline "Footnotes") . 49006374) ((other "Recap") . 184070831) ((headline "Recap") . 184070831) ((other "case" "macro") . 77007963) ((headline "case" "macro") . 77007963) ((other "Rule" "macro") . 50555434) ((headline "Rule" "macro") . 50555434) ((other "Sweet.js") . 211392597) ((headline "Sweet.js") . 211392597) ((other "Macro") . 75274874) ((headline "Macro") . 75274874)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:date (21895 20480) :title "自制语言初试 - 入lang" :crossrefs (((other "在哪里才能买到呢") . 236029866) ((headline "在哪里才能买到呢") . 236029866) ((other "Infix" "macro") . 48473616) ((headline "Infix" "macro") . 48473616) ((other "Existential" "?") . 117244421) ((headline "Existential" "?") . 117244421) ((other "looprecur") . 188977098) ((headline "looprecur") . 188977098) ((other "destruture" "array") . 139662068) ((headline "destruture" "array") . 139662068) ((other "block" "scope" "binding") . 202212065) ((headline "block" "scope" "binding") . 202212065) ((other "Let") . 82760197) ((headline "Let") . 82760197) ((other "lambda") . 217776474) ((headline "lambda") . 217776474) ((other "Ru-lang," "The" "First" "Attampt") . 163979349) ((headline "Ru-lang," "The" "First" "Attampt") . 163979349) ((other "那macro呢") . 246422652) ((headline "那macro呢") . 246422652) ((other "ClojureScript的数据结构移植") . 258604049) ((headline "ClojureScript的数据结构移植") . 258604049) ((other "ClojureScript怎么就不好了") . 103542258) ((headline "ClojureScript怎么就不好了") . 103542258) ((other "Rationale(为毛要整一门语言)") . 147856703) ((headline "Rationale(为毛要整一门语言)") . 147856703)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/shutting-down-gulugulu.org" '(:date (23520 55680) :title "关闭 gulugulu 弹幕" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/understand-prototype.org" '(:date (21909 53376) :title "理解JavaScript的原型链和继承" :crossrefs (((other "Footnotes") . 71907174) ((headline "Footnotes") . 71907174) ((other "Bonus" "继承") . 239310473) ((headline "Bonus" "继承") . 239310473) ((other "也没什么卵用得" "contructor") . 69391021) ((headline "也没什么卵用得" "contructor") . 69391021) ((other "=__proto__=" "才是原型链") . 5187268) ((headline "=__proto__=" "才是原型链") . 5187268) ((other "prototype属性是原型链吗？") . 10256163) ((headline "prototype属性是原型链吗？") . 10256163) ((other "instanceof" "引发的问题") . 85877752) ((headline "instanceof" "引发的问题") . 85877752)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/xreact/typeclasses-in-typescript.org" '(:date (22963 12032) :title "Type Classes in TypeScript" :crossrefs (((other "Apply") . 132833387) ((headline "Apply") . 132833387) ((other "Cartesian") . 6296286) ((headline "Cartesian") . 6296286) ((other "Reflect" "Metadata") . 230151792) ((headline "Reflect" "Metadata") . 230151792) ((other "多态") . 145828315) ((headline "多态") . 145828315) ((other "Higher" "Kind" "Type") . 210558425) ((headline "Higher" "Kind" "Type") . 210558425) ((other "Functor") . 228612132) ((headline "Functor") . 228612132)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/xreact/fun-with-fantasy.org" '(:date (22963 12032) :title "xReact Fantasy" :crossrefs (((other "小结") . 44181425) ((headline "小结") . 44181425) ((other "Asynchronous") . 262209332) ((headline "Asynchronous") . 262209332) ((other "多个参数") . 103718243) ((headline "多个参数") . 103718243) ((other "Counter" "例子") . 27758931) ((headline "Counter" "例子") . 27758931) ((other "render") . 216320112) ((headline "render") . 216320112) ((other "Component") . 189222946) ((headline "Component") . 189222946) ((other "View") . 8044491) ((headline "View") . 8044491) ((other "Transform") . 119434080) ((headline "Transform") . 119434080)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/slides/continuous-delivery.org" '(:date (23708 39799 926088 7000) :title "Continuous Delivery" :crossrefs (((other "Footnotes") . 56371727) ((headline "Footnotes") . 56371727) ((other "Homework") . 30545415) ((headline "Homework") . 30545415) ((other "Popular" "CI" "tools") . 143133556) ((headline "Popular" "CI" "tools") . 143133556) ((other "QA" "in" "Production[fn:5]") . 132388035) ((headline "QA" "in" "Production[fn:5]") . 132388035) ((other "Pipeline") . 121308220) ((headline "Pipeline") . 121308220) ((other "Pipeline" "as" "Code") . 170484181) ((headline "Pipeline" "as" "Code") . 170484181) ((other "Journey" "from" "code" "to" "product") . 206354331) ((headline "Journey" "from" "code" "to" "product") . 206354331) ((other "Essentials[fn:4]") . 210733368) ((headline "Essentials[fn:4]") . 210733368) ((other "Automate" "deployment") . 31503590) ((headline "Automate" "deployment") . 31503590) ((other "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 1283363) ((headline "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 1283363) ((other "Test" "in" "a" "clone" "of" "the" "production" "environment") . 38002265) ((headline "Test" "in" "a" "clone" "of" "the" "production" "environment") . 38002265) ((other "Keep" "the" "build" "fast") . 137854436) ((headline "Keep" "the" "build" "fast") . 137854436) ((other "Fix" "broken" "builds" "immediately") . 169946587) ((headline "Fix" "broken" "builds" "immediately") . 169946587) ((other "Automate" "the" "build") . 126721671) ((headline "Automate" "the" "build") . 126721671) ((other "Make" "your" "build" "self-testing") . 87241313) ((headline "Make" "your" "build" "self-testing") . 87241313) ((other "Maintain" "a" "single-source" "repository") . 151574017) ((headline "Maintain" "a" "single-source" "repository") . 151574017) ((other "Evolutionary" "architecture") . 106782098) ((headline "Evolutionary" "architecture") . 106782098) ((other "Why" "Continuous" "Integration") . 115112920) ((headline "Why" "Continuous" "Integration") . 115112920) ((other "Why" "Continuous" "Delivery") . 212404699) ((headline "Why" "Continuous" "Delivery") . 212404699) ((other "Happier" "teams") . 138949775) ((headline "Happier" "teams") . 138949775) ((other "Better" "products") . 143072524) ((headline "Better" "products") . 143072524) ((other "Lower" "Cost") . 231732412) ((headline "Lower" "Cost") . 231732412) ((other "Higher" "quality") . 239735497) ((headline "Higher" "quality") . 239735497) ((other "Faster" "time" "to" "market") . 220783362) ((headline "Faster" "time" "to" "market") . 220783362) ((other "Low" "risk" "releases") . 108715004) ((headline "Low" "risk" "releases") . 108715004) ((other "What" "is" "Continuous" "Integration") . 81890462) ((headline "What" "is" "Continuous" "Integration") . 81890462) ((other "What" "is" "Continuous" "Delivery") . 234362211) ((headline "What" "is" "Continuous" "Delivery") . 234362211)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/emacs/literal-programming-emacs-config.org" '(:date (21835 64640) :title "Literal Programming Emacs Configure" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/orgpress/org/clojure/clojure-the-mini-book.org" '(:date (21742 25088) :title "Clojure The Mini Book" :crossrefs (((other "多态") . 222320962) ((headline "多态") . 222320962) ((other "Concurrency") . 52336951) ((headline "Concurrency") . 52336951) ((other "Collection") . 145123317) ((headline "Collection") . 145123317) ((other "Functional" "Programming") . 216798464) ((headline "Functional" "Programming") . 216798464) ((other "Macro") . 148102373) ((headline "Macro") . 148102373) ((other "Reader") . 158664189) ((headline "Reader") . 158664189) ((other "code?" "data?") . 35734272) ((headline "code?" "data?") . 35734272) ((other "Special" "Forms") . 133847287) ((headline "Special" "Forms") . 133847287) ((other "loop" "recur") . 69918335) ((headline "loop" "recur") . 69918335) ((other "do") . 26955919) ((headline "do") . 26955919) ((other "let") . 42846193) ((headline "let") . 42846193) ((other "def") . 263206442) ((headline "def") . 263206442) ((other "来试试不一样的Clojure数据结构") . 51943629) ((headline "来试试不一样的Clojure数据结构") . 51943629) ((other "反引号" "=`=") . 25218718) ((headline "反引号" "=`=") . 25218718) ((other "lisp专用的" "'" "引号") . 264669787) ((headline "lisp专用的" "'" "引号") . 264669787) ((other "Map") . 147284711) ((headline "Map") . 147284711) ((other "Keyword") . 40179599) ((headline "Keyword") . 40179599) ((other "Set") . 101203995) ((headline "Set") . 101203995) ((other "List") . 14050832) ((headline "List") . 14050832) ((other "Vector") . 237993923) ((headline "Vector") . 237993923) ((other "String") . 30596882) ((headline "String") . 30596882) ((other "Number") . 236345107) ((headline "Number") . 236345107) ((other "搭建环境") . 137675222) ((headline "搭建环境") . 137675222) ((other "多线程是好东西如果用的对") . 221529182) ((headline "多线程是好东西如果用的对") . 221529182) ((other "多态是好东西") . 31427881) ((headline "多态是好东西") . 31427881) ((other "函数式是好东西") . 154473196) ((headline "函数式是好东西") . 154473196) ((other "lisp" "是好东西") . 211615081) ((headline "lisp" "是好东西") . 211615081) ((other "为什么要学习全是括号的语言") . 52484912) ((headline "为什么要学习全是括号的语言") . 52484912) ((other "我每天用括号当早饭") . 174560114) ((headline "我每天用括号当早饭") . 174560114)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/scala/3-layer-cake.org" '(:date (23704 6656) :title "3 Layer Scala Cake" :crossrefs (((other "Footnotes") . 139286756) ((headline "Footnotes") . 139286756) ((other) . 218400980) ((headline) . 218400980) ((other "Free" "+" "MTL" "+" "ReaderT") . 46155081) ((headline "Free" "+" "MTL" "+" "ReaderT") . 46155081) ((other "ReaderT" "+" "MTL") . 119914396) ((headline "ReaderT" "+" "MTL") . 119914396) ((other "Recap") . 255373899) ((headline "Recap") . 255373899) ((other "Layer" "1:" "ReaderT") . 39596382) ((headline "Layer" "1:" "ReaderT") . 39596382) ((other "Layer" "2:" "MTL" "+" "Interpreter") . 63468411) ((headline "Layer" "2:" "MTL" "+" "Interpreter") . 63468411) ((other "Layer" "3:" "Business" "(Free)") . 218148019) ((headline "Layer" "3:" "Business" "(Free)") . 218148019) ((other "ReaderT" "+" "MTL" "+" "Free") . 252645172) ((headline "ReaderT" "+" "MTL" "+" "Free") . 252645172) ((other "Free" "Monad") . 100821533) ((headline "Free" "Monad") . 100821533) ((other "MTL") . 123632216) ((headline "MTL") . 123632216) ((other "The" "Needs" "of" "State") . 48584811) ((headline "The" "Needs" "of" "State") . 48584811) ((other "3" "Layer" "Cake") . 140696193) ((headline "3" "Layer" "Cake") . 140696193) ((other "Refactor") . 215723590) ((headline "Refactor") . 215723590) ((other "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 135820363) ((headline "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 135820363) ((other "ReaderT") . 265207332) ((headline "ReaderT") . 265207332) ((other "IO") . 108151888) ((headline "IO") . 108151888) ((other "Imperative") . 216306125) ((headline "Imperative") . 216306125) ((other "Retro") . 250520591) ((headline "Retro") . 250520591) ((other "Take" "2:" "ReaderT" "Pattern") . 114447134) ((headline "Take" "2:" "ReaderT" "Pattern") . 114447134) ((other "Take" "1:" "IO") . 162291540) ((headline "Take" "1:" "IO") . 162291540) ((other "The" "Program") . 267559535) ((headline "The" "Program") . 267559535)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/jichao.ouyang.org" '(:date (7745 23680) :title "About Me" :crossrefs (((other "Blog" "[[http://blog.oyanglul.us]]") . 165674256) ((headline "Blog" "[[http://blog.oyanglul.us]]") . 165674256) ((other "Talks") . 2823636) ((headline "Talks") . 2823636) ((other "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 70110091) ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 70110091) ((other "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 500913) ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 500913) ((other "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 216262296) ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 216262296) ((other "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 204717719) ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 204717719) ((other "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 247741421) ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 247741421) ((other "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 2590821) ((headline "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 2590821) ((other "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 162115676) ((headline "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 162115676) ((other "Books") . 57263890) ((headline "Books") . 57263890) ((other "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . 74514020) ((headline "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . 74514020) ((other "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . 186686864) ((headline "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . 186686864) ((other "Projects") . 23323465) ((headline "Projects") . 23323465)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/scala/implicit-conversions.org" '(:date (22360 45440) :title "Implicit, to be or not to be" :crossrefs (((other "Footnotes") . 170486515) ((headline "Footnotes") . 170486515) ((other "or" "Not" "To" "Be") . 184824432) ((headline "or" "Not" "To" "Be") . 184824432) ((other "To" "Be") . 110901338) ((headline "To" "Be") . 110901338) ((other "类型类" "Type" "Class") . 239473016) ((headline "类型类" "Type" "Class") . 239473016) ((other "隐式转换参数") . 16134513) ((headline "隐式转换参数") . 16134513) ((other "语法糖") . 201575743) ((headline "语法糖") . 201575743) ((other "隐式转换接受者") . 237088637) ((headline "隐式转换接受者") . 237088637) ((other "隐式转换是什么鬼") . 188786578) ((headline "隐式转换是什么鬼") . 188786578)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/scala/finch-vs-http4s.org" '(:date (23566 65024) :title "Finch vs Http4s, which is FPer" :crossrefs (((other "Http4s") . 20104537) ((headline "Http4s") . 20104537) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 62007107) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 62007107) ((other "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 100663784) ((headline "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 100663784) ((other "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 92243447) ((headline "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 92243447) ((other "Finch") . 202055668) ((headline "Finch") . 202055668) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎") . 105396029) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎") . 105396029) ((other "extensible:" "🍎" "🍎") . 148231417) ((headline "extensible:" "🍎" "🍎") . 148231417) ((other "composible:" "🍎" "🍎" "🍎" "🍎") . 126794844) ((headline "composible:" "🍎" "🍎" "🍎" "🍎") . 126794844)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/functional-ruby.org" '(:date (22406 54784) :title "Functional Ruby" :crossrefs (((other "Footnotes") . 77938867) ((headline "Footnotes") . 77938867) ((other "pmap") . 115338643) ((headline "pmap") . 115338643) ((other "actor" "model" "多线程") . 52240727) ((headline "actor" "model" "多线程") . 52240727) ((other "用" "Either" "做控制流") . 84626298) ((headline "用" "Either" "做控制流") . 84626298) ((other "联合类型" "Left" "|" "Right") . 117314969) ((headline "联合类型" "Left" "|" "Right") . 117314969) ((other "一个好看的" "inspect") . 29109377) ((headline "一个好看的" "inspect") . 29109377) ((other "Monad") . 212149425) ((headline "Monad") . 212149425) ((other "Functor") . 15278460) ((headline "Functor") . 15278460) ((other "一个简单的" "Either" "Monad[fn:2]") . 23468431) ((headline "一个简单的" "Either" "Monad[fn:2]") . 23468431) ((other "一个简单的例子") . 234047631) ((headline "一个简单的例子") . 234047631) ((other "其实只是个简单的语法糖") . 90110690) ((headline "其实只是个简单的语法糖") . 90110690) ((other "/正则/") . 11549570) ((headline "/正则/") . 11549570) ((other "lambda" "（aka" "guard）") . 160169425) ((headline "lambda" "（aka" "guard）") . 160169425) ((other "表达式") . 96881484) ((headline "表达式") . 96881484) ((other "类型") . 125917628) ((headline "类型") . 125917628) ((other "值") . 236503967) ((headline "值") . 236503967) ((other "case" "when") . 193311931) ((headline "case" "when") . 193311931) ((other "destructure") . 31979585) ((headline "destructure") . 31979585) ((other "pattern" "matching") . 262944389) ((headline "pattern" "matching") . 262944389) ((other "闭包") . 232448313) ((headline "闭包") . 232448313) ((other "参数检查") . 55484943) ((headline "参数检查") . 55484943) ((other "return") . 208831186) ((headline "return") . 208831186) ((other "为什么" "lambda" "是" "proc") . 43190950) ((headline "为什么" "lambda" "是" "proc") . 43190950) ((other "神奇的" "=&=") . 125771584) ((headline "神奇的" "=&=") . 125771584) ((other "lambda") . 46048532) ((headline "lambda") . 46048532)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/make Bamboo support Github Pull Request with Status API.org" '(:date (21731 54784) :title "make Bamboo support Github Pull Request with Status API" :crossrefs (((other "Footnotes") . 195450373) ((headline "Footnotes") . 195450373) ((other "stop" "build" "if" "PR") . 2915602) ((headline "stop" "build" "if" "PR") . 2915602) ((other "notify" "github" "status") . 199685070) ((headline "notify" "github" "status") . 199685070) ((other "checkout" "PR" "code") . 181590698) ((headline "checkout" "PR" "code") . 181590698) ((other "config" "Bamboo" "plan") . 3711746) ((headline "config" "Bamboo" "plan") . 3711746) ((other "but" "what" "about" "the" "custom" "variables") . 224485123) ((headline "but" "what" "about" "the" "custom" "variables") . 224485123) ((other "github" "webhook") . 98613701) ((headline "github" "webhook") . 98613701) ((other "bamboo" "magic") . 259822950) ((headline "bamboo" "magic") . 259822950) ((other "what's" "wrong" "with" "Bamboo") . 219368796) ((headline "what's" "wrong" "with" "Bamboo") . 219368796)) :index (("bamboo" "/root/orgpress/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/root/orgpress/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/root/orgpress/org/how-functional-programming-and-flink-will-save-your-ass-from-big-data.org" '(:date (23498 28672) :title "使用 Flink 解救多线程 Scala 应用" :crossrefs (((other "Footnotes") . 50489678) ((headline "Footnotes") . 50489678) ((other "Flink" "Cluster" "on" "K8s") . 199637958) ((headline "Flink" "Cluster" "on" "K8s") . 199637958) ((other "Flink" "Cluster" "in" "Docker") . 62432433) ((headline "Flink" "Cluster" "in" "Docker") . 62432433) ((other "Flink" "Scala") . 130365756) ((headline "Flink" "Scala") . 130365756) ((other "Scala") . 52635513) ((headline "Scala") . 52635513) ((other "问题") . 184559180) ((headline "问题") . 184559180)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/write-yourself-a-scheme-in-haskell/index.org" '(:date (22491 13824) :title "用Haskell48小时写你个Scheme" :crossrefs (((other "待续...") . 37223488) ((headline "待续...") . 37223488) ((other "求值，第一部分") . 14577251) ((headline "求值，第一部分") . 14577251) ((other "实现" "show" "类型类") . 77314141) ((headline "实现" "show" "类型类") . 77314141) ((other "to" "String") . 151861899) ((headline "to" "String") . 151861899) ((other "最后") . 12046352) ((headline "最后") . 12046352) ((other "parseNumber") . 260393332) ((headline "parseNumber") . 260393332) ((other "parseAtom") . 44169056) ((headline "parseAtom") . 44169056) ((other "ParseString") . 17983356) ((headline "ParseString") . 17983356) ((other "返回值") . 87346630) ((headline "返回值") . 87346630) ((other "空白符") . 154995896) ((headline "空白符") . 154995896) ((other "pattern" "matching") . 258247214) ((headline "pattern" "matching") . 258247214) ((other "Either") . 72103866) ((headline "Either") . 72103866) ((other "Parse") . 183879420) ((headline "Parse") . 183879420) ((other "定义" "parser") . 67736167) ((headline "定义" "parser") . 67736167) ((other "写个简单的parser") . 160881319) ((headline "写个简单的parser") . 160881319) ((other "语法分析") . 110551411) ((headline "语法分析") . 110551411) ((other "练习") . 136146476) ((headline "练习") . 136146476) ((other "操作符") . 64488956) ((headline "操作符") . 64488956) ((other "Hello" "World") . 154349315) ((headline "Hello" "World") . 154349315) ((other "跑起来") . 42758226) ((headline "跑起来") . 42758226) ((other "前言") . 206652249) ((headline "前言") . 206652249)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:date (22065 24960) :title "使用 dotfiles 和 stow 管理你的 dotfiles" :crossrefs (((other "㊙" "Sensitive" "dotfiles") . 199173610) ((headline "㊙" "Sensitive" "dotfiles") . 199173610) ((other "submodule" "vs" "subtree") . 220315974) ((headline "submodule" "vs" "subtree") . 220315974) ((other "push" "to" "github") . 4832561) ((headline "push" "to" "github") . 4832561) ((other "stow" "目录") . 97847543) ((headline "stow" "目录") . 97847543) ((other "stow" "文件") . 180502998) ((headline "stow" "文件") . 180502998) ((other "使用" "stow" "管理" "symlink") . 128133832) ((headline "使用" "stow" "管理" "symlink") . 128133832)) :index nil) org-publish-cache)
(puthash "Xce86aa72bad9979e2cf6eab155ba5f89c943a32f" '(23708 39799 770089 120000) org-publish-cache)
(puthash "Xf4f579823ed24b666dbd4ee7c6e450e5c672e19b" '(23708 39799 770089 120000) org-publish-cache)
(puthash "X949ccb49fffc912a59d9ae9c1674172111bd37a4" '(23708 39799 766089 149000) org-publish-cache)
(puthash "Xf9fbc63fe4fdaab483e7a63ffbf0f79cdf5036f2" '(23708 39799 770089 120000) org-publish-cache)
(puthash "Xebe2eb4e5d614b05920009b61bc903c97e4bc4ad" '(23708 39799 770089 120000) org-publish-cache)
(puthash "X8ce048658a0c7c58f5a9d937156e7bf0e7e20b75" '(23708 39799 766089 149000) org-publish-cache)
(puthash "X5c0f79581daa2d5ed4ccd5515e2800f872cdcea8" '(23708 39799 722089 462000) org-publish-cache)
(puthash "Xdc2b846950f32a308cb291ec9b912cc1b72921a5" '(23708 39799 922088 35000) org-publish-cache)
(puthash "Xd4f7d54ade5ff027cc0e4566b6b5bce7c3ae775f" '(23708 39799 922088 35000) org-publish-cache)
(puthash "Xa9191dfdc2ff2a408e729fa9e61ef9187f2688bf" '(23708 39799 786089 6000) org-publish-cache)
(puthash "Xd4728ed6724a979e0cde1c7608839cfcfcf408ed" '(23708 39799 922088 35000) org-publish-cache)
(puthash "Xa7dac94a92acc2701720846488261f9854a70197" '(23708 39799 786089 6000) org-publish-cache)
(puthash "X42b1635282469ddefd7fd9dfaa0764abc95d036b" '(23708 39799 922088 35000) org-publish-cache)
(puthash "X4fadb6f717470ce5f620fec585cb4c98613b5cad" '(23708 39799 786089 6000) org-publish-cache)
(puthash "X422e0e483e36f6ac98670b3d7ee80a5b3f5167a6" '(23708 39799 786089 6000) org-publish-cache)
(puthash "X9d705e3360bdc688dc8f44ee53c1ce4069dd58ba" '(23708 39799 786089 6000) org-publish-cache)
(puthash "X1e394c90d48f6ae06faa69d49ffba822f2e80d3d" '(23708 39799 922088 35000) org-publish-cache)
(puthash "X8cb73ae9c04cadea0ab1806cdf4f8a1e17bfba39" '(23708 39799 786089 6000) org-publish-cache)
(puthash "Xf6f0fea00311c30040cfd7437200667c26377655" '(23708 39799 786089 6000) org-publish-cache)
(puthash "Xdee351a2635d8ba759025f8600619e0ed978cb2b" '(23708 39799 922088 35000) org-publish-cache)
(puthash "Xdfdd4e3edbfcc60d1f28d438e2ca40df956490c4" '(23708 39799 926088 7000) org-publish-cache)
(puthash "/root/orgpress/org/index.org" '(:crossrefs (((other "[[file:jichao.ouyang.org][About" "Me]]") . 184670948) ((headline "[[file:jichao.ouyang.org][About" "Me]]") . 184670948) ((other "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 52633260) ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 52633260) ((other "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 51344193) ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 51344193) ((other "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 162223545) ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 162223545) ((other "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 55008252) ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 55008252) ((other "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 211762164) ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 211762164) ((other "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 229347840) ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 229347840) ((other "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 155465852) ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 155465852) ((other "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 64397154) ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 64397154) ((other "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 51898012) ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 51898012) ((other "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 141894134) ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 141894134) ((other "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 187036074) ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 187036074) ((other "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 119639672) ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 119639672) ((other "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 118839202) ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 118839202) ((other "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 142027002) ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 142027002) ((other "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 17507893) ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 17507893) ((other "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 262064764) ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 262064764) ((other "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 227253765) ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 227253765) ((other "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 174548730) ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 174548730) ((other "[[file:functional-ruby.org][Functional" "Ruby]]") . 71451686) ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . 71451686) ((other "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 2369117) ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 2369117) ((other "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 94652061) ((headline "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 94652061) ((other "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 263418761) ((headline "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 263418761) ((other "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 213543196) ((headline "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 213543196) ((other "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 140097073) ((headline "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 140097073) ((other "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 182794992) ((headline "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 182794992) ((other "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 124007815) ((headline "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 124007815) ((other "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 139032525) ((headline "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 139032525) ((other "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 212168661) ((headline "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 212168661) ((other "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 129175528) ((headline "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 129175528) ((other "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 187497017) ((headline "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 187497017) ((other "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 163438647) ((headline "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 163438647) ((other "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 28011069) ((headline "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 28011069) ((other "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 169128677) ((headline "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 169128677)) :index nil) org-publish-cache)
(puthash "Xedad6c609699d1994fbd3dfbfc5a0046f594e722" '(23708 39806 770039 165000) org-publish-cache)
(puthash "X60b10e45657249748e26f1862d20a8cafdb3b06d" '(23708 39800 30087 265000) org-publish-cache)
(puthash "X297a2d5f61beb7c18d758eee1c8a0970eb210eae" '(23708 39800 34087 236000) org-publish-cache)
(puthash "Xbc661bc7d9c03f75434a5895816a363fcebe8845" '(23708 39799 722089 462000) org-publish-cache)
(puthash "X69843472263bbb2db3f2a3a379e3067e5c007316" '(23708 39799 722089 462000) org-publish-cache)
(puthash "Xa49878e6436c63a33ec7961f621592815ad168b3" '(23708 39799 926088 7000) org-publish-cache)
(puthash "Xff3324583e5d264001a042438b66f6906edcd7b9" '(23708 39799 922088 35000) org-publish-cache)
(puthash "Xb492d0ba24a105f6e93896166c615ea6f2224a8f" '(23708 39799 922088 35000) org-publish-cache)
(puthash "X783cc59a8e40347036bbc7044bbc0ee64bc5a63c" '(23708 39799 926088 7000) org-publish-cache)
(puthash "X06c933a6770ab23d9d51f3f8584b4263423fa6f8" '(23708 39799 926088 7000) org-publish-cache)
(puthash "X1171fcb389a714e29b6bac31cf356cb0aa57a948" '(23708 39799 922088 35000) org-publish-cache)
(puthash "X1e35761d536c25b0a4dc2d75b17651133671c649" '(23708 39799 722089 462000) org-publish-cache)
(puthash "Xf917f4de18bb7a0d1acff8a04d93d6474ab27ecf" '(23708 39799 722089 462000) org-publish-cache)
(puthash "X1af67b234ab9f33867fc80c496f7eedcf4517f9c" '(23708 39800 26087 293000) org-publish-cache)
(puthash "X4b963fd4a17c3680d39d38b91bed7a3e0b12ace5" '(23708 39799 770089 120000) org-publish-cache)
