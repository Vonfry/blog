(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/home/ubuntu/blog/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/home/ubuntu/blog/org/!ann.org" '(:title "!ann") org-publish-cache)
(puthash "/home/ubuntu/blog/org/make Bamboo support Github Pull Request with Status API.org" '(:title "make Bamboo support Github Pull Request with Status API" :description "" :references (((headline "Footnotes") . "orgheadline9") ((headline "stop" "build" "if" "PR") . "orgheadline8") ((headline "notify" "github" "status") . "orgheadline7") ((headline "checkout" "PR" "code") . "orgheadline6") ((headline "config" "Bamboo" "plan") . "orgheadline5") ((headline "but" "what" "about" "the" "custom" "variables") . "orgheadline4") ((headline "github" "webhook") . "orgheadline3") ((headline "bamboo" "magic") . "orgheadline2") ((headline "what's" "wrong" "with" "Bamboo") . "orgheadline1")) :index (("bamboo" "/home/ubuntu/blog/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/home/ubuntu/blog/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/home/ubuntu/blog/org/~jichao.ouyang.org" '(:title "About Me" :description "" :references (((headline "Blog" "[[http://blog.oyanglul.us]]") . "orgheadline26") ((headline "Feb" "1986") . "orgheadline25") ((headline "Feb" "2015") . "orgheadline24") ((headline "Mar" "2015") . "orgheadline23") ((headline "Apr" "2015") . "orgheadline22") ((headline "May" "2015") . "orgheadline21") ((headline "Jun" "2015") . "orgheadline20") ((headline "Jul" "2015") . "orgheadline19") ((headline "Aug" "2015") . "orgheadline18") ((headline "Sep" "2015") . "orgheadline17") ((headline "Oct" "2015") . "orgheadline16") ((headline "Nov" "2015") . "orgheadline15") ((headline "Mar" "2016") . "orgheadline14") ((headline "Jun" "2016") . "orgheadline13") ((headline "Jul" "2016") . "orgheadline12") ((headline "Aug" "2016") . "orgheadline11") ((headline "Talks") . "orgheadline10") ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . "orgheadline9") ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . "orgheadline8") ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . "orgheadline7") ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . "orgheadline6") ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . "orgheadline5") ((headline "Books") . "orgheadline4") ((headline "https://img1.doubanio.com/lpic/s28263518.jpg") . "orgheadline3") ((headline "[[https://github.com/jcouyang/clojure-flavored-javascript][函数式前端攻城指南]]") . "orgheadline2") ((headline "Projects") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/clojure/clojure-the-mini-book.org" '(:title "Clojure The Mini Book" :description "" :references (((headline "多态") . "orgheadline29") ((headline "Concurrency") . "orgheadline28") ((headline "Collection") . "orgheadline27") ((headline "Functional" "Programming") . "orgheadline26") ((headline "我每天用括号当早饭") . "orgheadline25") ((headline "Macro") . "orgheadline24") ((headline "Reader") . "orgheadline23") ((headline "code?" "data?") . "orgheadline22") ((headline "Special" "Forms") . "orgheadline21") ((headline "loop" "recur") . "orgheadline20") ((headline "do") . "orgheadline19") ((headline "let") . "orgheadline18") ((headline "def") . "orgheadline17") ((headline "来试试不一样的Clojure数据结构") . "orgheadline16") ((headline "反引号" "=`=") . "orgheadline15") ((headline "lisp专用的" "'" "引号") . "orgheadline14") ((headline "Map") . "orgheadline13") ((headline "Keyword") . "orgheadline12") ((headline "Set") . "orgheadline11") ((headline "List") . "orgheadline10") ((headline "Vector") . "orgheadline9") ((headline "String") . "orgheadline8") ((headline "Number") . "orgheadline7") ((headline "搭建环境") . "orgheadline6") ((headline "多线程是好东西如果用的对") . "orgheadline5") ((headline "多态是好东西") . "orgheadline4") ((headline "函数式是好东西") . "orgheadline3") ((headline "lisp" "是好东西") . "orgheadline2") ((headline "为什么要学习全是括号的语言") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/emacs/literal-programming-emacs-config.org" '(:title "Literal Programming Emacs Configure" :description "" :references nil :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:title "使用 dotfiles 和 stow 管理你的 dotfiles" :references (((headline "㊙" "Sensitive" "dotfiles") . "orgheadline6") ((headline "submodule" "vs" "subtree") . "orgheadline5") ((headline "push" "to" "github") . "orgheadline4") ((headline "stow" "目录") . "orgheadline3") ((headline "stow" "文件") . "orgheadline2") ((headline "使用" "stow" "管理" "symlink") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:title "自制语言初试 - 入lang" :description "" :references (((headline "在哪里才能买到呢") . "orgheadline13") ((headline "Infix" "macro") . "orgheadline12") ((headline "Existential" "?") . "orgheadline11") ((headline "looprecur") . "orgheadline10") ((headline "destruture" "array") . "orgheadline9") ((headline "block" "scope" "binding") . "orgheadline8") ((headline "Let") . "orgheadline7") ((headline "lambda") . "orgheadline6") ((headline "Ru-lang," "The" "First" "Attampt") . "orgheadline5") ((headline "那macro呢") . "orgheadline4") ((headline "ClojureScript的数据结构移植") . "orgheadline3") ((headline "ClojureScript怎么就不好了") . "orgheadline2") ((headline "Rationale(为毛要整一门语言)") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:title "Clojure 风格的 JavaScript 并发编程" :description "" :references (((headline "Footnotes") . "orgheadline15") ((headline "JavaScript" "版本" "的" "CSP") . "orgheadline14") ((headline "put" ">!") . "orgheadline13") ((headline "take" "<!") . "orgheadline12") ((headline "timeout") . "orgheadline11") ((headline "Goroutines" "in" "JavaScript") . "orgheadline10") ((headline "Generator") . "orgheadline9") ((headline "CSP" "in" "JavaScript[fn:2]") . "orgheadline8") ((headline "CSP," "Channel," "Goroutines") . "orgheadline7") ((headline "Event" "loop") . "orgheadline6") ((headline "CSP") . "orgheadline5") ((headline "异步与多线程") . "orgheadline4") ((headline "什么是并发") . "orgheadline3") ((headline "Communicating" "Sequential" "Processes") . "orgheadline2") ((headline "TL;DR" "SLIDES") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:title "JavaScript玩转Clojure大法之 - Trampoline" :description "" :references (((headline "Trampoline") . "orgheadline4") ((headline "DFA") . "orgheadline3") ((headline "尾递归(tail" "recursion)") . "orgheadline2") ((headline "相互递归(mutual" "recursion)") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-macro.org" '(:title "JavaScript玩转Clojure大法之 - Macro (1)" :description "" :references (((headline "Footnotes") . "orgheadline6") ((headline "Recap") . "orgheadline5") ((headline "case" "macro") . "orgheadline4") ((headline "Rule" "macro") . "orgheadline3") ((headline "Sweet.js") . "orgheadline2") ((headline "Macro") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/essential-ecmascript6.org" '(:title "Essential EcmaScript 6" :description "" :references (((headline "Generator") . "orgheadline9") ((headline "Promises") . "orgheadline8") ((headline "Class") . "orgheadline7") ((headline "Template" "Strings") . "orgheadline6") ((headline "Destructuring") . "orgheadline5") ((headline "Proxy") . "orgheadline4") ((headline "Let") . "orgheadline3") ((headline "Arrow" "Function") . "orgheadline2") ((headline "Tail" "Calling") . "orgheadline1")) :index (("Arrow Function" "/home/ubuntu/blog/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/home/ubuntu/blog/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/home/ubuntu/blog/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/home/ubuntu/blog/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-transducer.org" '(:title "JavaScript玩转Clojure大法之Transducer" :description "" :references (((headline "Footnotes") . "orgheadline8") ((headline "完整例子") . "orgheadline7") ((headline "Is" "it" "Curry?") . "orgheadline6") ((headline "Transducer") . "orgheadline5") ((headline "Reducible") . "orgheadline4") ((headline "[[http://clojure.org/reducers][Reducer]]") . "orgheadline3") ((headline "transform") . "orgheadline2") ((headline "Reducer") . "orgheadline1")) :index (("reducer" "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/home/ubuntu/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/functional-javascript.org" '(:title "Functional JavaScript Mini Book" :description "" :references (((headline "Monad") . "orgheadline42") ((headline "Monad" "在" "JavaScript" "中的应用") . "orgheadline41") ((headline "到底有什么用呢," "Monad") . "orgheadline40") ((headline "走钢索") . "orgheadline39") ((headline "现在来试试用" "Either") . "orgheadline38") ((headline "一般解法") . "orgheadline37") ((headline "Either") . "orgheadline36") ((headline "Functor") . "orgheadline35") ((headline "Functor" "in" "JavaScript") . "orgheadline34") ((headline "举个栗子🌰") . "orgheadline33") ((headline "Functor") . "orgheadline32") ((headline "Transducers") . "orgheadline31") ((headline "完整例子") . "orgheadline30") ((headline "Is" "it" "Curry?") . "orgheadline29") ((headline "Transducer") . "orgheadline28") ((headline "Reducer") . "orgheadline27") ((headline "[[http://clojure.org/reducers][Reducer]]") . "orgheadline26") ((headline "Reducible") . "orgheadline25") ((headline "transform") . "orgheadline24") ((headline "高阶函数(Higher-order" "function)") . "orgheadline23") ((headline "函数组合" "function" "composition") . "orgheadline22") ((headline "pipe") . "orgheadline21") ((headline "Compose") . "orgheadline20") ((headline "柯里化" "currying") . "orgheadline19") ((headline "自动柯里化") . "orgheadline18") ((headline "柯里化函数接口") . "orgheadline17") ((headline "我们来看一个问题") . "orgheadline16") ((headline "所有数字乘以2," "再重构试试看") . "orgheadline15") ((headline "现在我要其中所有数字加1," "然后在连接") . "orgheadline14") ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . "orgheadline13") ((headline "Higher-order" "function") . "orgheadline12") ((headline "函数作为返回值") . "orgheadline11") ((headline "函数作为参数") . "orgheadline10") ((headline "Lambda") . "orgheadline9") ((headline "JavaScript的匿名函数(anonymous" "function)") . "orgheadline8") ((headline "使用匿名函数") . "orgheadline7") ((headline "创建一个匿名函数") . "orgheadline6") ((headline "箭头函数(arrow" "function)") . "orgheadline5") ((headline "Lexical" "=this=") . "orgheadline4") ((headline "为什么要用箭头函数") . "orgheadline3") ((headline "声明一个箭头函数") . "orgheadline2") ((headline "Preface") . "orgheadline1")) :index (("柯里化" "/home/ubuntu/blog/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/home/ubuntu/blog/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/home/ubuntu/blog/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/home/ubuntu/blog/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/home/ubuntu/blog/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/home/ubuntu/blog/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/react-cookbook-mini.org" '(:title "A Compact React Cookbook" :description "" :references (((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . "orgheadline45") ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . "orgheadline44") ((headline "PureRenderMixin") . "orgheadline43") ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . "orgheadline42") ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . "orgheadline41") ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . "orgheadline40") ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . "orgheadline39") ((headline "应用级别" "state") . "orgheadline38") ((headline "router") . "orgheadline37") ((headline "flux") . "orgheadline36") ((headline "store") . "orgheadline35") ((headline "dispatcher") . "orgheadline34") ((headline "event") . "orgheadline33") ((headline "What" "about" "Router" "/" "router" "怎么办") . "orgheadline32") ((headline "[[https://github.com/rackt/react-router][react" "router]]") . "orgheadline31") ((headline "[[https://github.com/flatiron/director][direactor]]") . "orgheadline30") ((headline "server" "side") . "orgheadline29") ((headline "client" "side") . "orgheadline28") ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . "orgheadline27") ((headline "[[https://github.com/netflix/falcor][falcor]]") . "orgheadline26") ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . "orgheadline25") ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . "orgheadline24") ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . "orgheadline23") ((headline "Modular" "and" "Components") . "orgheadline22") ((headline "webpack") . "orgheadline21") ((headline "browserify") . "orgheadline20") ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . "orgheadline19") ((headline "mocha") . "orgheadline18") ((headline "jasmine") . "orgheadline17") ((headline "[[http://facebook.github.io/jest/][Jest]]") . "orgheadline16") ((headline "Why" "Immutable" "/" "为毛要不可变") . "orgheadline15") ((headline "让你的数据结构" "immutable" "的工具们") . "orgheadline14") ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . "orgheadline13") ((headline "[[https://github.com/swannodette/mori][mori]]") . "orgheadline12") ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . "orgheadline11") ((headline "Class") . "orgheadline10") ((headline "状态") . "orgheadline9") ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . "orgheadline8") ((headline "Virtual" "DOM" "（Immutable）") . "orgheadline7") ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . "orgheadline6") ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . "orgheadline5") ((headline "单向有什么好") . "orgheadline4") ((headline "双向有什么不好[fn:1]") . "orgheadline3") ((headline "单向绑定") . "orgheadline2") ((headline "双向绑定") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/reactive-programming.org" '(:title "Monadic Reactive Programming in JavaScript" :description "" :references (((headline "Monad") . "orgheadline4") ((headline "Applicative") . "orgheadline3") ((headline "Functor") . "orgheadline2") ((headline "Stream") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:title "看我们3天 hackday 都干了些什么" :description "" :references (((headline "Footnotes") . "orgheadline20") ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . "orgheadline19") ((headline "1." "把你的" "component" "包到" "Transdux" "里") . "orgheadline18") ((headline "Recap") . "orgheadline17") ((headline "Day" "2" "-" "Show" "Case") . "orgheadline16") ((headline "bindActions") . "orgheadline15") ((headline "分辨不同的" "ReactClass") . "orgheadline14") ((headline "传递" "inputChan" "和" "action" "的" "publication") . "orgheadline13") ((headline "提取框架") . "orgheadline12") ((headline "初版，只实现一个功能") . "orgheadline11") ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . "orgheadline10") ((headline "Day" "0" "-" "Inception") . "orgheadline9") ((headline "Atom") . "orgheadline8") ((headline "Transducers") . "orgheadline7") ((headline "PubSub") . "orgheadline6") ((headline "Channels") . "orgheadline5") ((headline "Clojure" "Avengers" "来相助") . "orgheadline4") ((headline "redux") . "orgheadline3") ((headline "flux") . "orgheadline2") ((headline "Rationale") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/understand-prototype.org" '(:title "理解JavaScript的原型链和继承" :description "" :references (((headline "Footnotes") . "orgheadline6") ((headline "Bonus" "继承") . "orgheadline5") ((headline "也没什么卵用得" "contructor") . "orgheadline4") ((headline "=__proto__=" "才是原型链") . "orgheadline3") ((headline "prototype属性是原型链吗？") . "orgheadline2") ((headline "instanceof" "引发的问题") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/ru-lang-second-attampt.org" '(:title "入语言第二试: readtable 与 core.async" :description "" :references (((headline "core.async") . "orgheadline2") ((headline "Readtable") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/rethinking-react-dataflow.org" '(:title "Rethinking React Dataflow" :description "" :references (((headline "Model") . "orgheadline8") ((headline "继续" "flatMap" "结果到流上") . "orgheadline7") ((headline "发送" "API" "请求") . "orgheadline6") ((headline "Debounce") . "orgheadline5") ((headline "一个简单的" "Pure" "Component") . "orgheadline4") ((headline "🌰") . "orgheadline3") ((headline "Monadic") . "orgheadline2") ((headline "Reactive") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/functional-javascript/zh/!lambda.org" '(:title "Lambda") org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/functional-javascript/zh/!higher-order-function.org" '(:title "高阶函数 Higher-order function") org-publish-cache)
(puthash "/home/ubuntu/blog/org/javascript/functional-javascript/zh/!monad.org" '(:title "!monad") org-publish-cache)
(puthash "/home/ubuntu/blog/org/scala/implicit-conversions.org" '(:title "Implicit, to be or not to be" :description "" :references (((headline "Footnotes") . "orgheadline8") ((headline "or" "Not" "To" "Be") . "orgheadline7") ((headline "To" "Be") . "orgheadline6") ((headline "类型类" "Type" "Class") . "orgheadline5") ((headline "隐式转换参数") . "orgheadline4") ((headline "语法糖") . "orgheadline3") ((headline "隐式转换接受者") . "orgheadline2") ((headline "隐式转换是什么鬼") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "Xb03b2d8dc1dc19c6a245233963b3f64a14628919" 1465491564 org-publish-cache)
(puthash "X6276545b6d3f708e11bd1b769491858538fe6792" 1469243928 org-publish-cache)
(puthash "X389c853803787c8ce4a027523f0404be97496e37" 1465491564 org-publish-cache)
(puthash "X4568d6bf90ec3563e10d7447cb3bf0434fcda488" 1465491564 org-publish-cache)
(puthash "Xa57ff0049c2a6676d048b0b08c940488d54b8adc" 1465491564 org-publish-cache)
(puthash "X44e3f9771db080c812c74cbb31838a56001b51dd" 1465491564 org-publish-cache)
(puthash "X04e643d2cbc3bb9968b964cc90b5c653950d399c" 1465491564 org-publish-cache)
(puthash "X11df95d93f6acb4051d6475bbdb7cfe4252c2abc" 1465491564 org-publish-cache)
(puthash "X75b6d17e3cc057bbd99738e90e99c1248fd26b1d" 1465491564 org-publish-cache)
(puthash "X4a75017db94a0ccd080ecdfa5afeed60abcf4eb6" 1465491564 org-publish-cache)
(puthash "Xbf23d614e30bb4162b025695f4e4517f5f0cddb7" 1465491564 org-publish-cache)
(puthash "Xaeedb58435fb2a670e9ba6b24a93087b58123999" 1465491564 org-publish-cache)
(puthash "X77201b816e036e6a0d4822c21302d1fc0342e7e2" 1470622932 org-publish-cache)
(puthash "X5ccd95c41ff9a92acf6448f591c64e3e2117ec1d" 1465491564 org-publish-cache)
(puthash "X5da119a3da414e088746ae6643b6d1e738f42261" 1465491564 org-publish-cache)
(puthash "X4a7bac83ba225b349b4df9b2ed13c2a0f5418d0c" 1465491564 org-publish-cache)
(puthash "X3c8d3c46bd67193fc0678a57e8a3f632804e28cc" 1465491564 org-publish-cache)
(puthash "Xa8cc873c69ca1faae49a2d3faa8de1a2d5b90da6" 1465491564 org-publish-cache)
(puthash "/home/ubuntu/blog/org/index.org" '(:references (((headline "Books") . "orgheadline34") ((headline "Projects") . "orgheadline33") ((headline "[[file:~jichao.ouyang.org][About" "Me]]") . "orgheadline32") ((headline "what's" "wrong" "with" "Bamboo") . "orgheadline31") ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . "orgheadline30") ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . "orgheadline29") ((headline "Arrow" "Function") . "orgheadline28") ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . "orgheadline27") ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . "orgheadline26") ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . "orgheadline25") ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . "orgheadline24") ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . "orgheadline23") ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . "orgheadline22") ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . "orgheadline21") ((headline "ClojureScript怎么就不好了") . "orgheadline20") ((headline "Rationale(为毛要整一门语言)") . "orgheadline19") ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . "orgheadline18") ((headline "instanceof" "引发的问题") . "orgheadline17") ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . "orgheadline16") ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . "orgheadline15") ((headline "Stream") . "orgheadline14") ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . "orgheadline13") ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . "orgheadline12") ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . "orgheadline11") ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . "orgheadline10") ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . "orgheadline9") ((headline "Reactive") . "orgheadline8") ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . "orgheadline7") ((headline "隐式转换是什么鬼") . "orgheadline6") ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . "orgheadline5") ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . "orgheadline4") ((headline "[[file:project-euler.org][Project" "Euler]]") . "orgheadline3") ((headline "前言") . "orgheadline2") ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . "orgheadline1")) :index nil :title "Jichao Ouyang's Blog") org-publish-cache)
(puthash "X6acc0414b717c57c6ac683f037bd6924d550ef2c" 1470879461 org-publish-cache)
(puthash "/home/ubuntu/blog/org/archive.org" '(:title "Jichao Ouyang's Blog" :references (((headline "Feb" "1986") . "orgheadline16") ((headline "Feb" "2015") . "orgheadline15") ((headline "Mar" "2015") . "orgheadline14") ((headline "Apr" "2015") . "orgheadline13") ((headline "May" "2015") . "orgheadline12") ((headline "Jun" "2015") . "orgheadline11") ((headline "Jul" "2015") . "orgheadline10") ((headline "Aug" "2015") . "orgheadline9") ((headline "Sep" "2015") . "orgheadline8") ((headline "Oct" "2015") . "orgheadline7") ((headline "Nov" "2015") . "orgheadline6") ((headline "Mar" "2016") . "orgheadline5") ((headline "Jun" "2016") . "orgheadline4") ((headline "Jul" "2016") . "orgheadline3") ((headline "Aug" "2016") . "orgheadline2") ((headline "Archive") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/home/ubuntu/blog/org/theindex.org" '(:references (((headline "柯") . "orgheadline10") ((headline "X") . "orgheadline9") ((headline "T") . "orgheadline8") ((headline "R") . "orgheadline7") ((headline "L") . "orgheadline6") ((headline "G") . "orgheadline5") ((headline "D") . "orgheadline4") ((headline "C") . "orgheadline3") ((headline "B") . "orgheadline2") ((headline "A") . "orgheadline1")) :index nil :title "Index") org-publish-cache)
(puthash "Xecbc55153182a3063c29d53dd271855890837aae" 1470879450 org-publish-cache)
(puthash "X523159507f85953e4f2b4be0767c8f88bdd55438" 1470879459 org-publish-cache)
(puthash "/home/ubuntu/blog/org/functional-ruby.org" '(:title "Functional Ruby" :references (((headline "Footnotes") . "orgheadline20") ((headline "pmap") . "orgheadline19") ((headline "actor" "model" "多线程") . "orgheadline18") ((headline "一个简单的" "Either" "Monad[fn:2]") . "orgheadline17") ((headline "一个简单的例子") . "orgheadline16") ((headline "其实只是个简单的语法糖") . "orgheadline15") ((headline "/正则/") . "orgheadline14") ((headline "lambda" "（aka" "guard）") . "orgheadline13") ((headline "表达式") . "orgheadline12") ((headline "类型") . "orgheadline11") ((headline "值") . "orgheadline10") ((headline "case" "when") . "orgheadline9") ((headline "destructure") . "orgheadline8") ((headline "pattern" "matching") . "orgheadline7") ((headline "闭包") . "orgheadline6") ((headline "参数检查") . "orgheadline5") ((headline "return") . "orgheadline4") ((headline "为什么" "lambda" "是" "proc") . "orgheadline3") ((headline "神奇的" "=&=") . "orgheadline2") ((headline "lambda") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "X36ed5bf34f1fb3dd676e9017318c56d332b1168b" 1469329132 org-publish-cache)
(puthash "Xd98f5f35636eff9a0fa8c1145c4156207aae4b9c" 1469369554 org-publish-cache)
(puthash "/home/ubuntu/blog/org/project-euler.org" '(:title "Project Euler" :references (((headline "To" "be" "continue" "...") . "orgheadline10") ((headline "Haskell") . "orgheadline9") ((headline "#2" "Even" "Fibonacci" "numbers") . "orgheadline8") ((headline "Python") . "orgheadline7") ((headline "JavaScript") . "orgheadline6") ((headline "Haskell") . "orgheadline5") ((headline "Scala") . "orgheadline4") ((headline "Ruby") . "orgheadline3") ((headline "Clojure") . "orgheadline2") ((headline "Multiples" "of" "3" "and" "5") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "Xd610988c38ce43d650fa263ae21f3aef0be91c49" 1470620582 org-publish-cache)
(puthash "/home/ubuntu/blog/org/write-yourself-a-scheme-in-haskell/!chapter-1-compiling-and-running.org" '(:title "!chapter-1-compiling-and-running") org-publish-cache)
(puthash "/home/ubuntu/blog/org/write-yourself-a-scheme-in-haskell/index.org" '(:title "用Haskell48小时写你个Scheme" :references (((headline "待续...") . "orgheadline6") ((headline "练习") . "orgheadline5") ((headline "操作符") . "orgheadline4") ((headline "Hello" "World") . "orgheadline3") ((headline "跑起来") . "orgheadline2") ((headline "前言") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "Xc5f0c5d6bc573550aed8ad7be5531d14972d9fd4" 1470751275 org-publish-cache)
(puthash "/home/ubuntu/blog/org/write-yourself-a-scheme-in-haskell/!chapter-2-parsing.org" '(:title "!chapter-2-parsing") org-publish-cache)
