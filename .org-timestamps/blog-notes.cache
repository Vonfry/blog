(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/root/project/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/root/project/org/grokking-monad/index.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "References") . 217483048) ((headline "References") . 217483048) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 163248655) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 163248655) ((other "Comonad") . 242947416) ((headline "Comonad") . 242947416) ((other "Eff") . 14108842) ((headline "Eff") . 14108842) ((other "Free" "Monoid") . 163428617) ((headline "Free" "Monoid") . 163428617) ((other "Free" "Monad") . 95261006) ((headline "Free" "Monad") . 95261006) ((other "Interpreter") . 215949581) ((headline "Interpreter") . 215949581) ((other "Free" "Functor") . 129335395) ((headline "Free" "Functor") . 129335395) ((other "Coyoneda") . 194236293) ((headline "Coyoneda") . 194236293) ((other "Free") . 260189213) ((headline "Free") . 260189213) ((other "ST" "Monad") . 45040333) ((headline "ST" "Monad") . 45040333) ((other "MonadPlus") . 53033598) ((headline "MonadPlus") . 53033598) ((other "Alternative") . 170779639) ((headline "Alternative") . 170779639) ((other "Monad" "Transform") . 34460729) ((headline "Monad" "Transform") . 34460729) ((other "ReaderT") . 129253553) ((headline "ReaderT") . 129253553) ((other "RWS") . 206421009) ((headline "RWS") . 206421009) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 135337573) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 135337573) ((other "Cont") . 39458945) ((headline "Cont") . 39458945) ((other "Validation") . 31132185) ((headline "Validation") . 31132185) ((other "回到" "Validation") . 199264870) ((headline "回到" "Validation") . 199264870) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 78026443) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 78026443) ((other "State") . 266903151) ((headline "State") . 266903151) ((other "Writer") . 173391708) ((headline "Writer") . 173391708) ((other "Reader") . 167228745) ((headline "Reader") . 167228745) ((other "do" "notation") . 8801651) ((headline "do" "notation") . 8801651) ((other "Either") . 156229014) ((headline "Either") . 156229014) ((other "Either" "Monad") . 249849614) ((headline "Either" "Monad") . 249849614) ((other "Product" "&" "Coproduct") . 142152883) ((headline "Product" "&" "Coproduct") . 142152883) ((other "Maybe") . 228199762) ((headline "Maybe") . 228199762) ((other "Identity") . 248405549) ((headline "Identity") . 248405549) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 12832493) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 12832493) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 1336964) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 1336964) ((other "Rank" "N" "Type") . 62431571) ((headline "Rank" "N" "Type") . 62431571) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 14791131) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 14791131) ((other "结合律") . 223019520) ((headline "结合律") . 223019520) ((other "三角等式") . 72418788) ((headline "三角等式") . 72418788) ((other "/Adjunction" "Functor/" "伴随函子") . 250524872) ((headline "/Adjunction" "Functor/" "伴随函子") . 250524872) ((other "String" "Diagram") . 61734879) ((headline "String" "Diagram") . 61734879) ((other "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 20207807) ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 20207807) ((target "NT") . 186468728) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 192790007) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 192790007) ((other "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 5619512) ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 5619512) ((other "/Category/") . 155145586) ((headline "/Category/") . 155145586) ((other "/Duel/") . 6166076) ((headline "/Duel/") . 6166076) ((other "/Hask/") . 110840620) ((headline "/Hask/") . 110840620)) :index (("Catergory" "/root/project/org/grokking-monad/index.org" (name . "/Category/")) ("范畴" "/root/project/org/grokking-monad/index.org" (name . "/Category/")) ("Kind" "/root/project/org/grokking-monad/index.org" (name . "/Category/")) ("Hask" "/root/project/org/grokking-monad/index.org" (name . "/Hask/")) ("Duel" "/root/project/org/grokking-monad/index.org" (name . "/Duel/")) ("Functor" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("猫" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>Cat<rt> +猫+</rt></ruby>@@/")) ("Natural Transformations" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("自然变换" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("Adjunction Functor" "/root/project/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/project/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/project/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/project/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/project/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")))) org-publish-cache)
(puthash "/root/project/org/grokking-monad/part1.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 149013808) ((headline "Footnotes") . 149013808) ((other "Summary") . 250928079) ((headline "Summary") . 250928079) ((other "/Kleisli" "Catergory/") . 252336561) ((headline "/Kleisli" "Catergory/") . 252336561) ((other "Rank" "N" "Type") . 53274962) ((headline "Rank" "N" "Type") . 53274962) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 107049703) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 107049703) ((other "结合律") . 227339165) ((headline "结合律") . 227339165) ((other "三角等式") . 12711139) ((headline "三角等式") . 12711139) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 255200790) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 255200790) ((other "/Adjunction" "Functor/" "伴随函子") . 3321360) ((headline "/Adjunction" "Functor/" "伴随函子") . 3321360) ((other "String" "Diagram") . 171342275) ((headline "String" "Diagram") . 171342275) ((target "NT") . 261769756) ((other "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 102236645) ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 102236645) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 129550958) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 129550958) ((other "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 58204459) ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 58204459) ((other "/Duel/") . 107012838) ((headline "/Duel/") . 107012838) ((other "/Hask/") . 151688084) ((headline "/Hask/") . 151688084) ((other "/Category/") . 154013905) ((headline "/Category/") . 154013905) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 3052766) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 3052766)) :index (("Catergory" "/root/project/org/grokking-monad/part1.org" (name . "/Category/")) ("范畴" "/root/project/org/grokking-monad/part1.org" (name . "/Category/")) ("Kind" "/root/project/org/grokking-monad/part1.org" (name . "/Category/")) ("Hask" "/root/project/org/grokking-monad/part1.org" (name . "/Hask/")) ("Duel" "/root/project/org/grokking-monad/part1.org" (name . "/Duel/")) ("Functor" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("猫" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>Cat<rt> +猫+</rt></ruby>@@/")) ("Natural Transformations" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("自然变换" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("Adjunction Functor" "/root/project/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/project/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/project/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/project/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/project/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/root/project/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Rank N Type" "/root/project/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Kleisi Catergory" "/root/project/org/grokking-monad/part1.org" (name . "/Kleisli Catergory/")))) org-publish-cache)
(puthash "/root/project/org/grokking-monad/scala/en/part2.org" '(:date (23549 55936) :title "Grokking Monad in Scala" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/part2.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Summary") . 120953454) ((headline "Summary") . 120953454) ((other "Cont") . 171673052) ((headline "Cont") . 171673052) ((other "回到" "Validation") . 184860807) ((headline "回到" "Validation") . 184860807) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 43935571) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 43935571) ((other "Validation") . 72289295) ((headline "Validation") . 72289295) ((other "State") . 163690859) ((headline "State") . 163690859) ((other "Writer") . 26744255) ((headline "Writer") . 26744255) ((other "do" "notation") . 56256767) ((headline "do" "notation") . 56256767) ((other "Reader") . 230809741) ((headline "Reader") . 230809741) ((other "Either" "Monad") . 106848470) ((headline "Either" "Monad") . 106848470) ((other "Product" "&" "Coproduct") . 38122552) ((headline "Product" "&" "Coproduct") . 38122552) ((other "Either") . 151713379) ((headline "Either") . 151713379) ((other "Maybe") . 159191869) ((headline "Maybe") . 159191869) ((other "Identity") . 72290373) ((headline "Identity") . 72290373) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 57263939) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 57263939)) :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/part3.org" '(:date (23387 45568) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Comonad") . 39116830) ((headline "Comonad") . 39116830) ((other "Eff") . 7999224) ((headline "Eff") . 7999224) ((other "Free" "Monoid") . 185887324) ((headline "Free" "Monoid") . 185887324) ((other "Interpreter") . 155491602) ((headline "Interpreter") . 155491602) ((other "Free" "Functor") . 119816224) ((headline "Free" "Functor") . 119816224) ((other "Coyoneda") . 85576149) ((headline "Coyoneda") . 85576149) ((other "Free") . 49651640) ((headline "Free") . 49651640) ((other "Free" "Monad") . 89069708) ((headline "Free" "Monad") . 89069708) ((other "ST" "Monad") . 255613627) ((headline "ST" "Monad") . 255613627) ((other "MonadPlus") . 113401349) ((headline "MonadPlus") . 113401349) ((other "Alternative") . 167493367) ((headline "Alternative") . 167493367) ((other "ReaderT") . 15246984) ((headline "ReaderT") . 15246984) ((other "Monad" "Transform") . 44627328) ((headline "Monad" "Transform") . 44627328) ((other "RWS") . 60803827) ((headline "RWS") . 60803827) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 45933044) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 45933044)) :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/scala/en/part3.org" '(:date (23537 64768) :title "Grokking Monad in Scala - Free" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/2016-year-in-review.org" '(:date (22621 47744) :title "2016 Year in Review" :crossrefs (((other "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 195027432) ((headline "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 195027432) ((other "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 58973050) ((headline "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 58973050) ((other "[[https://github.com/cujojs/most][most]]") . 262929291) ((headline "[[https://github.com/cujojs/most][most]]") . 262929291) ((other "[[https://github.com/reactive-react/transdux][transdux]]") . 193644471) ((headline "[[https://github.com/reactive-react/transdux][transdux]]") . 193644471) ((other "[[https://github.com/jcouyang/union-type][union-type]]") . 191523533) ((headline "[[https://github.com/jcouyang/union-type][union-type]]") . 191523533) ((other "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 196499820) ((headline "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 196499820) ((other "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 234937428) ((headline "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 234937428) ((other "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 241893847) ((headline "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 241893847) ((other "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . 56712718) ((headline "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . 56712718) ((other "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 162521669) ((headline "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 162521669) ((other "[[https://github.com/jcouyang/cat.js][cat.js]]") . 203900538) ((headline "[[https://github.com/jcouyang/cat.js][cat.js]]") . 203900538) ((other "duckling") . 96565399) ((headline "duckling") . 96565399) ((other "同构的" "JS" "方法") . 90210112) ((headline "同构的" "JS" "方法") . 90210112) ((other "core.async") . 146848684) ((headline "core.async") . 146848684) ((other "[[https://github.com/jcouyang/conjs][conjs]]") . 243126712) ((headline "[[https://github.com/jcouyang/conjs][conjs]]") . 243126712) ((other "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 192647840) ((headline "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 192647840) ((other "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 226224501) ((headline "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 226224501)) :index nil) org-publish-cache)
(puthash "/root/project/org/shutting-down-gulugulu.org" '(:date (23520 55680) :title "关闭 gulugulu 弹幕" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:date (22065 24960) :title "使用 dotfiles 和 stow 管理你的 dotfiles" :crossrefs (((other "㊙" "Sensitive" "dotfiles") . 18906902) ((headline "㊙" "Sensitive" "dotfiles") . 18906902) ((other "submodule" "vs" "subtree") . 182995433) ((headline "submodule" "vs" "subtree") . 182995433) ((other "push" "to" "github") . 222696485) ((headline "push" "to" "github") . 222696485) ((other "stow" "目录") . 97404854) ((headline "stow" "目录") . 97404854) ((other "stow" "文件") . 262765145) ((headline "stow" "文件") . 262765145) ((other "使用" "stow" "管理" "symlink") . 189127235) ((headline "使用" "stow" "管理" "symlink") . 189127235)) :index nil) org-publish-cache)
(puthash "/root/project/org/make Bamboo support Github Pull Request with Status API.org" '(:date (21731 54784) :title "make Bamboo support Github Pull Request with Status API" :crossrefs (((other "Footnotes") . 211981752) ((headline "Footnotes") . 211981752) ((other "stop" "build" "if" "PR") . 182639767) ((headline "stop" "build" "if" "PR") . 182639767) ((other "notify" "github" "status") . 182089798) ((headline "notify" "github" "status") . 182089798) ((other "checkout" "PR" "code") . 172994168) ((headline "checkout" "PR" "code") . 172994168) ((other "config" "Bamboo" "plan") . 144377776) ((headline "config" "Bamboo" "plan") . 144377776) ((other "but" "what" "about" "the" "custom" "variables") . 232310765) ((headline "but" "what" "about" "the" "custom" "variables") . 232310765) ((other "github" "webhook") . 208645776) ((headline "github" "webhook") . 208645776) ((other "bamboo" "magic") . 91947245) ((headline "bamboo" "magic") . 91947245) ((other "what's" "wrong" "with" "Bamboo") . 68415043) ((headline "what's" "wrong" "with" "Bamboo") . 68415043)) :index (("bamboo" "/root/project/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/root/project/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/root/project/org/xreact/typeclasses-in-typescript.org" '(:date (22963 12032) :title "Type Classes in TypeScript" :crossrefs (((other "Apply") . 15731979) ((headline "Apply") . 15731979) ((other "Cartesian") . 97030710) ((headline "Cartesian") . 97030710) ((other "Reflect" "Metadata") . 37324060) ((headline "Reflect" "Metadata") . 37324060) ((other "多态") . 43466160) ((headline "多态") . 43466160) ((other "Higher" "Kind" "Type") . 185953341) ((headline "Higher" "Kind" "Type") . 185953341) ((other "Functor") . 246233187) ((headline "Functor") . 246233187)) :index nil) org-publish-cache)
(puthash "/root/project/org/xreact/fun-with-fantasy.org" '(:date (22963 12032) :title "xReact Fantasy" :crossrefs (((other "小结") . 50596815) ((headline "小结") . 50596815) ((other "Asynchronous") . 78655805) ((headline "Asynchronous") . 78655805) ((other "多个参数") . 130828702) ((headline "多个参数") . 130828702) ((other "Counter" "例子") . 238684294) ((headline "Counter" "例子") . 238684294) ((other "render") . 102332968) ((headline "render") . 102332968) ((other "Component") . 727100) ((headline "Component") . 727100) ((other "View") . 193386257) ((headline "View") . 193386257) ((other "Transform") . 258682993) ((headline "Transform") . 258682993)) :index nil) org-publish-cache)
(puthash "/root/project/org/how-functional-programming-and-flink-will-save-your-ass-from-big-data.org" '(:date (23498 28672) :title "使用 Flink 解救多线程 Scala 应用" :crossrefs (((other "Footnotes") . 126151380) ((headline "Footnotes") . 126151380) ((other "Flink" "Cluster" "on" "K8s") . 124415274) ((headline "Flink" "Cluster" "on" "K8s") . 124415274) ((other "Flink" "Cluster" "in" "Docker") . 241590169) ((headline "Flink" "Cluster" "in" "Docker") . 241590169) ((other "Flink" "Scala") . 176354212) ((headline "Flink" "Scala") . 176354212) ((other "Scala") . 230096708) ((headline "Scala") . 230096708) ((other "问题") . 113063742) ((headline "问题") . 113063742)) :index nil) org-publish-cache)
(puthash "/root/project/org/clojure/clojure-the-mini-book.org" '(:date (21742 25088) :title "Clojure The Mini Book" :crossrefs (((other "多态") . 42879727) ((headline "多态") . 42879727) ((other "Concurrency") . 78827631) ((headline "Concurrency") . 78827631) ((other "Collection") . 167202464) ((headline "Collection") . 167202464) ((other "Functional" "Programming") . 191478327) ((headline "Functional" "Programming") . 191478327) ((other "Macro") . 60588450) ((headline "Macro") . 60588450) ((other "Reader") . 115710906) ((headline "Reader") . 115710906) ((other "code?" "data?") . 162672619) ((headline "code?" "data?") . 162672619) ((other "Special" "Forms") . 156872409) ((headline "Special" "Forms") . 156872409) ((other "loop" "recur") . 240185538) ((headline "loop" "recur") . 240185538) ((other "do") . 184039331) ((headline "do") . 184039331) ((other "let") . 110535378) ((headline "let") . 110535378) ((other "def") . 198771632) ((headline "def") . 198771632) ((other "来试试不一样的Clojure数据结构") . 266441855) ((headline "来试试不一样的Clojure数据结构") . 266441855) ((other "反引号" "=`=") . 64246823) ((headline "反引号" "=`=") . 64246823) ((other "lisp专用的" "'" "引号") . 210401008) ((headline "lisp专用的" "'" "引号") . 210401008) ((other "Map") . 123900158) ((headline "Map") . 123900158) ((other "Keyword") . 42299605) ((headline "Keyword") . 42299605) ((other "Set") . 99553740) ((headline "Set") . 99553740) ((other "List") . 222693972) ((headline "List") . 222693972) ((other "Vector") . 150073838) ((headline "Vector") . 150073838) ((other "String") . 53434079) ((headline "String") . 53434079) ((other "Number") . 223579056) ((headline "Number") . 223579056) ((other "搭建环境") . 103919004) ((headline "搭建环境") . 103919004) ((other "多线程是好东西如果用的对") . 102195847) ((headline "多线程是好东西如果用的对") . 102195847) ((other "多态是好东西") . 48115270) ((headline "多态是好东西") . 48115270) ((other "函数式是好东西") . 164119836) ((headline "函数式是好东西") . 164119836) ((other "lisp" "是好东西") . 180812206) ((headline "lisp" "是好东西") . 180812206) ((other "为什么要学习全是括号的语言") . 39480176) ((headline "为什么要学习全是括号的语言") . 39480176) ((other "我每天用括号当早饭") . 35483227) ((headline "我每天用括号当早饭") . 35483227)) :index nil) org-publish-cache)
(puthash "/root/project/org/scala/implicit-conversions.org" '(:date (22360 45440) :title "Implicit, to be or not to be" :crossrefs (((other "Footnotes") . 254111152) ((headline "Footnotes") . 254111152) ((other "or" "Not" "To" "Be") . 171591979) ((headline "or" "Not" "To" "Be") . 171591979) ((other "To" "Be") . 181850393) ((headline "To" "Be") . 181850393) ((other "类型类" "Type" "Class") . 67585969) ((headline "类型类" "Type" "Class") . 67585969) ((other "隐式转换参数") . 110142082) ((headline "隐式转换参数") . 110142082) ((other "语法糖") . 62199976) ((headline "语法糖") . 62199976) ((other "隐式转换接受者") . 102162988) ((headline "隐式转换接受者") . 102162988) ((other "隐式转换是什么鬼") . 135763996) ((headline "隐式转换是什么鬼") . 135763996)) :index nil) org-publish-cache)
(puthash "/root/project/org/scala/3-layer-cake.org" '(:date (23704 6656) :title "3 Layer Scala Cake" :crossrefs (((other "Footnotes") . 225392205) ((headline "Footnotes") . 225392205) ((other "Layer" "1:" "ReaderT") . 185261175) ((headline "Layer" "1:" "ReaderT") . 185261175) ((other "Layer" "2:" "MTL" "+" "Interpreter") . 251797683) ((headline "Layer" "2:" "MTL" "+" "Interpreter") . 251797683) ((other "Layer" "3:" "Business" "(Free)") . 27833549) ((headline "Layer" "3:" "Business" "(Free)") . 27833549) ((other "ReaderT" "+" "MTL" "+" "Free") . 1768388) ((headline "ReaderT" "+" "MTL" "+" "Free") . 1768388) ((other "Free" "Monad") . 204216584) ((headline "Free" "Monad") . 204216584) ((other "MTL") . 200109127) ((headline "MTL") . 200109127) ((other "The" "Needs" "of" "State") . 267612854) ((headline "The" "Needs" "of" "State") . 267612854) ((other "3" "Layer" "Cake") . 76924324) ((headline "3" "Layer" "Cake") . 76924324) ((other "Refactor") . 4370079) ((headline "Refactor") . 4370079) ((other "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 48376679) ((headline "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 48376679) ((other "ReaderT") . 13855200) ((headline "ReaderT") . 13855200) ((other "IO") . 104109020) ((headline "IO") . 104109020) ((other "Imperative") . 213603478) ((headline "Imperative") . 213603478) ((other "Retro") . 164204673) ((headline "Retro") . 164204673) ((other "Take" "2:" "ReaderT" "Pattern") . 6007135) ((headline "Take" "2:" "ReaderT" "Pattern") . 6007135) ((other "Take" "1:" "IO") . 126028644) ((headline "Take" "1:" "IO") . 126028644) ((other "The" "Program") . 234534204) ((headline "The" "Program") . 234534204)) :index nil) org-publish-cache)
(puthash "/root/project/org/emacs/literal-programming-emacs-config.org" '(:date (21835 64640) :title "Literal Programming Emacs Configure" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:date (21895 20480) :title "自制语言初试 - 入lang" :crossrefs (((other "在哪里才能买到呢") . 102170846) ((headline "在哪里才能买到呢") . 102170846) ((other "Infix" "macro") . 153795978) ((headline "Infix" "macro") . 153795978) ((other "Existential" "?") . 208045093) ((headline "Existential" "?") . 208045093) ((other "looprecur") . 22244464) ((headline "looprecur") . 22244464) ((other "destruture" "array") . 135897054) ((headline "destruture" "array") . 135897054) ((other "block" "scope" "binding") . 100580502) ((headline "block" "scope" "binding") . 100580502) ((other "Let") . 5540192) ((headline "Let") . 5540192) ((other "lambda") . 217983245) ((headline "lambda") . 217983245) ((other "Ru-lang," "The" "First" "Attampt") . 1398007) ((headline "Ru-lang," "The" "First" "Attampt") . 1398007) ((other "那macro呢") . 40053782) ((headline "那macro呢") . 40053782) ((other "ClojureScript的数据结构移植") . 213713657) ((headline "ClojureScript的数据结构移植") . 213713657) ((other "ClojureScript怎么就不好了") . 85340624) ((headline "ClojureScript怎么就不好了") . 85340624) ((other "Rationale(为毛要整一门语言)") . 11159082) ((headline "Rationale(为毛要整一门语言)") . 11159082)) :index nil) org-publish-cache)
(puthash "/root/project/org/scala/finch-vs-http4s.org" '(:date (23566 65024) :title "Finch vs Http4s, which is FPer" :crossrefs (((other "Http4s") . 113193764) ((headline "Http4s") . 113193764) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 150330378) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 150330378) ((other "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 20834830) ((headline "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 20834830) ((other "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 137148000) ((headline "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 137148000) ((other "Finch") . 19999242) ((headline "Finch") . 19999242) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎") . 139321485) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎") . 139321485) ((other "extensible:" "🍎" "🍎") . 260457706) ((headline "extensible:" "🍎" "🍎") . 260457706) ((other "composible:" "🍎" "🍎" "🍎" "🍎") . 197387532) ((headline "composible:" "🍎" "🍎" "🍎" "🍎") . 197387532)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/rethinking-react-dataflow.org" '(:date (22228 56192) :title "Rethinking React Dataflow" :crossrefs (((other "Model") . 199523722) ((headline "Model") . 199523722) ((other "继续" "flatMap" "结果到流上") . 209375089) ((headline "继续" "flatMap" "结果到流上") . 209375089) ((other "发送" "API" "请求") . 250803415) ((headline "发送" "API" "请求") . 250803415) ((other "Debounce") . 209382621) ((headline "Debounce") . 209382621) ((other "一个简单的" "Pure" "Component") . 185392329) ((headline "一个简单的" "Pure" "Component") . 185392329) ((other "🌰") . 97273386) ((headline "🌰") . 97273386) ((other "Monadic") . 199823695) ((headline "Monadic") . 199823695) ((other "Reactive") . 192248724) ((headline "Reactive") . 192248724)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:date (22097 1408) :title "看我们3天 hackday 都干了些什么" :crossrefs (((other "Footnotes") . 68283053) ((headline "Footnotes") . 68283053) ((other "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 30201105) ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 30201105) ((other "1." "把你的" "component" "包到" "Transdux" "里") . 29239471) ((headline "1." "把你的" "component" "包到" "Transdux" "里") . 29239471) ((other "Recap") . 50625879) ((headline "Recap") . 50625879) ((other "Day" "2" "-" "Show" "Case") . 137968838) ((headline "Day" "2" "-" "Show" "Case") . 137968838) ((other "bindActions") . 86336864) ((headline "bindActions") . 86336864) ((other "分辨不同的" "ReactClass") . 261495213) ((headline "分辨不同的" "ReactClass") . 261495213) ((other "传递" "inputChan" "和" "action" "的" "publication") . 156642685) ((headline "传递" "inputChan" "和" "action" "的" "publication") . 156642685) ((other "提取框架") . 50696008) ((headline "提取框架") . 50696008) ((other "初版，只实现一个功能") . 241601482) ((headline "初版，只实现一个功能") . 241601482) ((other "Day" "1" "-" "Hack" "Hack" "Hack...") . 16251044) ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . 16251044) ((other "Day" "0" "-" "Inception") . 124100875) ((headline "Day" "0" "-" "Inception") . 124100875) ((other "Atom") . 66677015) ((headline "Atom") . 66677015) ((other "Transducers") . 26003237) ((headline "Transducers") . 26003237) ((other "PubSub") . 228643020) ((headline "PubSub") . 228643020) ((other "Channels") . 207020074) ((headline "Channels") . 207020074) ((other "Clojure" "Avengers" "来相助") . 217252045) ((headline "Clojure" "Avengers" "来相助") . 217252045) ((other "redux") . 18157927) ((headline "redux") . 18157927) ((other "flux") . 78909398) ((headline "flux") . 78909398) ((other "Rationale") . 119407667) ((headline "Rationale") . 119407667)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/react-cookbook-mini.org" '(:date (22078 36992) :title "A Compact React Cookbook" :crossrefs (((other "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 259020723) ((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 259020723) ((other "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 204963109) ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 204963109) ((other "PureRenderMixin") . 117003793) ((headline "PureRenderMixin") . 117003793) ((other "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 183046520) ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 183046520) ((other "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 170073596) ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 170073596) ((other "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 50591377) ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 50591377) ((other "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 16668986) ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 16668986) ((other "应用级别" "state") . 177154024) ((headline "应用级别" "state") . 177154024) ((other "router") . 63601316) ((headline "router") . 63601316) ((other "flux") . 250032479) ((headline "flux") . 250032479) ((other "store") . 52338650) ((headline "store") . 52338650) ((other "dispatcher") . 255953974) ((headline "dispatcher") . 255953974) ((other "event") . 64084163) ((headline "event") . 64084163) ((other "What" "about" "Router" "/" "router" "怎么办") . 38535143) ((headline "What" "about" "Router" "/" "router" "怎么办") . 38535143) ((other "[[https://github.com/rackt/react-router][react" "router]]") . 35513397) ((headline "[[https://github.com/rackt/react-router][react" "router]]") . 35513397) ((other "[[https://github.com/flatiron/director][direactor]]") . 2052075) ((headline "[[https://github.com/flatiron/director][direactor]]") . 2052075) ((other "server" "side") . 145257643) ((headline "server" "side") . 145257643) ((other "client" "side") . 91494227) ((headline "client" "side") . 91494227) ((other "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 78549464) ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 78549464) ((other "[[https://github.com/netflix/falcor][falcor]]") . 265411891) ((headline "[[https://github.com/netflix/falcor][falcor]]") . 265411891) ((other "[[https://facebook.github.io/relay/][relay/graphql]]") . 174011808) ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . 174011808) ((other "just" "[[https://github.com/cujojs/rest][rest]]") . 32042989) ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . 32042989) ((other "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 145031940) ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 145031940) ((other "Modular" "and" "Components") . 88661500) ((headline "Modular" "and" "Components") . 88661500) ((other "webpack") . 120377262) ((headline "webpack") . 120377262) ((other "browserify") . 7827798) ((headline "browserify") . 7827798) ((other "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 102817156) ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 102817156) ((other "mocha") . 93532238) ((headline "mocha") . 93532238) ((other "jasmine") . 204789129) ((headline "jasmine") . 204789129) ((other "[[http://facebook.github.io/jest/][Jest]]") . 216702729) ((headline "[[http://facebook.github.io/jest/][Jest]]") . 216702729) ((other "Why" "Immutable" "/" "为毛要不可变") . 83104938) ((headline "Why" "Immutable" "/" "为毛要不可变") . 83104938) ((other "让你的数据结构" "immutable" "的工具们") . 241376402) ((headline "让你的数据结构" "immutable" "的工具们") . 241376402) ((other "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 29972235) ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 29972235) ((other "[[https://github.com/swannodette/mori][mori]]") . 172938812) ((headline "[[https://github.com/swannodette/mori][mori]]") . 172938812) ((other "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 114101718) ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 114101718) ((other "Class") . 7005690) ((headline "Class") . 7005690) ((other "状态") . 25392708) ((headline "状态") . 25392708) ((other "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 151503197) ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 151503197) ((other "Virtual" "DOM" "（Immutable）") . 28407700) ((headline "Virtual" "DOM" "（Immutable）") . 28407700) ((other "以前是如何操作" "DOM" "的" "（Mutable）") . 158315579) ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . 158315579) ((other "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 127378210) ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 127378210) ((other "单向有什么好") . 150158550) ((headline "单向有什么好") . 150158550) ((other "双向有什么不好[fn:1]") . 92701008) ((headline "双向有什么不好[fn:1]") . 92701008) ((other "单向绑定") . 169531499) ((headline "单向绑定") . 169531499) ((other "双向绑定") . 84483634) ((headline "双向绑定") . 84483634)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-macro.org" '(:date (21884 50176) :title "JavaScript玩转Clojure大法之 - Macro (1)" :crossrefs (((other "Footnotes") . 185503173) ((headline "Footnotes") . 185503173) ((other "Recap") . 56326067) ((headline "Recap") . 56326067) ((other "case" "macro") . 260894064) ((headline "case" "macro") . 260894064) ((other "Rule" "macro") . 137311753) ((headline "Rule" "macro") . 137311753) ((other "Sweet.js") . 265139648) ((headline "Sweet.js") . 265139648) ((other "Macro") . 206048672) ((headline "Macro") . 206048672)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:date (21864 64896) :title "JavaScript玩转Clojure大法之 - Trampoline" :crossrefs (((other "Trampoline") . 6127512) ((headline "Trampoline") . 6127512) ((other "DFA") . 17067755) ((headline "DFA") . 17067755) ((other "尾递归(tail" "recursion)") . 64843602) ((headline "尾递归(tail" "recursion)") . 64843602) ((other "相互递归(mutual" "recursion)") . 245094289) ((headline "相互递归(mutual" "recursion)") . 245094289)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/functional-javascript.org" '(:date (21842 37888) :title "Functional JavaScript Mini Book" :crossrefs (((other "Monad") . 83720485) ((headline "Monad") . 83720485) ((other "Monad" "在" "JavaScript" "中的应用") . 15666904) ((headline "Monad" "在" "JavaScript" "中的应用") . 15666904) ((other "到底有什么用呢," "Monad") . 198650779) ((headline "到底有什么用呢," "Monad") . 198650779) ((other "走钢索") . 261108727) ((headline "走钢索") . 261108727) ((other "现在来试试用" "Either") . 34673181) ((headline "现在来试试用" "Either") . 34673181) ((other "一般解法") . 201988098) ((headline "一般解法") . 201988098) ((other "Either") . 237085339) ((headline "Either") . 237085339) ((other "Functor") . 217607442) ((headline "Functor") . 217607442) ((other "Functor" "in" "JavaScript") . 104290105) ((headline "Functor" "in" "JavaScript") . 104290105) ((other "举个栗子🌰") . 251258204) ((headline "举个栗子🌰") . 251258204) ((other "Functor") . 79385313) ((headline "Functor") . 79385313) ((other "Transducers") . 137315473) ((headline "Transducers") . 137315473) ((other "完整例子") . 95065490) ((headline "完整例子") . 95065490) ((other "Is" "it" "Curry?") . 141813393) ((headline "Is" "it" "Curry?") . 141813393) ((other "Transducer") . 107988179) ((headline "Transducer") . 107988179) ((other "Reducer") . 211705626) ((headline "Reducer") . 211705626) ((other "[[http://clojure.org/reducers][Reducer]]") . 201941221) ((headline "[[http://clojure.org/reducers][Reducer]]") . 201941221) ((other "Reducible") . 71262823) ((headline "Reducible") . 71262823) ((other "transform") . 224436234) ((headline "transform") . 224436234) ((other "高阶函数(Higher-order" "function)") . 135598999) ((headline "高阶函数(Higher-order" "function)") . 135598999) ((other "函数组合" "function" "composition") . 78379789) ((headline "函数组合" "function" "composition") . 78379789) ((other "pipe") . 33596189) ((headline "pipe") . 33596189) ((other "Compose") . 209375016) ((headline "Compose") . 209375016) ((other "柯里化" "currying") . 149143345) ((headline "柯里化" "currying") . 149143345) ((other "自动柯里化") . 143490160) ((headline "自动柯里化") . 143490160) ((other "柯里化函数接口") . 68857699) ((headline "柯里化函数接口") . 68857699) ((other "我们来看一个问题") . 43221986) ((headline "我们来看一个问题") . 43221986) ((other "所有数字乘以2," "再重构试试看") . 91018691) ((headline "所有数字乘以2," "再重构试试看") . 91018691) ((other "现在我要其中所有数字加1," "然后在连接") . 36001948) ((headline "现在我要其中所有数字加1," "然后在连接") . 36001948) ((other "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 21698509) ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 21698509) ((other "Higher-order" "function") . 261935130) ((headline "Higher-order" "function") . 261935130) ((other "函数作为返回值") . 26649754) ((headline "函数作为返回值") . 26649754) ((other "函数作为参数") . 71259057) ((headline "函数作为参数") . 71259057) ((other "Lambda") . 128385183) ((headline "Lambda") . 128385183) ((other "JavaScript的匿名函数(anonymous" "function)") . 10382784) ((headline "JavaScript的匿名函数(anonymous" "function)") . 10382784) ((other "使用匿名函数") . 116035872) ((headline "使用匿名函数") . 116035872) ((other "创建一个匿名函数") . 33909529) ((headline "创建一个匿名函数") . 33909529) ((other "箭头函数(arrow" "function)") . 254555101) ((headline "箭头函数(arrow" "function)") . 254555101) ((other "Lexical" "=this=") . 170627829) ((headline "Lexical" "=this=") . 170627829) ((other "为什么要用箭头函数") . 170131133) ((headline "为什么要用箭头函数") . 170131133) ((other "声明一个箭头函数") . 175863358) ((headline "声明一个箭头函数") . 175863358) ((other "Preface") . 104973453) ((headline "Preface") . 104973453)) :index (("柯里化" "/root/project/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/root/project/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/root/project/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/root/project/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/root/project/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/root/project/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/project/org/javascript/reactive-programming.org" '(:date (22025 54400) :title "Monadic Reactive Programming in JavaScript" :crossrefs (((other "Monad") . 260244314) ((headline "Monad") . 260244314) ((other "Applicative") . 125134278) ((headline "Applicative") . 125134278) ((other "Functor") . 149862907) ((headline "Functor") . 149862907) ((other "Stream") . 246390053) ((headline "Stream") . 246390053)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" '(:date (21846 34944) :title "JavaScript玩转Clojure大法之Transducer" :crossrefs (((other "Footnotes") . 206848197) ((headline "Footnotes") . 206848197) ((other "完整例子") . 47249227) ((headline "完整例子") . 47249227) ((other "Is" "it" "Curry?") . 160983829) ((headline "Is" "it" "Curry?") . 160983829) ((other "Transducer") . 50896626) ((headline "Transducer") . 50896626) ((other "Reducible") . 139579789) ((headline "Reducible") . 139579789) ((other "[[http://clojure.org/reducers][Reducer]]") . 187335319) ((headline "[[http://clojure.org/reducers][Reducer]]") . 187335319) ((other "transform") . 252859899) ((headline "transform") . 252859899) ((other "Reducer") . 169172405) ((headline "Reducer") . 169172405)) :index (("reducer" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:date (21822 52608) :title "Clojure 风格的 JavaScript 并发编程" :crossrefs (((other "Footnotes") . 57121079) ((headline "Footnotes") . 57121079) ((other "JavaScript" "版本" "的" "CSP") . 50004324) ((headline "JavaScript" "版本" "的" "CSP") . 50004324) ((other "put" ">!") . 41192454) ((headline "put" ">!") . 41192454) ((other "take" "<!") . 151788544) ((headline "take" "<!") . 151788544) ((other "timeout") . 49385881) ((headline "timeout") . 49385881) ((other "Goroutines" "in" "JavaScript") . 170419934) ((headline "Goroutines" "in" "JavaScript") . 170419934) ((other "Generator") . 209201199) ((headline "Generator") . 209201199) ((other "CSP" "in" "JavaScript[fn:2]") . 6596453) ((headline "CSP" "in" "JavaScript[fn:2]") . 6596453) ((other "CSP," "Channel," "Goroutines") . 13916277) ((headline "CSP," "Channel," "Goroutines") . 13916277) ((other "Event" "loop") . 58562972) ((headline "Event" "loop") . 58562972) ((other "CSP") . 259091243) ((headline "CSP") . 259091243) ((other "异步与多线程") . 186052055) ((headline "异步与多线程") . 186052055) ((other "什么是并发") . 58502681) ((headline "什么是并发") . 58502681) ((other "Communicating" "Sequential" "Processes") . 76680016) ((headline "Communicating" "Sequential" "Processes") . 76680016) ((other "TL;DR" "SLIDES") . 115787663) ((headline "TL;DR" "SLIDES") . 115787663)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/understand-prototype.org" '(:date (21909 53376) :title "理解JavaScript的原型链和继承" :crossrefs (((other "Footnotes") . 981446) ((headline "Footnotes") . 981446) ((other "Bonus" "继承") . 173855467) ((headline "Bonus" "继承") . 173855467) ((other "也没什么卵用得" "contructor") . 155637021) ((headline "也没什么卵用得" "contructor") . 155637021) ((other "=__proto__=" "才是原型链") . 267804726) ((headline "=__proto__=" "才是原型链") . 267804726) ((other "prototype属性是原型链吗？") . 100675606) ((headline "prototype属性是原型链吗？") . 100675606) ((other "instanceof" "引发的问题") . 234047375) ((headline "instanceof" "引发的问题") . 234047375)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/ru-lang-second-attampt.org" '(:date (21967 53888) :title "入语言第二试: readtable 与 core.async" :crossrefs (((other "core.async") . 204095070) ((headline "core.async") . 204095070) ((other "Readtable") . 202220562) ((headline "Readtable") . 202220562)) :index nil) org-publish-cache)
(puthash "/root/project/org/jichao.ouyang.org" '(:date (7745 23680) :title "About Me" :crossrefs (((other "Blog" "[[http://blog.oyanglul.us]]") . 116283909) ((headline "Blog" "[[http://blog.oyanglul.us]]") . 116283909) ((other "Talks") . 20587359) ((headline "Talks") . 20587359) ((other "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 10169982) ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 10169982) ((other "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 144883813) ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 144883813) ((other "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 253764847) ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 253764847) ((other "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 6902160) ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 6902160) ((other "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 118621723) ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 118621723) ((other "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 36484461) ((headline "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 36484461) ((other "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 268242752) ((headline "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 268242752) ((other "Books") . 97189478) ((headline "Books") . 97189478) ((other "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . 166936735) ((headline "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . 166936735) ((other "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . 58949307) ((headline "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . 58949307) ((other "Projects") . 116307967) ((headline "Projects") . 116307967)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/essential-ecmascript6.org" '(:date (21771 25344) :title "Essential EcmaScript 6" :crossrefs (((other "Generator") . 73585543) ((headline "Generator") . 73585543) ((other "Promises") . 13534505) ((headline "Promises") . 13534505) ((other "Class") . 63229409) ((headline "Class") . 63229409) ((other "Template" "Strings") . 123877999) ((headline "Template" "Strings") . 123877999) ((other "Destructuring") . 62558453) ((headline "Destructuring") . 62558453) ((other "Proxy") . 2699325) ((headline "Proxy") . 2699325) ((other "Let") . 58548203) ((headline "Let") . 58548203) ((other "Arrow" "Function") . 66471737) ((headline "Arrow" "Function") . 66471737) ((other "Tail" "Calling") . 51185763) ((headline "Tail" "Calling") . 51185763)) :index (("Arrow Function" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/root/project/org/functional-ruby.org" '(:date (22406 54784) :title "Functional Ruby" :crossrefs (((other "Footnotes") . 178779751) ((headline "Footnotes") . 178779751) ((other "pmap") . 114875724) ((headline "pmap") . 114875724) ((other "actor" "model" "多线程") . 30785684) ((headline "actor" "model" "多线程") . 30785684) ((other "用" "Either" "做控制流") . 94564714) ((headline "用" "Either" "做控制流") . 94564714) ((other "联合类型" "Left" "|" "Right") . 48955616) ((headline "联合类型" "Left" "|" "Right") . 48955616) ((other "一个好看的" "inspect") . 170839011) ((headline "一个好看的" "inspect") . 170839011) ((other "Monad") . 132602998) ((headline "Monad") . 132602998) ((other "Functor") . 174539370) ((headline "Functor") . 174539370) ((other "一个简单的" "Either" "Monad[fn:2]") . 50970626) ((headline "一个简单的" "Either" "Monad[fn:2]") . 50970626) ((other "一个简单的例子") . 38381568) ((headline "一个简单的例子") . 38381568) ((other "其实只是个简单的语法糖") . 203840988) ((headline "其实只是个简单的语法糖") . 203840988) ((other "/正则/") . 153252230) ((headline "/正则/") . 153252230) ((other "lambda" "（aka" "guard）") . 42302667) ((headline "lambda" "（aka" "guard）") . 42302667) ((other "表达式") . 46755201) ((headline "表达式") . 46755201) ((other "类型") . 20638167) ((headline "类型") . 20638167) ((other "值") . 51203179) ((headline "值") . 51203179) ((other "case" "when") . 239425131) ((headline "case" "when") . 239425131) ((other "destructure") . 38335859) ((headline "destructure") . 38335859) ((other "pattern" "matching") . 26363619) ((headline "pattern" "matching") . 26363619) ((other "闭包") . 219030035) ((headline "闭包") . 219030035) ((other "参数检查") . 21761764) ((headline "参数检查") . 21761764) ((other "return") . 186804560) ((headline "return") . 186804560) ((other "为什么" "lambda" "是" "proc") . 112055097) ((headline "为什么" "lambda" "是" "proc") . 112055097) ((other "神奇的" "=&=") . 232428307) ((headline "神奇的" "=&=") . 232428307) ((other "lambda") . 179367350) ((headline "lambda") . 179367350)) :index nil) org-publish-cache)
(puthash "/root/project/org/write-yourself-a-scheme-in-haskell/index.org" '(:date (22491 13824) :title "用Haskell48小时写你个Scheme" :crossrefs (((other "待续...") . 42972767) ((headline "待续...") . 42972767) ((other "求值，第一部分") . 73819400) ((headline "求值，第一部分") . 73819400) ((other "实现" "show" "类型类") . 221487249) ((headline "实现" "show" "类型类") . 221487249) ((other "to" "String") . 224118199) ((headline "to" "String") . 224118199) ((other "最后") . 182735918) ((headline "最后") . 182735918) ((other "parseNumber") . 57327013) ((headline "parseNumber") . 57327013) ((other "parseAtom") . 94296848) ((headline "parseAtom") . 94296848) ((other "ParseString") . 167464802) ((headline "ParseString") . 167464802) ((other "返回值") . 31119182) ((headline "返回值") . 31119182) ((other "空白符") . 167960794) ((headline "空白符") . 167960794) ((other "pattern" "matching") . 121970173) ((headline "pattern" "matching") . 121970173) ((other "Either") . 136131933) ((headline "Either") . 136131933) ((other "Parse") . 32236093) ((headline "Parse") . 32236093) ((other "定义" "parser") . 200784276) ((headline "定义" "parser") . 200784276) ((other "写个简单的parser") . 119330026) ((headline "写个简单的parser") . 119330026) ((other "语法分析") . 119420347) ((headline "语法分析") . 119420347) ((other "练习") . 143237678) ((headline "练习") . 143237678) ((other "操作符") . 26850205) ((headline "操作符") . 26850205) ((other "Hello" "World") . 240234852) ((headline "Hello" "World") . 240234852) ((other "跑起来") . 65621921) ((headline "跑起来") . 65621921) ((other "前言") . 145473153) ((headline "前言") . 145473153)) :index nil) org-publish-cache)
(puthash "/root/project/org/slides/continuous-delivery.org" '(:date (23706 56844 546194 943000) :title "Continuous Delivery" :crossrefs (((other "Footnotes") . 60509508) ((headline "Footnotes") . 60509508) ((other "Homework") . 37837979) ((headline "Homework") . 37837979) ((other "Popular" "CI" "tools") . 165212436) ((headline "Popular" "CI" "tools") . 165212436) ((other "QA" "in" "Production[fn:5]") . 165571745) ((headline "QA" "in" "Production[fn:5]") . 165571745) ((other "Pipeline") . 89912219) ((headline "Pipeline") . 89912219) ((other "Pipeline" "as" "Code") . 23971988) ((headline "Pipeline" "as" "Code") . 23971988) ((other "Journey" "from" "code" "to" "product") . 260082060) ((headline "Journey" "from" "code" "to" "product") . 260082060) ((other "Essentials[fn:4]") . 27596468) ((headline "Essentials[fn:4]") . 27596468) ((other "Automate" "deployment") . 251379415) ((headline "Automate" "deployment") . 251379415) ((other "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 85805998) ((headline "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 85805998) ((other "Test" "in" "a" "clone" "of" "the" "production" "environment") . 101337024) ((headline "Test" "in" "a" "clone" "of" "the" "production" "environment") . 101337024) ((other "Keep" "the" "build" "fast") . 239681182) ((headline "Keep" "the" "build" "fast") . 239681182) ((other "Fix" "broken" "builds" "immediately") . 44207510) ((headline "Fix" "broken" "builds" "immediately") . 44207510) ((other "Automate" "the" "build") . 84358704) ((headline "Automate" "the" "build") . 84358704) ((other "Make" "your" "build" "self-testing") . 155154041) ((headline "Make" "your" "build" "self-testing") . 155154041) ((other "Maintain" "a" "single-source" "repository") . 233432704) ((headline "Maintain" "a" "single-source" "repository") . 233432704) ((other "Evolutionary" "architecture") . 259532302) ((headline "Evolutionary" "architecture") . 259532302) ((other "Why" "Continuous" "Integration") . 159640281) ((headline "Why" "Continuous" "Integration") . 159640281) ((other "Why" "Continuous" "Delivery") . 61905481) ((headline "Why" "Continuous" "Delivery") . 61905481) ((other "Happier" "teams") . 205945283) ((headline "Happier" "teams") . 205945283) ((other "Better" "products") . 196589469) ((headline "Better" "products") . 196589469) ((other "Lower" "Cost") . 70103740) ((headline "Lower" "Cost") . 70103740) ((other "Higher" "quality") . 205456427) ((headline "Higher" "quality") . 205456427) ((other "Faster" "time" "to" "market") . 18123585) ((headline "Faster" "time" "to" "market") . 18123585) ((other "Low" "risk" "releases") . 171888637) ((headline "Low" "risk" "releases") . 171888637) ((other "What" "is" "Continuous" "Integration") . 215880612) ((headline "What" "is" "Continuous" "Integration") . 215880612) ((other "What" "is" "Continuous" "Delivery") . 120484057) ((headline "What" "is" "Continuous" "Delivery") . 120484057)) :index nil) org-publish-cache)
(puthash "X9eb3d13c5843ba59b1c52eb2aca737c815c53fd7" '(23706 56844 422193 953000) org-publish-cache)
(puthash "X0cb3a1f586171c4ab5daeb8ea3c3b43e408caf24" '(23706 56844 422193 953000) org-publish-cache)
(puthash "Xdf94f9cb7dbf376a1d2341361ce52453c809fd1b" '(23706 56844 422193 953000) org-publish-cache)
(puthash "Xb3126e2f49efffb197341aad6448f8b8d46f0fce" '(23706 56844 422193 953000) org-publish-cache)
(puthash "Xcd2dc297180bf52862e6b01716cf8fa61f51d641" '(23706 56844 422193 953000) org-publish-cache)
(puthash "X25687fceea5ba1898e00b311b29ebcdd5ba4b8ae" '(23706 56844 422193 953000) org-publish-cache)
(puthash "X530eb1dbf9245d2b1d5df05c8b0941f1b36591b9" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X24b3e63c45fe5cf73e49c1536ff3973c8e713b8f" '(23706 56844 390193 697000) org-publish-cache)
(puthash "Xbfd51c067ccd74e316deb0ed0c1df107f42ec442" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X6c8a99e98424a4218048f7f609c0b1b39f72a75a" '(23706 56844 390193 697000) org-publish-cache)
(puthash "X53cc4634b24e9fa9df408c6bcaed8fbee5ffb2b9" '(23706 56844 630195 614000) org-publish-cache)
(puthash "Xe77f1840601857cc62a4a0fce8d9d03b78b308cc" '(23706 56844 634195 646000) org-publish-cache)
(puthash "X58f5a5b48d958062e10965e2f80dd71623dae424" '(23706 56844 390193 697000) org-publish-cache)
(puthash "/root/project/org/index.org" '(:crossrefs (((other "[[file:jichao.ouyang.org][About" "Me]]") . 225405798) ((headline "[[file:jichao.ouyang.org][About" "Me]]") . 225405798) ((other "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 147135184) ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 147135184) ((other "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 237440086) ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 237440086) ((other "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 45196242) ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 45196242) ((other "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 219745965) ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 219745965) ((other "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 194722279) ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 194722279) ((other "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 37582181) ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 37582181) ((other "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 116283140) ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 116283140) ((other "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 34337014) ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 34337014) ((other "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 266559801) ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 266559801) ((other "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 91813959) ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 91813959) ((other "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 184500637) ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 184500637) ((other "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 64239932) ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 64239932) ((other "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 14633098) ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 14633098) ((other "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 233666301) ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 233666301) ((other "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 99108197) ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 99108197) ((other "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 107413646) ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 107413646) ((other "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 160209716) ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 160209716) ((other "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 127173544) ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 127173544) ((other "[[file:functional-ruby.org][Functional" "Ruby]]") . 260958530) ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . 260958530) ((other "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 18167507) ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 18167507) ((other "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 34599819) ((headline "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 34599819) ((other "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 158375892) ((headline "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 158375892) ((other "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 11506236) ((headline "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 11506236) ((other "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 68850038) ((headline "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 68850038) ((other "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 222836079) ((headline "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 222836079) ((other "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 15004662) ((headline "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 15004662) ((other "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 66846713) ((headline "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 66846713) ((other "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 52336108) ((headline "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 52336108) ((other "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 195227509) ((headline "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 195227509) ((other "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 67531942) ((headline "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 67531942) ((other "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 94164785) ((headline "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 94164785) ((other "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 115818021) ((headline "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 115818021) ((other "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 160444976) ((headline "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 160444976)) :index nil) org-publish-cache)
(puthash "X5d56d4f0cd718577b795c2a2281e491ed3418613" '(23706 56853 358265 303000) org-publish-cache)
(puthash "Xe0c8c7cccd31ac5456f418b6295950e623ace910" '(23706 56844 422193 953000) org-publish-cache)
(puthash "X9fc372c18ee60e538ed74d227d35187b9f5cfeb3" '(23706 56844 390193 697000) org-publish-cache)
(puthash "X53e617f1393fceed14e501e2e82077219d1cbc7f" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X3f477f6f76998329aa25060c404b98c8ce6e25ee" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X4a72fc21993284ea782fddd5dc766fab917afbe4" '(23706 56844 546194 943000) org-publish-cache)
(puthash "Xd33a1dedaa779c653d0f6830fffd1480f4f20c87" '(23706 56844 438194 80000) org-publish-cache)
(puthash "X87c035d47a19ae2303cc97bd9263978c1400b3e4" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X691c52d3bcb6da341007304b5a08721f832ef070" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X7d4eed6797fc159e6b23daa39f2f929bfc810236" '(23706 56844 438194 80000) org-publish-cache)
(puthash "X0de1980cfdbd1c84526fc24b776176d63ae005d7" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X9fc7b6bd33a4919d03d7d90347ece08bb24e3e2a" '(23706 56844 546194 943000) org-publish-cache)
(puthash "Xd088ac6f0451064e577f1cedd9021ee82eb28d82" '(23706 56844 438194 80000) org-publish-cache)
(puthash "X024425c0e100d7dac1282fcd19aaacf688a7ff12" '(23706 56844 438194 80000) org-publish-cache)
(puthash "Xf11fd7c954f93eef6ca50bf7f6ad8092bec1f9b2" '(23706 56844 438194 80000) org-publish-cache)
(puthash "Xccbeff40367d6d93c5b456c5d1ce10847a6698f1" '(23706 56844 438194 80000) org-publish-cache)
(puthash "X71c22609066fd037fdc952fdd55ce7420d6166cb" '(23706 56844 546194 943000) org-publish-cache)
(puthash "X509d1535b7636afb54cd4f6a03c03d4876562f8b" '(23706 56844 546194 943000) org-publish-cache)
(puthash "Xaf6eda97b33b4c46704e314a2ce2c79682703c4f" '(23706 56844 438194 80000) org-publish-cache)
(puthash "X4d07228c98fb8fa3fdd19462bd1b34000f797c99" '(23706 56844 546194 943000) org-publish-cache)
(puthash "Xb4f8af1130da36883f53f42bbb22efc023dbec54" '(23706 56844 546194 943000) org-publish-cache)
(puthash "Xeac97d34335c6cd012d0e05133083334bac6a19a" '(23706 56844 630195 614000) org-publish-cache)
(puthash "X65fe5caf681452b2f6b5a79fbc4ab8cf5b691fa4" '(23706 56844 390193 697000) org-publish-cache)
