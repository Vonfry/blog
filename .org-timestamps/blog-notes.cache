(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/root/project/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/root/project/org/make Bamboo support Github Pull Request with Status API.org" '(:date (21731 54784) :title "make Bamboo support Github Pull Request with Status API" :crossrefs (((other "Footnotes") . 243353960) ((headline "Footnotes") . 243353960) ((other "stop" "build" "if" "PR") . 18515924) ((headline "stop" "build" "if" "PR") . 18515924) ((other "notify" "github" "status") . 172858504) ((headline "notify" "github" "status") . 172858504) ((other "checkout" "PR" "code") . 59067038) ((headline "checkout" "PR" "code") . 59067038) ((other "config" "Bamboo" "plan") . 147009111) ((headline "config" "Bamboo" "plan") . 147009111) ((other "but" "what" "about" "the" "custom" "variables") . 230768277) ((headline "but" "what" "about" "the" "custom" "variables") . 230768277) ((other "github" "webhook") . 105811754) ((headline "github" "webhook") . 105811754) ((other "bamboo" "magic") . 264125284) ((headline "bamboo" "magic") . 264125284) ((other "what's" "wrong" "with" "Bamboo") . 127376994) ((headline "what's" "wrong" "with" "Bamboo") . 127376994)) :index (("bamboo" "/root/project/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/root/project/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/root/project/org/slides/continuous-delivery.org" '(:date (23706 57235 864928 471000) :title "Continuous Delivery" :crossrefs (((other "Footnotes") . 10376887) ((headline "Footnotes") . 10376887) ((other "Homework") . 57821360) ((headline "Homework") . 57821360) ((other "Popular" "CI" "tools") . 6098506) ((headline "Popular" "CI" "tools") . 6098506) ((other "QA" "in" "Production[fn:5]") . 170686748) ((headline "QA" "in" "Production[fn:5]") . 170686748) ((other "Pipeline") . 198730822) ((headline "Pipeline") . 198730822) ((other "Pipeline" "as" "Code") . 194326126) ((headline "Pipeline" "as" "Code") . 194326126) ((other "Journey" "from" "code" "to" "product") . 178494991) ((headline "Journey" "from" "code" "to" "product") . 178494991) ((other "Essentials[fn:4]") . 263777199) ((headline "Essentials[fn:4]") . 263777199) ((other "Automate" "deployment") . 114545861) ((headline "Automate" "deployment") . 114545861) ((other "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 181889193) ((headline "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 181889193) ((other "Test" "in" "a" "clone" "of" "the" "production" "environment") . 235971649) ((headline "Test" "in" "a" "clone" "of" "the" "production" "environment") . 235971649) ((other "Keep" "the" "build" "fast") . 250069329) ((headline "Keep" "the" "build" "fast") . 250069329) ((other "Fix" "broken" "builds" "immediately") . 187850163) ((headline "Fix" "broken" "builds" "immediately") . 187850163) ((other "Automate" "the" "build") . 19620736) ((headline "Automate" "the" "build") . 19620736) ((other "Make" "your" "build" "self-testing") . 129341631) ((headline "Make" "your" "build" "self-testing") . 129341631) ((other "Maintain" "a" "single-source" "repository") . 196159141) ((headline "Maintain" "a" "single-source" "repository") . 196159141) ((other "Evolutionary" "architecture") . 113932968) ((headline "Evolutionary" "architecture") . 113932968) ((other "Why" "Continuous" "Integration") . 154040572) ((headline "Why" "Continuous" "Integration") . 154040572) ((other "Why" "Continuous" "Delivery") . 13814641) ((headline "Why" "Continuous" "Delivery") . 13814641) ((other "Happier" "teams") . 230940819) ((headline "Happier" "teams") . 230940819) ((other "Better" "products") . 113483021) ((headline "Better" "products") . 113483021) ((other "Lower" "Cost") . 206973933) ((headline "Lower" "Cost") . 206973933) ((other "Higher" "quality") . 181123492) ((headline "Higher" "quality") . 181123492) ((other "Faster" "time" "to" "market") . 144374728) ((headline "Faster" "time" "to" "market") . 144374728) ((other "Low" "risk" "releases") . 34048391) ((headline "Low" "risk" "releases") . 34048391) ((other "What" "is" "Continuous" "Integration") . 192274751) ((headline "What" "is" "Continuous" "Integration") . 192274751) ((other "What" "is" "Continuous" "Delivery") . 195023192) ((headline "What" "is" "Continuous" "Delivery") . 195023192)) :index nil) org-publish-cache)
(puthash "/root/project/org/scala/3-layer-cake.org" '(:date (23704 6656) :title "3 Layer Scala Cake" :crossrefs (((other "Footnotes") . 72108903) ((headline "Footnotes") . 72108903) ((other "Layer" "1:" "ReaderT") . 10106879) ((headline "Layer" "1:" "ReaderT") . 10106879) ((other "Layer" "2:" "MTL" "+" "Interpreter") . 92944534) ((headline "Layer" "2:" "MTL" "+" "Interpreter") . 92944534) ((other "Layer" "3:" "Business" "(Free)") . 232829391) ((headline "Layer" "3:" "Business" "(Free)") . 232829391) ((other "ReaderT" "+" "MTL" "+" "Free") . 135617468) ((headline "ReaderT" "+" "MTL" "+" "Free") . 135617468) ((other "Free" "Monad") . 170953703) ((headline "Free" "Monad") . 170953703) ((other "MTL") . 17298239) ((headline "MTL") . 17298239) ((other "The" "Needs" "of" "State") . 195146078) ((headline "The" "Needs" "of" "State") . 195146078) ((other "3" "Layer" "Cake") . 229334966) ((headline "3" "Layer" "Cake") . 229334966) ((other "Refactor") . 195474618) ((headline "Refactor") . 195474618) ((other "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 77468210) ((headline "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 77468210) ((other "ReaderT") . 167787908) ((headline "ReaderT") . 167787908) ((other "IO") . 214853179) ((headline "IO") . 214853179) ((other "Imperative") . 109579127) ((headline "Imperative") . 109579127) ((other "Retro") . 79035322) ((headline "Retro") . 79035322) ((other "Take" "2:" "ReaderT" "Pattern") . 1955758) ((headline "Take" "2:" "ReaderT" "Pattern") . 1955758) ((other "Take" "1:" "IO") . 8746597) ((headline "Take" "1:" "IO") . 8746597) ((other "The" "Program") . 198614454) ((headline "The" "Program") . 198614454)) :index nil) org-publish-cache)
(puthash "/root/project/org/scala/implicit-conversions.org" '(:date (22360 45440) :title "Implicit, to be or not to be" :crossrefs (((other "Footnotes") . 258185480) ((headline "Footnotes") . 258185480) ((other "or" "Not" "To" "Be") . 75682936) ((headline "or" "Not" "To" "Be") . 75682936) ((other "To" "Be") . 259991991) ((headline "To" "Be") . 259991991) ((other "类型类" "Type" "Class") . 244228372) ((headline "类型类" "Type" "Class") . 244228372) ((other "隐式转换参数") . 42989754) ((headline "隐式转换参数") . 42989754) ((other "语法糖") . 11804967) ((headline "语法糖") . 11804967) ((other "隐式转换接受者") . 212507027) ((headline "隐式转换接受者") . 212507027) ((other "隐式转换是什么鬼") . 54107125) ((headline "隐式转换是什么鬼") . 54107125)) :index nil) org-publish-cache)
(puthash "/root/project/org/2016-year-in-review.org" '(:date (22621 47744) :title "2016 Year in Review" :crossrefs (((other "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 37928489) ((headline "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 37928489) ((other "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 195944777) ((headline "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 195944777) ((other "[[https://github.com/cujojs/most][most]]") . 143985382) ((headline "[[https://github.com/cujojs/most][most]]") . 143985382) ((other "[[https://github.com/reactive-react/transdux][transdux]]") . 186983128) ((headline "[[https://github.com/reactive-react/transdux][transdux]]") . 186983128) ((other "[[https://github.com/jcouyang/union-type][union-type]]") . 111947160) ((headline "[[https://github.com/jcouyang/union-type][union-type]]") . 111947160) ((other "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 4391535) ((headline "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 4391535) ((other "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 142436998) ((headline "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 142436998) ((other "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 78661092) ((headline "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 78661092) ((other "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . 111775871) ((headline "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . 111775871) ((other "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 77256516) ((headline "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 77256516) ((other "[[https://github.com/jcouyang/cat.js][cat.js]]") . 59170457) ((headline "[[https://github.com/jcouyang/cat.js][cat.js]]") . 59170457) ((other "duckling") . 181908768) ((headline "duckling") . 181908768) ((other "同构的" "JS" "方法") . 62037736) ((headline "同构的" "JS" "方法") . 62037736) ((other "core.async") . 255319072) ((headline "core.async") . 255319072) ((other "[[https://github.com/jcouyang/conjs][conjs]]") . 179837149) ((headline "[[https://github.com/jcouyang/conjs][conjs]]") . 179837149) ((other "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 243826744) ((headline "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 243826744) ((other "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 68358028) ((headline "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 68358028)) :index nil) org-publish-cache)
(puthash "/root/project/org/scala/finch-vs-http4s.org" '(:date (23566 65024) :title "Finch vs Http4s, which is FPer" :crossrefs (((other "Http4s") . 120373847) ((headline "Http4s") . 120373847) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 117408577) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 117408577) ((other "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 29160628) ((headline "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 29160628) ((other "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 67553434) ((headline "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 67553434) ((other "Finch") . 57274483) ((headline "Finch") . 57274483) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎") . 175624139) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎") . 175624139) ((other "extensible:" "🍎" "🍎") . 1133374) ((headline "extensible:" "🍎" "🍎") . 1133374) ((other "composible:" "🍎" "🍎" "🍎" "🍎") . 131286664) ((headline "composible:" "🍎" "🍎" "🍎" "🍎") . 131286664)) :index nil) org-publish-cache)
(puthash "/root/project/org/write-yourself-a-scheme-in-haskell/index.org" '(:date (22491 13824) :title "用Haskell48小时写你个Scheme" :crossrefs (((other "待续...") . 114269492) ((headline "待续...") . 114269492) ((other "求值，第一部分") . 119734144) ((headline "求值，第一部分") . 119734144) ((other "实现" "show" "类型类") . 2538832) ((headline "实现" "show" "类型类") . 2538832) ((other "to" "String") . 175801989) ((headline "to" "String") . 175801989) ((other "最后") . 14016638) ((headline "最后") . 14016638) ((other "parseNumber") . 3093534) ((headline "parseNumber") . 3093534) ((other "parseAtom") . 204613110) ((headline "parseAtom") . 204613110) ((other "ParseString") . 117894054) ((headline "ParseString") . 117894054) ((other "返回值") . 130752344) ((headline "返回值") . 130752344) ((other "空白符") . 144425431) ((headline "空白符") . 144425431) ((other "pattern" "matching") . 62679476) ((headline "pattern" "matching") . 62679476) ((other "Either") . 226024756) ((headline "Either") . 226024756) ((other "Parse") . 136707763) ((headline "Parse") . 136707763) ((other "定义" "parser") . 45215881) ((headline "定义" "parser") . 45215881) ((other "写个简单的parser") . 150802179) ((headline "写个简单的parser") . 150802179) ((other "语法分析") . 13806551) ((headline "语法分析") . 13806551) ((other "练习") . 113547058) ((headline "练习") . 113547058) ((other "操作符") . 33682872) ((headline "操作符") . 33682872) ((other "Hello" "World") . 147762752) ((headline "Hello" "World") . 147762752) ((other "跑起来") . 60458788) ((headline "跑起来") . 60458788) ((other "前言") . 23373517) ((headline "前言") . 23373517)) :index nil) org-publish-cache)
(puthash "/root/project/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:date (22065 24960) :title "使用 dotfiles 和 stow 管理你的 dotfiles" :crossrefs (((other "㊙" "Sensitive" "dotfiles") . 144928949) ((headline "㊙" "Sensitive" "dotfiles") . 144928949) ((other "submodule" "vs" "subtree") . 264493785) ((headline "submodule" "vs" "subtree") . 264493785) ((other "push" "to" "github") . 16131242) ((headline "push" "to" "github") . 16131242) ((other "stow" "目录") . 81626214) ((headline "stow" "目录") . 81626214) ((other "stow" "文件") . 247622966) ((headline "stow" "文件") . 247622966) ((other "使用" "stow" "管理" "symlink") . 76288860) ((headline "使用" "stow" "管理" "symlink") . 76288860)) :index nil) org-publish-cache)
(puthash "/root/project/org/emacs/literal-programming-emacs-config.org" '(:date (21835 64640) :title "Literal Programming Emacs Configure" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/clojure/clojure-the-mini-book.org" '(:date (21742 25088) :title "Clojure The Mini Book" :crossrefs (((other "多态") . 249071230) ((headline "多态") . 249071230) ((other "Concurrency") . 88294176) ((headline "Concurrency") . 88294176) ((other "Collection") . 13537477) ((headline "Collection") . 13537477) ((other "Functional" "Programming") . 209543886) ((headline "Functional" "Programming") . 209543886) ((other "Macro") . 246193176) ((headline "Macro") . 246193176) ((other "Reader") . 158163891) ((headline "Reader") . 158163891) ((other "code?" "data?") . 21875615) ((headline "code?" "data?") . 21875615) ((other "Special" "Forms") . 249763214) ((headline "Special" "Forms") . 249763214) ((other "loop" "recur") . 116436345) ((headline "loop" "recur") . 116436345) ((other "do") . 26287398) ((headline "do") . 26287398) ((other "let") . 37280757) ((headline "let") . 37280757) ((other "def") . 241785056) ((headline "def") . 241785056) ((other "来试试不一样的Clojure数据结构") . 198575922) ((headline "来试试不一样的Clojure数据结构") . 198575922) ((other "反引号" "=`=") . 9244325) ((headline "反引号" "=`=") . 9244325) ((other "lisp专用的" "'" "引号") . 212834013) ((headline "lisp专用的" "'" "引号") . 212834013) ((other "Map") . 218510283) ((headline "Map") . 218510283) ((other "Keyword") . 197073681) ((headline "Keyword") . 197073681) ((other "Set") . 196376269) ((headline "Set") . 196376269) ((other "List") . 79587142) ((headline "List") . 79587142) ((other "Vector") . 129542911) ((headline "Vector") . 129542911) ((other "String") . 179293220) ((headline "String") . 179293220) ((other "Number") . 215145382) ((headline "Number") . 215145382) ((other "搭建环境") . 173641788) ((headline "搭建环境") . 173641788) ((other "多线程是好东西如果用的对") . 93435724) ((headline "多线程是好东西如果用的对") . 93435724) ((other "多态是好东西") . 39386190) ((headline "多态是好东西") . 39386190) ((other "函数式是好东西") . 40852038) ((headline "函数式是好东西") . 40852038) ((other "lisp" "是好东西") . 126245767) ((headline "lisp" "是好东西") . 126245767) ((other "为什么要学习全是括号的语言") . 222348785) ((headline "为什么要学习全是括号的语言") . 222348785) ((other "我每天用括号当早饭") . 236357455) ((headline "我每天用括号当早饭") . 236357455)) :index nil) org-publish-cache)
(puthash "/root/project/org/how-functional-programming-and-flink-will-save-your-ass-from-big-data.org" '(:date (23498 28672) :title "使用 Flink 解救多线程 Scala 应用" :crossrefs (((other "Footnotes") . 103458615) ((headline "Footnotes") . 103458615) ((other "Flink" "Cluster" "on" "K8s") . 34215001) ((headline "Flink" "Cluster" "on" "K8s") . 34215001) ((other "Flink" "Cluster" "in" "Docker") . 113981973) ((headline "Flink" "Cluster" "in" "Docker") . 113981973) ((other "Flink" "Scala") . 92967709) ((headline "Flink" "Scala") . 92967709) ((other "Scala") . 42942953) ((headline "Scala") . 42942953) ((other "问题") . 74503202) ((headline "问题") . 74503202)) :index nil) org-publish-cache)
(puthash "/root/project/org/jichao.ouyang.org" '(:date (7745 23680) :title "About Me" :crossrefs (((other "Blog" "[[http://blog.oyanglul.us]]") . 136144790) ((headline "Blog" "[[http://blog.oyanglul.us]]") . 136144790) ((other "Talks") . 193538064) ((headline "Talks") . 193538064) ((other "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 92900088) ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 92900088) ((other "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 10601601) ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 10601601) ((other "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 126285122) ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 126285122) ((other "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 47991275) ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 47991275) ((other "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 145252624) ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 145252624) ((other "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 29706841) ((headline "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 29706841) ((other "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 102970670) ((headline "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 102970670) ((other "Books") . 108248916) ((headline "Books") . 108248916) ((other "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . 262283723) ((headline "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . 262283723) ((other "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . 118954370) ((headline "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . 118954370) ((other "Projects") . 735009) ((headline "Projects") . 735009)) :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/scala/en/part2.org" '(:date (23549 55936) :title "Grokking Monad in Scala" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/scala/en/part3.org" '(:date (23537 64768) :title "Grokking Monad in Scala - Free" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/part1.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 177914454) ((headline "Footnotes") . 177914454) ((other "Summary") . 107284168) ((headline "Summary") . 107284168) ((other "/Kleisli" "Catergory/") . 30301079) ((headline "/Kleisli" "Catergory/") . 30301079) ((other "Rank" "N" "Type") . 76683385) ((headline "Rank" "N" "Type") . 76683385) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 186149264) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 186149264) ((other "结合律") . 260979873) ((headline "结合律") . 260979873) ((other "三角等式") . 258432002) ((headline "三角等式") . 258432002) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 9985710) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 9985710) ((other "/Adjunction" "Functor/" "伴随函子") . 129700150) ((headline "/Adjunction" "Functor/" "伴随函子") . 129700150) ((other "String" "Diagram") . 162771938) ((headline "String" "Diagram") . 162771938) ((target "NT") . 73455797) ((other "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 208306035) ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 208306035) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 352857) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 352857) ((other "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 56598664) ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 56598664) ((other "/Duel/") . 160096914) ((headline "/Duel/") . 160096914) ((other "/Hask/") . 43340301) ((headline "/Hask/") . 43340301) ((other "/Category/") . 107593905) ((headline "/Category/") . 107593905) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 80353519) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 80353519)) :index (("Catergory" "/root/project/org/grokking-monad/part1.org" (name . "/Category/")) ("范畴" "/root/project/org/grokking-monad/part1.org" (name . "/Category/")) ("Kind" "/root/project/org/grokking-monad/part1.org" (name . "/Category/")) ("Hask" "/root/project/org/grokking-monad/part1.org" (name . "/Hask/")) ("Duel" "/root/project/org/grokking-monad/part1.org" (name . "/Duel/")) ("Functor" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("猫" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>Cat<rt> +猫+</rt></ruby>@@/")) ("Natural Transformations" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("自然变换" "/root/project/org/grokking-monad/part1.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("Adjunction Functor" "/root/project/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/project/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/project/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/project/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/project/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/root/project/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Rank N Type" "/root/project/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Kleisi Catergory" "/root/project/org/grokking-monad/part1.org" (name . "/Kleisli Catergory/")))) org-publish-cache)
(puthash "/root/project/org/grokking-monad/part3.org" '(:date (23387 45568) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Comonad") . 90268102) ((headline "Comonad") . 90268102) ((other "Eff") . 83612470) ((headline "Eff") . 83612470) ((other "Free" "Monoid") . 148514051) ((headline "Free" "Monoid") . 148514051) ((other "Interpreter") . 100684181) ((headline "Interpreter") . 100684181) ((other "Free" "Functor") . 68690707) ((headline "Free" "Functor") . 68690707) ((other "Coyoneda") . 14162964) ((headline "Coyoneda") . 14162964) ((other "Free") . 255245134) ((headline "Free") . 255245134) ((other "Free" "Monad") . 221353145) ((headline "Free" "Monad") . 221353145) ((other "ST" "Monad") . 7107170) ((headline "ST" "Monad") . 7107170) ((other "MonadPlus") . 180572280) ((headline "MonadPlus") . 180572280) ((other "Alternative") . 144310846) ((headline "Alternative") . 144310846) ((other "ReaderT") . 20394990) ((headline "ReaderT") . 20394990) ((other "Monad" "Transform") . 197959758) ((headline "Monad" "Transform") . 197959758) ((other "RWS") . 28055755) ((headline "RWS") . 28055755) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 267162215) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 267162215)) :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/index.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "References") . 240473458) ((headline "References") . 240473458) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 149891659) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 149891659) ((other "Comonad") . 127926335) ((headline "Comonad") . 127926335) ((other "Eff") . 191850295) ((headline "Eff") . 191850295) ((other "Free" "Monoid") . 123842455) ((headline "Free" "Monoid") . 123842455) ((other "Free" "Monad") . 262481141) ((headline "Free" "Monad") . 262481141) ((other "Interpreter") . 253806390) ((headline "Interpreter") . 253806390) ((other "Free" "Functor") . 147075149) ((headline "Free" "Functor") . 147075149) ((other "Coyoneda") . 128813166) ((headline "Coyoneda") . 128813166) ((other "Free") . 179016714) ((headline "Free") . 179016714) ((other "ST" "Monad") . 15883704) ((headline "ST" "Monad") . 15883704) ((other "MonadPlus") . 193667235) ((headline "MonadPlus") . 193667235) ((other "Alternative") . 236694461) ((headline "Alternative") . 236694461) ((other "Monad" "Transform") . 130873984) ((headline "Monad" "Transform") . 130873984) ((other "ReaderT") . 238619015) ((headline "ReaderT") . 238619015) ((other "RWS") . 230317853) ((headline "RWS") . 230317853) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 140546426) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 140546426) ((other "Cont") . 175657437) ((headline "Cont") . 175657437) ((other "Validation") . 249814759) ((headline "Validation") . 249814759) ((other "回到" "Validation") . 104041576) ((headline "回到" "Validation") . 104041576) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 27947792) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 27947792) ((other "State") . 18118563) ((headline "State") . 18118563) ((other "Writer") . 181917617) ((headline "Writer") . 181917617) ((other "Reader") . 253404574) ((headline "Reader") . 253404574) ((other "do" "notation") . 4807920) ((headline "do" "notation") . 4807920) ((other "Either") . 220672816) ((headline "Either") . 220672816) ((other "Either" "Monad") . 89910569) ((headline "Either" "Monad") . 89910569) ((other "Product" "&" "Coproduct") . 233790210) ((headline "Product" "&" "Coproduct") . 233790210) ((other "Maybe") . 134161493) ((headline "Maybe") . 134161493) ((other "Identity") . 15429709) ((headline "Identity") . 15429709) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 34525279) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 34525279) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 222221811) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 222221811) ((other "Rank" "N" "Type") . 157148298) ((headline "Rank" "N" "Type") . 157148298) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 115479568) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 115479568) ((other "结合律") . 99812537) ((headline "结合律") . 99812537) ((other "三角等式") . 54726542) ((headline "三角等式") . 54726542) ((other "/Adjunction" "Functor/" "伴随函子") . 27771609) ((headline "/Adjunction" "Functor/" "伴随函子") . 27771609) ((other "String" "Diagram") . 220923512) ((headline "String" "Diagram") . 220923512) ((other "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 145262563) ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/<<NT>>") . 145262563) ((target "NT") . 265195327) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 167728065) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 167728065) ((other "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 211282709) ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . 211282709) ((other "/Category/") . 19701894) ((headline "/Category/") . 19701894) ((other "/Duel/") . 175439865) ((headline "/Duel/") . 175439865) ((other "/Hask/") . 249997463) ((headline "/Hask/") . 249997463)) :index (("Catergory" "/root/project/org/grokking-monad/index.org" (name . "/Category/")) ("范畴" "/root/project/org/grokking-monad/index.org" (name . "/Category/")) ("Kind" "/root/project/org/grokking-monad/index.org" (name . "/Category/")) ("Hask" "/root/project/org/grokking-monad/index.org" (name . "/Hask/")) ("Duel" "/root/project/org/grokking-monad/index.org" (name . "/Duel/")) ("Functor" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("猫" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>Cat<rt> +猫+</rt></ruby>@@/")) ("Natural Transformations" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("自然变换" "/root/project/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/<<NT>>")) ("Adjunction Functor" "/root/project/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/project/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/project/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/project/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/project/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")))) org-publish-cache)
(puthash "/root/project/org/functional-ruby.org" '(:date (22406 54784) :title "Functional Ruby" :crossrefs (((other "Footnotes") . 248799559) ((headline "Footnotes") . 248799559) ((other "pmap") . 22813667) ((headline "pmap") . 22813667) ((other "actor" "model" "多线程") . 5515938) ((headline "actor" "model" "多线程") . 5515938) ((other "用" "Either" "做控制流") . 111373695) ((headline "用" "Either" "做控制流") . 111373695) ((other "联合类型" "Left" "|" "Right") . 158273972) ((headline "联合类型" "Left" "|" "Right") . 158273972) ((other "一个好看的" "inspect") . 154784740) ((headline "一个好看的" "inspect") . 154784740) ((other "Monad") . 139879411) ((headline "Monad") . 139879411) ((other "Functor") . 159434096) ((headline "Functor") . 159434096) ((other "一个简单的" "Either" "Monad[fn:2]") . 143969589) ((headline "一个简单的" "Either" "Monad[fn:2]") . 143969589) ((other "一个简单的例子") . 140178603) ((headline "一个简单的例子") . 140178603) ((other "其实只是个简单的语法糖") . 198706716) ((headline "其实只是个简单的语法糖") . 198706716) ((other "/正则/") . 231576147) ((headline "/正则/") . 231576147) ((other "lambda" "（aka" "guard）") . 28875668) ((headline "lambda" "（aka" "guard）") . 28875668) ((other "表达式") . 191062107) ((headline "表达式") . 191062107) ((other "类型") . 101640595) ((headline "类型") . 101640595) ((other "值") . 172577119) ((headline "值") . 172577119) ((other "case" "when") . 107050714) ((headline "case" "when") . 107050714) ((other "destructure") . 170174872) ((headline "destructure") . 170174872) ((other "pattern" "matching") . 176528075) ((headline "pattern" "matching") . 176528075) ((other "闭包") . 73514578) ((headline "闭包") . 73514578) ((other "参数检查") . 156527735) ((headline "参数检查") . 156527735) ((other "return") . 91389985) ((headline "return") . 91389985) ((other "为什么" "lambda" "是" "proc") . 31209514) ((headline "为什么" "lambda" "是" "proc") . 31209514) ((other "神奇的" "=&=") . 21171569) ((headline "神奇的" "=&=") . 21171569) ((other "lambda") . 214313819) ((headline "lambda") . 214313819)) :index nil) org-publish-cache)
(puthash "/root/project/org/grokking-monad/part2.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Summary") . 205248920) ((headline "Summary") . 205248920) ((other "Cont") . 188514098) ((headline "Cont") . 188514098) ((other "回到" "Validation") . 192363472) ((headline "回到" "Validation") . 192363472) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 17046378) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 17046378) ((other "Validation") . 221241352) ((headline "Validation") . 221241352) ((other "State") . 130287830) ((headline "State") . 130287830) ((other "Writer") . 215204278) ((headline "Writer") . 215204278) ((other "do" "notation") . 162924298) ((headline "do" "notation") . 162924298) ((other "Reader") . 119393440) ((headline "Reader") . 119393440) ((other "Either" "Monad") . 17154659) ((headline "Either" "Monad") . 17154659) ((other "Product" "&" "Coproduct") . 142848578) ((headline "Product" "&" "Coproduct") . 142848578) ((other "Either") . 15640836) ((headline "Either") . 15640836) ((other "Maybe") . 36343613) ((headline "Maybe") . 36343613) ((other "Identity") . 146244755) ((headline "Identity") . 146244755) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 207796243) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 207796243)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" '(:date (21846 34944) :title "JavaScript玩转Clojure大法之Transducer" :crossrefs (((other "Footnotes") . 145071543) ((headline "Footnotes") . 145071543) ((other "完整例子") . 3482151) ((headline "完整例子") . 3482151) ((other "Is" "it" "Curry?") . 71807228) ((headline "Is" "it" "Curry?") . 71807228) ((other "Transducer") . 185740897) ((headline "Transducer") . 185740897) ((other "Reducible") . 29569959) ((headline "Reducible") . 29569959) ((other "[[http://clojure.org/reducers][Reducer]]") . 225391785) ((headline "[[http://clojure.org/reducers][Reducer]]") . 225391785) ((other "transform") . 61114843) ((headline "transform") . 61114843) ((other "Reducer") . 161745883) ((headline "Reducer") . 161745883)) :index (("reducer" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/root/project/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/project/org/shutting-down-gulugulu.org" '(:date (23520 55680) :title "关闭 gulugulu 弹幕" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/ru-lang-second-attampt.org" '(:date (21967 53888) :title "入语言第二试: readtable 与 core.async" :crossrefs (((other "core.async") . 225329528) ((headline "core.async") . 225329528) ((other "Readtable") . 66566448) ((headline "Readtable") . 66566448)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/essential-ecmascript6.org" '(:date (21771 25344) :title "Essential EcmaScript 6" :crossrefs (((other "Generator") . 200397218) ((headline "Generator") . 200397218) ((other "Promises") . 49014383) ((headline "Promises") . 49014383) ((other "Class") . 83952910) ((headline "Class") . 83952910) ((other "Template" "Strings") . 28993299) ((headline "Template" "Strings") . 28993299) ((other "Destructuring") . 89101739) ((headline "Destructuring") . 89101739) ((other "Proxy") . 44229242) ((headline "Proxy") . 44229242) ((other "Let") . 263425002) ((headline "Let") . 263425002) ((other "Arrow" "Function") . 141460565) ((headline "Arrow" "Function") . 141460565) ((other "Tail" "Calling") . 171432510) ((headline "Tail" "Calling") . 171432510)) :index (("Arrow Function" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/root/project/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/root/project/org/javascript/react-cookbook-mini.org" '(:date (22078 36992) :title "A Compact React Cookbook" :crossrefs (((other "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 152670598) ((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 152670598) ((other "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 159391708) ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 159391708) ((other "PureRenderMixin") . 229920619) ((headline "PureRenderMixin") . 229920619) ((other "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 54135373) ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 54135373) ((other "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 10853907) ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 10853907) ((other "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 261452222) ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 261452222) ((other "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 268245863) ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 268245863) ((other "应用级别" "state") . 148576198) ((headline "应用级别" "state") . 148576198) ((other "router") . 54412770) ((headline "router") . 54412770) ((other "flux") . 221524407) ((headline "flux") . 221524407) ((other "store") . 27697440) ((headline "store") . 27697440) ((other "dispatcher") . 151019136) ((headline "dispatcher") . 151019136) ((other "event") . 198046691) ((headline "event") . 198046691) ((other "What" "about" "Router" "/" "router" "怎么办") . 267549195) ((headline "What" "about" "Router" "/" "router" "怎么办") . 267549195) ((other "[[https://github.com/rackt/react-router][react" "router]]") . 31258422) ((headline "[[https://github.com/rackt/react-router][react" "router]]") . 31258422) ((other "[[https://github.com/flatiron/director][direactor]]") . 53159085) ((headline "[[https://github.com/flatiron/director][direactor]]") . 53159085) ((other "server" "side") . 225278956) ((headline "server" "side") . 225278956) ((other "client" "side") . 182163759) ((headline "client" "side") . 182163759) ((other "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 106328209) ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 106328209) ((other "[[https://github.com/netflix/falcor][falcor]]") . 216290068) ((headline "[[https://github.com/netflix/falcor][falcor]]") . 216290068) ((other "[[https://facebook.github.io/relay/][relay/graphql]]") . 111039855) ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . 111039855) ((other "just" "[[https://github.com/cujojs/rest][rest]]") . 124583678) ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . 124583678) ((other "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 25901586) ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 25901586) ((other "Modular" "and" "Components") . 52786844) ((headline "Modular" "and" "Components") . 52786844) ((other "webpack") . 243938845) ((headline "webpack") . 243938845) ((other "browserify") . 250048870) ((headline "browserify") . 250048870) ((other "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 102521115) ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 102521115) ((other "mocha") . 196392695) ((headline "mocha") . 196392695) ((other "jasmine") . 246831623) ((headline "jasmine") . 246831623) ((other "[[http://facebook.github.io/jest/][Jest]]") . 184242278) ((headline "[[http://facebook.github.io/jest/][Jest]]") . 184242278) ((other "Why" "Immutable" "/" "为毛要不可变") . 250295550) ((headline "Why" "Immutable" "/" "为毛要不可变") . 250295550) ((other "让你的数据结构" "immutable" "的工具们") . 197458708) ((headline "让你的数据结构" "immutable" "的工具们") . 197458708) ((other "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 261502182) ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 261502182) ((other "[[https://github.com/swannodette/mori][mori]]") . 199957116) ((headline "[[https://github.com/swannodette/mori][mori]]") . 199957116) ((other "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 23575131) ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 23575131) ((other "Class") . 178337756) ((headline "Class") . 178337756) ((other "状态") . 264056600) ((headline "状态") . 264056600) ((other "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 145480778) ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 145480778) ((other "Virtual" "DOM" "（Immutable）") . 231906131) ((headline "Virtual" "DOM" "（Immutable）") . 231906131) ((other "以前是如何操作" "DOM" "的" "（Mutable）") . 18403419) ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . 18403419) ((other "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 254905355) ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 254905355) ((other "单向有什么好") . 14462364) ((headline "单向有什么好") . 14462364) ((other "双向有什么不好[fn:1]") . 228315242) ((headline "双向有什么不好[fn:1]") . 228315242) ((other "单向绑定") . 72250434) ((headline "单向绑定") . 72250434) ((other "双向绑定") . 210274291) ((headline "双向绑定") . 210274291)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:date (22097 1408) :title "看我们3天 hackday 都干了些什么" :crossrefs (((other "Footnotes") . 150007463) ((headline "Footnotes") . 150007463) ((other "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 33625584) ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 33625584) ((other "1." "把你的" "component" "包到" "Transdux" "里") . 92347553) ((headline "1." "把你的" "component" "包到" "Transdux" "里") . 92347553) ((other "Recap") . 103543543) ((headline "Recap") . 103543543) ((other "Day" "2" "-" "Show" "Case") . 142140252) ((headline "Day" "2" "-" "Show" "Case") . 142140252) ((other "bindActions") . 67975543) ((headline "bindActions") . 67975543) ((other "分辨不同的" "ReactClass") . 49441367) ((headline "分辨不同的" "ReactClass") . 49441367) ((other "传递" "inputChan" "和" "action" "的" "publication") . 93425384) ((headline "传递" "inputChan" "和" "action" "的" "publication") . 93425384) ((other "提取框架") . 87654341) ((headline "提取框架") . 87654341) ((other "初版，只实现一个功能") . 88264096) ((headline "初版，只实现一个功能") . 88264096) ((other "Day" "1" "-" "Hack" "Hack" "Hack...") . 264156641) ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . 264156641) ((other "Day" "0" "-" "Inception") . 235375547) ((headline "Day" "0" "-" "Inception") . 235375547) ((other "Atom") . 84496850) ((headline "Atom") . 84496850) ((other "Transducers") . 171605474) ((headline "Transducers") . 171605474) ((other "PubSub") . 76379775) ((headline "PubSub") . 76379775) ((other "Channels") . 168365668) ((headline "Channels") . 168365668) ((other "Clojure" "Avengers" "来相助") . 260327365) ((headline "Clojure" "Avengers" "来相助") . 260327365) ((other "redux") . 116439572) ((headline "redux") . 116439572) ((other "flux") . 188745175) ((headline "flux") . 188745175) ((other "Rationale") . 66335562) ((headline "Rationale") . 66335562)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/understand-prototype.org" '(:date (21909 53376) :title "理解JavaScript的原型链和继承" :crossrefs (((other "Footnotes") . 220561944) ((headline "Footnotes") . 220561944) ((other "Bonus" "继承") . 50231981) ((headline "Bonus" "继承") . 50231981) ((other "也没什么卵用得" "contructor") . 165803519) ((headline "也没什么卵用得" "contructor") . 165803519) ((other "=__proto__=" "才是原型链") . 226454150) ((headline "=__proto__=" "才是原型链") . 226454150) ((other "prototype属性是原型链吗？") . 263861499) ((headline "prototype属性是原型链吗？") . 263861499) ((other "instanceof" "引发的问题") . 184226432) ((headline "instanceof" "引发的问题") . 184226432)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/reactive-programming.org" '(:date (22025 54400) :title "Monadic Reactive Programming in JavaScript" :crossrefs (((other "Monad") . 145731523) ((headline "Monad") . 145731523) ((other "Applicative") . 132874272) ((headline "Applicative") . 132874272) ((other "Functor") . 228409264) ((headline "Functor") . 228409264) ((other "Stream") . 144408321) ((headline "Stream") . 144408321)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-macro.org" '(:date (21884 50176) :title "JavaScript玩转Clojure大法之 - Macro (1)" :crossrefs (((other "Footnotes") . 236983126) ((headline "Footnotes") . 236983126) ((other "Recap") . 163228385) ((headline "Recap") . 163228385) ((other "case" "macro") . 175137604) ((headline "case" "macro") . 175137604) ((other "Rule" "macro") . 188948280) ((headline "Rule" "macro") . 188948280) ((other "Sweet.js") . 24970186) ((headline "Sweet.js") . 24970186) ((other "Macro") . 162049793) ((headline "Macro") . 162049793)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:date (21822 52608) :title "Clojure 风格的 JavaScript 并发编程" :crossrefs (((other "Footnotes") . 259123004) ((headline "Footnotes") . 259123004) ((other "JavaScript" "版本" "的" "CSP") . 112562604) ((headline "JavaScript" "版本" "的" "CSP") . 112562604) ((other "put" ">!") . 23383905) ((headline "put" ">!") . 23383905) ((other "take" "<!") . 117353683) ((headline "take" "<!") . 117353683) ((other "timeout") . 13622936) ((headline "timeout") . 13622936) ((other "Goroutines" "in" "JavaScript") . 197932391) ((headline "Goroutines" "in" "JavaScript") . 197932391) ((other "Generator") . 266537269) ((headline "Generator") . 266537269) ((other "CSP" "in" "JavaScript[fn:2]") . 184443564) ((headline "CSP" "in" "JavaScript[fn:2]") . 184443564) ((other "CSP," "Channel," "Goroutines") . 138578368) ((headline "CSP," "Channel," "Goroutines") . 138578368) ((other "Event" "loop") . 86910430) ((headline "Event" "loop") . 86910430) ((other "CSP") . 139862254) ((headline "CSP") . 139862254) ((other "异步与多线程") . 17795390) ((headline "异步与多线程") . 17795390) ((other "什么是并发") . 24589993) ((headline "什么是并发") . 24589993) ((other "Communicating" "Sequential" "Processes") . 4041771) ((headline "Communicating" "Sequential" "Processes") . 4041771) ((other "TL;DR" "SLIDES") . 137329148) ((headline "TL;DR" "SLIDES") . 137329148)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/rethinking-react-dataflow.org" '(:date (22228 56192) :title "Rethinking React Dataflow" :crossrefs (((other "Model") . 74568517) ((headline "Model") . 74568517) ((other "继续" "flatMap" "结果到流上") . 184410967) ((headline "继续" "flatMap" "结果到流上") . 184410967) ((other "发送" "API" "请求") . 22801505) ((headline "发送" "API" "请求") . 22801505) ((other "Debounce") . 166476482) ((headline "Debounce") . 166476482) ((other "一个简单的" "Pure" "Component") . 139997440) ((headline "一个简单的" "Pure" "Component") . 139997440) ((other "🌰") . 118683485) ((headline "🌰") . 118683485) ((other "Monadic") . 129013216) ((headline "Monadic") . 129013216) ((other "Reactive") . 10988936) ((headline "Reactive") . 10988936)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:date (21864 64896) :title "JavaScript玩转Clojure大法之 - Trampoline" :crossrefs (((other "Trampoline") . 246871584) ((headline "Trampoline") . 246871584) ((other "DFA") . 137728816) ((headline "DFA") . 137728816) ((other "尾递归(tail" "recursion)") . 183930302) ((headline "尾递归(tail" "recursion)") . 183930302) ((other "相互递归(mutual" "recursion)") . 224120773) ((headline "相互递归(mutual" "recursion)") . 224120773)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:date (21895 20480) :title "自制语言初试 - 入lang" :crossrefs (((other "在哪里才能买到呢") . 228853991) ((headline "在哪里才能买到呢") . 228853991) ((other "Infix" "macro") . 31963591) ((headline "Infix" "macro") . 31963591) ((other "Existential" "?") . 235703869) ((headline "Existential" "?") . 235703869) ((other "looprecur") . 79755728) ((headline "looprecur") . 79755728) ((other "destruture" "array") . 121366986) ((headline "destruture" "array") . 121366986) ((other "block" "scope" "binding") . 75920597) ((headline "block" "scope" "binding") . 75920597) ((other "Let") . 59576583) ((headline "Let") . 59576583) ((other "lambda") . 190330751) ((headline "lambda") . 190330751) ((other "Ru-lang," "The" "First" "Attampt") . 242225055) ((headline "Ru-lang," "The" "First" "Attampt") . 242225055) ((other "那macro呢") . 179330841) ((headline "那macro呢") . 179330841) ((other "ClojureScript的数据结构移植") . 267190046) ((headline "ClojureScript的数据结构移植") . 267190046) ((other "ClojureScript怎么就不好了") . 77718205) ((headline "ClojureScript怎么就不好了") . 77718205) ((other "Rationale(为毛要整一门语言)") . 32916583) ((headline "Rationale(为毛要整一门语言)") . 32916583)) :index nil) org-publish-cache)
(puthash "/root/project/org/xreact/fun-with-fantasy.org" '(:date (22963 12032) :title "xReact Fantasy" :crossrefs (((other "小结") . 11341495) ((headline "小结") . 11341495) ((other "Asynchronous") . 64206766) ((headline "Asynchronous") . 64206766) ((other "多个参数") . 120189736) ((headline "多个参数") . 120189736) ((other "Counter" "例子") . 130732747) ((headline "Counter" "例子") . 130732747) ((other "render") . 166861409) ((headline "render") . 166861409) ((other "Component") . 163748814) ((headline "Component") . 163748814) ((other "View") . 83154176) ((headline "View") . 83154176) ((other "Transform") . 23765847) ((headline "Transform") . 23765847)) :index nil) org-publish-cache)
(puthash "/root/project/org/xreact/typeclasses-in-typescript.org" '(:date (22963 12032) :title "Type Classes in TypeScript" :crossrefs (((other "Apply") . 130464648) ((headline "Apply") . 130464648) ((other "Cartesian") . 66752719) ((headline "Cartesian") . 66752719) ((other "Reflect" "Metadata") . 1760939) ((headline "Reflect" "Metadata") . 1760939) ((other "多态") . 50398933) ((headline "多态") . 50398933) ((other "Higher" "Kind" "Type") . 44489659) ((headline "Higher" "Kind" "Type") . 44489659) ((other "Functor") . 28857450) ((headline "Functor") . 28857450)) :index nil) org-publish-cache)
(puthash "/root/project/org/javascript/functional-javascript.org" '(:date (21842 37888) :title "Functional JavaScript Mini Book" :crossrefs (((other "Monad") . 110213710) ((headline "Monad") . 110213710) ((other "Monad" "在" "JavaScript" "中的应用") . 31944063) ((headline "Monad" "在" "JavaScript" "中的应用") . 31944063) ((other "到底有什么用呢," "Monad") . 150619180) ((headline "到底有什么用呢," "Monad") . 150619180) ((other "走钢索") . 12583775) ((headline "走钢索") . 12583775) ((other "现在来试试用" "Either") . 128070300) ((headline "现在来试试用" "Either") . 128070300) ((other "一般解法") . 109301349) ((headline "一般解法") . 109301349) ((other "Either") . 185764061) ((headline "Either") . 185764061) ((other "Functor") . 234936877) ((headline "Functor") . 234936877) ((other "Functor" "in" "JavaScript") . 266213688) ((headline "Functor" "in" "JavaScript") . 266213688) ((other "举个栗子🌰") . 163576782) ((headline "举个栗子🌰") . 163576782) ((other "Functor") . 255617698) ((headline "Functor") . 255617698) ((other "Transducers") . 131909886) ((headline "Transducers") . 131909886) ((other "完整例子") . 101236596) ((headline "完整例子") . 101236596) ((other "Is" "it" "Curry?") . 242758244) ((headline "Is" "it" "Curry?") . 242758244) ((other "Transducer") . 196780247) ((headline "Transducer") . 196780247) ((other "Reducer") . 115344647) ((headline "Reducer") . 115344647) ((other "[[http://clojure.org/reducers][Reducer]]") . 244745148) ((headline "[[http://clojure.org/reducers][Reducer]]") . 244745148) ((other "Reducible") . 225629805) ((headline "Reducible") . 225629805) ((other "transform") . 8140656) ((headline "transform") . 8140656) ((other "高阶函数(Higher-order" "function)") . 228884209) ((headline "高阶函数(Higher-order" "function)") . 228884209) ((other "函数组合" "function" "composition") . 166621399) ((headline "函数组合" "function" "composition") . 166621399) ((other "pipe") . 211750108) ((headline "pipe") . 211750108) ((other "Compose") . 166065210) ((headline "Compose") . 166065210) ((other "柯里化" "currying") . 24124670) ((headline "柯里化" "currying") . 24124670) ((other "自动柯里化") . 189333300) ((headline "自动柯里化") . 189333300) ((other "柯里化函数接口") . 202513433) ((headline "柯里化函数接口") . 202513433) ((other "我们来看一个问题") . 308234) ((headline "我们来看一个问题") . 308234) ((other "所有数字乘以2," "再重构试试看") . 221499211) ((headline "所有数字乘以2," "再重构试试看") . 221499211) ((other "现在我要其中所有数字加1," "然后在连接") . 61154409) ((headline "现在我要其中所有数字加1," "然后在连接") . 61154409) ((other "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 222509579) ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 222509579) ((other "Higher-order" "function") . 33926626) ((headline "Higher-order" "function") . 33926626) ((other "函数作为返回值") . 83019751) ((headline "函数作为返回值") . 83019751) ((other "函数作为参数") . 244082944) ((headline "函数作为参数") . 244082944) ((other "Lambda") . 216018275) ((headline "Lambda") . 216018275) ((other "JavaScript的匿名函数(anonymous" "function)") . 186493067) ((headline "JavaScript的匿名函数(anonymous" "function)") . 186493067) ((other "使用匿名函数") . 114106453) ((headline "使用匿名函数") . 114106453) ((other "创建一个匿名函数") . 228985225) ((headline "创建一个匿名函数") . 228985225) ((other "箭头函数(arrow" "function)") . 59263266) ((headline "箭头函数(arrow" "function)") . 59263266) ((other "Lexical" "=this=") . 176991758) ((headline "Lexical" "=this=") . 176991758) ((other "为什么要用箭头函数") . 4098529) ((headline "为什么要用箭头函数") . 4098529) ((other "声明一个箭头函数") . 15281028) ((headline "声明一个箭头函数") . 15281028) ((other "Preface") . 187579999) ((headline "Preface") . 187579999)) :index (("柯里化" "/root/project/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/root/project/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/root/project/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/root/project/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/root/project/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/root/project/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "Xb4f8af1130da36883f53f42bbb22efc023dbec54" '(23706 57235 864928 471000) org-publish-cache)
(puthash "Xbfd51c067ccd74e316deb0ed0c1df107f42ec442" '(23706 57235 860928 478000) org-publish-cache)
(puthash "X3f477f6f76998329aa25060c404b98c8ce6e25ee" '(23706 57235 864928 471000) org-publish-cache)
(puthash "X53e617f1393fceed14e501e2e82077219d1cbc7f" '(23706 57235 864928 471000) org-publish-cache)
(puthash "X4a72fc21993284ea782fddd5dc766fab917afbe4" '(23706 57235 864928 471000) org-publish-cache)
(puthash "X24b3e63c45fe5cf73e49c1536ff3973c8e713b8f" '(23706 57235 700928 754000) org-publish-cache)
(puthash "/root/project/org/index.org" '(:crossrefs (((other "[[file:jichao.ouyang.org][About" "Me]]") . 135723737) ((headline "[[file:jichao.ouyang.org][About" "Me]]") . 135723737) ((other "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 54817494) ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 54817494) ((other "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 223201925) ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 223201925) ((other "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 152418597) ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 152418597) ((other "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 258914841) ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 258914841) ((other "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 213194533) ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 213194533) ((other "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 25829551) ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 25829551) ((other "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 238504523) ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 238504523) ((other "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 199155506) ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 199155506) ((other "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 71682386) ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 71682386) ((other "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 41480488) ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 41480488) ((other "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 104834914) ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 104834914) ((other "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 212940302) ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 212940302) ((other "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 230960160) ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 230960160) ((other "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 103477365) ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 103477365) ((other "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 104310490) ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 104310490) ((other "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 130384827) ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 130384827) ((other "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 10174595) ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 10174595) ((other "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 205302646) ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 205302646) ((other "[[file:functional-ruby.org][Functional" "Ruby]]") . 111731399) ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . 111731399) ((other "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 83666421) ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 83666421) ((other "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 95148116) ((headline "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 95148116) ((other "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 200485241) ((headline "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 200485241) ((other "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 92240915) ((headline "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 92240915) ((other "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 187805773) ((headline "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 187805773) ((other "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 162126100) ((headline "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 162126100) ((other "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 140679533) ((headline "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 140679533) ((other "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 93194490) ((headline "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 93194490) ((other "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 158670475) ((headline "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 158670475) ((other "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 121459479) ((headline "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 121459479) ((other "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 113732912) ((headline "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 113732912) ((other "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 3551801) ((headline "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 3551801) ((other "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 211966271) ((headline "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 211966271) ((other "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 249661412) ((headline "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 249661412)) :index nil) org-publish-cache)
(puthash "X5d56d4f0cd718577b795c2a2281e491ed3418613" '(23706 57240 800919 939000) org-publish-cache)
(puthash "X6c8a99e98424a4218048f7f609c0b1b39f72a75a" '(23706 57235 704928 747000) org-publish-cache)
(puthash "Xeac97d34335c6cd012d0e05133083334bac6a19a" '(23706 57235 944928 333000) org-publish-cache)
(puthash "X58f5a5b48d958062e10965e2f80dd71623dae424" '(23706 57235 700928 754000) org-publish-cache)
(puthash "X9fc372c18ee60e538ed74d227d35187b9f5cfeb3" '(23706 57235 700928 754000) org-publish-cache)
(puthash "X4d07228c98fb8fa3fdd19462bd1b34000f797c99" '(23706 57235 860928 478000) org-publish-cache)
(puthash "Xe0c8c7cccd31ac5456f418b6295950e623ace910" '(23706 57235 736928 692000) org-publish-cache)
(puthash "Xcd2dc297180bf52862e6b01716cf8fa61f51d641" '(23706 57235 736928 692000) org-publish-cache)
(puthash "Xb3126e2f49efffb197341aad6448f8b8d46f0fce" '(23706 57235 736928 692000) org-publish-cache)
(puthash "X0cb3a1f586171c4ab5daeb8ea3c3b43e408caf24" '(23706 57235 736928 692000) org-publish-cache)
(puthash "X25687fceea5ba1898e00b311b29ebcdd5ba4b8ae" '(23706 57235 736928 692000) org-publish-cache)
(puthash "X9eb3d13c5843ba59b1c52eb2aca737c815c53fd7" '(23706 57235 736928 692000) org-publish-cache)
(puthash "Xdf94f9cb7dbf376a1d2341361ce52453c809fd1b" '(23706 57235 736928 692000) org-publish-cache)
(puthash "X65fe5caf681452b2f6b5a79fbc4ab8cf5b691fa4" '(23706 57235 700928 754000) org-publish-cache)
(puthash "X530eb1dbf9245d2b1d5df05c8b0941f1b36591b9" '(23706 57235 864928 471000) org-publish-cache)
(puthash "Xccbeff40367d6d93c5b456c5d1ce10847a6698f1" '(23706 57235 752928 664000) org-publish-cache)
(puthash "Xaf6eda97b33b4c46704e314a2ce2c79682703c4f" '(23706 57235 752928 664000) org-publish-cache)
(puthash "X71c22609066fd037fdc952fdd55ce7420d6166cb" '(23706 57235 860928 478000) org-publish-cache)
(puthash "X509d1535b7636afb54cd4f6a03c03d4876562f8b" '(23706 57235 860928 478000) org-publish-cache)
(puthash "X87c035d47a19ae2303cc97bd9263978c1400b3e4" '(23706 57235 860928 478000) org-publish-cache)
(puthash "X0de1980cfdbd1c84526fc24b776176d63ae005d7" '(23706 57235 860928 478000) org-publish-cache)
(puthash "X7d4eed6797fc159e6b23daa39f2f929bfc810236" '(23706 57235 752928 664000) org-publish-cache)
(puthash "X9fc7b6bd33a4919d03d7d90347ece08bb24e3e2a" '(23706 57235 860928 478000) org-publish-cache)
(puthash "X691c52d3bcb6da341007304b5a08721f832ef070" '(23706 57235 860928 478000) org-publish-cache)
(puthash "Xf11fd7c954f93eef6ca50bf7f6ad8092bec1f9b2" '(23706 57235 752928 664000) org-publish-cache)
(puthash "Xd33a1dedaa779c653d0f6830fffd1480f4f20c87" '(23706 57235 752928 664000) org-publish-cache)
(puthash "X024425c0e100d7dac1282fcd19aaacf688a7ff12" '(23706 57235 752928 664000) org-publish-cache)
(puthash "Xd088ac6f0451064e577f1cedd9021ee82eb28d82" '(23706 57235 752928 664000) org-publish-cache)
(puthash "Xe77f1840601857cc62a4a0fce8d9d03b78b308cc" '(23706 57235 948928 327000) org-publish-cache)
(puthash "X53cc4634b24e9fa9df408c6bcaed8fbee5ffb2b9" '(23706 57235 944928 333000) org-publish-cache)
