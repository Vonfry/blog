(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/emacs/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/emacs/source/org/!ann.org" '(:title "!ann") org-publish-cache)
(puthash "/emacs/source/org/2016-year-in-review.org" '(:title "2016 Year in Review" :references (((headline "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . "orgheadline17") ((headline "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . "orgheadline16") ((headline "[[https://github.com/cujojs/most][most]]") . "orgheadline15") ((headline "[[https://github.com/reactive-react/transdux][transdux]]") . "orgheadline14") ((headline "[[https://github.com/jcouyang/union-type][union-type]]") . "orgheadline13") ((headline "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . "orgheadline12") ((headline "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . "orgheadline11") ((headline "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . "orgheadline10") ((headline "[[http://www.rubyconfchina.org/][RubyConf" "China]]") . "orgheadline9") ((headline "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . "orgheadline8") ((headline "[[https://github.com/jcouyang/cat.js][cat.js]]") . "orgheadline7") ((headline "duckling") . "orgheadline6") ((headline "同构的" "JS" "方法") . "orgheadline5") ((headline "core.async") . "orgheadline4") ((headline "[[https://github.com/jcouyang/conjs][conjs]]") . "orgheadline3") ((headline "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . "orgheadline2") ((headline "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/archive.org" '(:title "Jichao Ouyang's Blog" :references (((headline "Feb" "1986") . "orgheadline16") ((headline "Feb" "2015") . "orgheadline15") ((headline "Mar" "2015") . "orgheadline14") ((headline "Apr" "2015") . "orgheadline13") ((headline "May" "2015") . "orgheadline12") ((headline "Jun" "2015") . "orgheadline11") ((headline "Jul" "2015") . "orgheadline10") ((headline "Aug" "2015") . "orgheadline9") ((headline "Sep" "2015") . "orgheadline8") ((headline "Oct" "2015") . "orgheadline7") ((headline "Nov" "2015") . "orgheadline6") ((headline "Mar" "2016") . "orgheadline5") ((headline "Jun" "2016") . "orgheadline4") ((headline "Jul" "2016") . "orgheadline3") ((headline "Jan" "2017") . "orgheadline2") ((headline "Archive") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/functional-ruby.org" '(:title "Functional Ruby" :references (((headline "Footnotes") . "orgheadline25") ((headline "pmap") . "orgheadline24") ((headline "actor" "model" "多线程") . "orgheadline23") ((headline "用" "Either" "做控制流") . "orgheadline22") ((headline "联合类型" "Left" "|" "Right") . "orgheadline21") ((headline "一个好看的" "inspect") . "orgheadline20") ((headline "Monad") . "orgheadline19") ((headline "Functor") . "orgheadline18") ((headline "一个简单的" "Either" "Monad[fn:2]") . "orgheadline17") ((headline "一个简单的例子") . "orgheadline16") ((headline "其实只是个简单的语法糖") . "orgheadline15") ((headline "/正则/") . "orgheadline14") ((headline "lambda" "（aka" "guard）") . "orgheadline13") ((headline "表达式") . "orgheadline12") ((headline "类型") . "orgheadline11") ((headline "值") . "orgheadline10") ((headline "case" "when") . "orgheadline9") ((headline "destructure") . "orgheadline8") ((headline "pattern" "matching") . "orgheadline7") ((headline "闭包") . "orgheadline6") ((headline "参数检查") . "orgheadline5") ((headline "return") . "orgheadline4") ((headline "为什么" "lambda" "是" "proc") . "orgheadline3") ((headline "神奇的" "=&=") . "orgheadline2") ((headline "lambda") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/jichao.ouyang.org" '(:title "About Me" :references (((headline "Blog" "[[http://blog.oyanglul.us]]") . "orgheadline31") ((headline "Feb" "1986") . "orgheadline30") ((headline "Feb" "2015") . "orgheadline29") ((headline "Mar" "2015") . "orgheadline28") ((headline "Apr" "2015") . "orgheadline27") ((headline "May" "2015") . "orgheadline26") ((headline "Jun" "2015") . "orgheadline25") ((headline "Jul" "2015") . "orgheadline24") ((headline "Aug" "2015") . "orgheadline23") ((headline "Sep" "2015") . "orgheadline22") ((headline "Oct" "2015") . "orgheadline21") ((headline "Nov" "2015") . "orgheadline20") ((headline "Mar" "2016") . "orgheadline19") ((headline "Jun" "2016") . "orgheadline18") ((headline "Jul" "2016") . "orgheadline17") ((headline "Sep" "2016") . "orgheadline16") ((headline "Dec" "2016") . "orgheadline15") ((headline "Jan" "2017") . "orgheadline14") ((headline "Feb" "2017") . "orgheadline13") ((headline "Talks") . "orgheadline12") ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . "orgheadline11") ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . "orgheadline10") ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . "orgheadline9") ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . "orgheadline8") ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . "orgheadline7") ((headline "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . "orgheadline6") ((headline "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . "orgheadline5") ((headline "Books") . "orgheadline4") ((headline "[[https://book.douban.com/subject/26579320/][https://img1.doubanio.com/lpic/s28263518.jpg]]") . "orgheadline3") ((headline "[[https://book.douban.com/subject/26883736/][https://img3.doubanio.com/lpic/s29070174.jpg]]" "([[https://github.com/jcouyang/clojure-flavored-javascript][源码]])") . "orgheadline2") ((headline "Projects") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/make Bamboo support Github Pull Request with Status API.org" '(:title "make Bamboo support Github Pull Request with Status API" :references (((headline "Footnotes") . "orgheadline9") ((headline "stop" "build" "if" "PR") . "orgheadline8") ((headline "notify" "github" "status") . "orgheadline7") ((headline "checkout" "PR" "code") . "orgheadline6") ((headline "config" "Bamboo" "plan") . "orgheadline5") ((headline "but" "what" "about" "the" "custom" "variables") . "orgheadline4") ((headline "github" "webhook") . "orgheadline3") ((headline "bamboo" "magic") . "orgheadline2") ((headline "what's" "wrong" "with" "Bamboo") . "orgheadline1")) :index (("bamboo" "/emacs/source/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/emacs/source/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/emacs/source/org/clojure/clojure-the-mini-book.org" '(:title "Clojure The Mini Book" :references (((headline "多态") . "orgheadline29") ((headline "Concurrency") . "orgheadline28") ((headline "Collection") . "orgheadline27") ((headline "Functional" "Programming") . "orgheadline26") ((headline "我每天用括号当早饭") . "orgheadline25") ((headline "Macro") . "orgheadline24") ((headline "Reader") . "orgheadline23") ((headline "code?" "data?") . "orgheadline22") ((headline "Special" "Forms") . "orgheadline21") ((headline "loop" "recur") . "orgheadline20") ((headline "do") . "orgheadline19") ((headline "let") . "orgheadline18") ((headline "def") . "orgheadline17") ((headline "来试试不一样的Clojure数据结构") . "orgheadline16") ((headline "反引号" "=`=") . "orgheadline15") ((headline "lisp专用的" "'" "引号") . "orgheadline14") ((headline "Map") . "orgheadline13") ((headline "Keyword") . "orgheadline12") ((headline "Set") . "orgheadline11") ((headline "List") . "orgheadline10") ((headline "Vector") . "orgheadline9") ((headline "String") . "orgheadline8") ((headline "Number") . "orgheadline7") ((headline "搭建环境") . "orgheadline6") ((headline "多线程是好东西如果用的对") . "orgheadline5") ((headline "多态是好东西") . "orgheadline4") ((headline "函数式是好东西") . "orgheadline3") ((headline "lisp" "是好东西") . "orgheadline2") ((headline "为什么要学习全是括号的语言") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/emacs/literal-programming-emacs-config.org" '(:title "Literal Programming Emacs Configure" :references nil :index nil) org-publish-cache)
(puthash "/emacs/source/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:title "使用 dotfiles 和 stow 管理你的 dotfiles" :references (((headline "㊙" "Sensitive" "dotfiles") . "orgheadline6") ((headline "submodule" "vs" "subtree") . "orgheadline5") ((headline "push" "to" "github") . "orgheadline4") ((headline "stow" "目录") . "orgheadline3") ((headline "stow" "文件") . "orgheadline2") ((headline "使用" "stow" "管理" "symlink") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:title "自制语言初试 - 入lang" :references (((headline "在哪里才能买到呢") . "orgheadline13") ((headline "Infix" "macro") . "orgheadline12") ((headline "Existential" "?") . "orgheadline11") ((headline "looprecur") . "orgheadline10") ((headline "destruture" "array") . "orgheadline9") ((headline "block" "scope" "binding") . "orgheadline8") ((headline "Let") . "orgheadline7") ((headline "lambda") . "orgheadline6") ((headline "Ru-lang," "The" "First" "Attampt") . "orgheadline5") ((headline "那macro呢") . "orgheadline4") ((headline "ClojureScript的数据结构移植") . "orgheadline3") ((headline "ClojureScript怎么就不好了") . "orgheadline2") ((headline "Rationale(为毛要整一门语言)") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:title "Clojure 风格的 JavaScript 并发编程" :references (((headline "Footnotes") . "orgheadline15") ((headline "JavaScript" "版本" "的" "CSP") . "orgheadline14") ((headline "put" ">!") . "orgheadline13") ((headline "take" "<!") . "orgheadline12") ((headline "timeout") . "orgheadline11") ((headline "Goroutines" "in" "JavaScript") . "orgheadline10") ((headline "Generator") . "orgheadline9") ((headline "CSP" "in" "JavaScript[fn:2]") . "orgheadline8") ((headline "CSP," "Channel," "Goroutines") . "orgheadline7") ((headline "Event" "loop") . "orgheadline6") ((headline "CSP") . "orgheadline5") ((headline "异步与多线程") . "orgheadline4") ((headline "什么是并发") . "orgheadline3") ((headline "Communicating" "Sequential" "Processes") . "orgheadline2") ((headline "TL;DR" "SLIDES") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:title "JavaScript玩转Clojure大法之 - Trampoline" :references (((headline "Trampoline") . "orgheadline4") ((headline "DFA") . "orgheadline3") ((headline "尾递归(tail" "recursion)") . "orgheadline2") ((headline "相互递归(mutual" "recursion)") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/clojure-essence-in-javascript-macro.org" '(:title "JavaScript玩转Clojure大法之 - Macro (1)" :references (((headline "Footnotes") . "orgheadline6") ((headline "Recap") . "orgheadline5") ((headline "case" "macro") . "orgheadline4") ((headline "Rule" "macro") . "orgheadline3") ((headline "Sweet.js") . "orgheadline2") ((headline "Macro") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/essential-ecmascript6.org" '(:title "Essential EcmaScript 6" :references (((headline "Generator") . "orgheadline9") ((headline "Promises") . "orgheadline8") ((headline "Class") . "orgheadline7") ((headline "Template" "Strings") . "orgheadline6") ((headline "Destructuring") . "orgheadline5") ((headline "Proxy") . "orgheadline4") ((headline "Let") . "orgheadline3") ((headline "Arrow" "Function") . "orgheadline2") ((headline "Tail" "Calling") . "orgheadline1")) :index (("Arrow Function" "/emacs/source/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/emacs/source/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/emacs/source/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/emacs/source/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/emacs/source/org/javascript/clojure-essence-in-javascript-transducer.org" '(:title "JavaScript玩转Clojure大法之Transducer" :references (((headline "Footnotes") . "orgheadline8") ((headline "完整例子") . "orgheadline7") ((headline "Is" "it" "Curry?") . "orgheadline6") ((headline "Transducer") . "orgheadline5") ((headline "Reducible") . "orgheadline4") ((headline "[[http://clojure.org/reducers][Reducer]]") . "orgheadline3") ((headline "transform") . "orgheadline2") ((headline "Reducer") . "orgheadline1")) :index (("reducer" "/emacs/source/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/emacs/source/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/emacs/source/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/emacs/source/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/emacs/source/org/javascript/functional-javascript.org" '(:title "Functional JavaScript Mini Book" :references (((headline "Monad") . "orgheadline42") ((headline "Monad" "在" "JavaScript" "中的应用") . "orgheadline41") ((headline "到底有什么用呢," "Monad") . "orgheadline40") ((headline "走钢索") . "orgheadline39") ((headline "现在来试试用" "Either") . "orgheadline38") ((headline "一般解法") . "orgheadline37") ((headline "Either") . "orgheadline36") ((headline "Functor") . "orgheadline35") ((headline "Functor" "in" "JavaScript") . "orgheadline34") ((headline "举个栗子🌰") . "orgheadline33") ((headline "Functor") . "orgheadline32") ((headline "Transducers") . "orgheadline31") ((headline "完整例子") . "orgheadline30") ((headline "Is" "it" "Curry?") . "orgheadline29") ((headline "Transducer") . "orgheadline28") ((headline "Reducer") . "orgheadline27") ((headline "[[http://clojure.org/reducers][Reducer]]") . "orgheadline26") ((headline "Reducible") . "orgheadline25") ((headline "transform") . "orgheadline24") ((headline "高阶函数(Higher-order" "function)") . "orgheadline23") ((headline "函数组合" "function" "composition") . "orgheadline22") ((headline "pipe") . "orgheadline21") ((headline "Compose") . "orgheadline20") ((headline "柯里化" "currying") . "orgheadline19") ((headline "自动柯里化") . "orgheadline18") ((headline "柯里化函数接口") . "orgheadline17") ((headline "我们来看一个问题") . "orgheadline16") ((headline "所有数字乘以2," "再重构试试看") . "orgheadline15") ((headline "现在我要其中所有数字加1," "然后在连接") . "orgheadline14") ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . "orgheadline13") ((headline "Higher-order" "function") . "orgheadline12") ((headline "函数作为返回值") . "orgheadline11") ((headline "函数作为参数") . "orgheadline10") ((headline "Lambda") . "orgheadline9") ((headline "JavaScript的匿名函数(anonymous" "function)") . "orgheadline8") ((headline "使用匿名函数") . "orgheadline7") ((headline "创建一个匿名函数") . "orgheadline6") ((headline "箭头函数(arrow" "function)") . "orgheadline5") ((headline "Lexical" "=this=") . "orgheadline4") ((headline "为什么要用箭头函数") . "orgheadline3") ((headline "声明一个箭头函数") . "orgheadline2") ((headline "Preface") . "orgheadline1")) :index (("柯里化" "/emacs/source/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/emacs/source/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/emacs/source/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/emacs/source/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/emacs/source/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/emacs/source/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "/emacs/source/org/javascript/react-cookbook-mini.org" '(:title "A Compact React Cookbook" :references (((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . "orgheadline45") ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . "orgheadline44") ((headline "PureRenderMixin") . "orgheadline43") ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . "orgheadline42") ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . "orgheadline41") ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . "orgheadline40") ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . "orgheadline39") ((headline "应用级别" "state") . "orgheadline38") ((headline "router") . "orgheadline37") ((headline "flux") . "orgheadline36") ((headline "store") . "orgheadline35") ((headline "dispatcher") . "orgheadline34") ((headline "event") . "orgheadline33") ((headline "What" "about" "Router" "/" "router" "怎么办") . "orgheadline32") ((headline "[[https://github.com/rackt/react-router][react" "router]]") . "orgheadline31") ((headline "[[https://github.com/flatiron/director][direactor]]") . "orgheadline30") ((headline "server" "side") . "orgheadline29") ((headline "client" "side") . "orgheadline28") ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . "orgheadline27") ((headline "[[https://github.com/netflix/falcor][falcor]]") . "orgheadline26") ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . "orgheadline25") ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . "orgheadline24") ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . "orgheadline23") ((headline "Modular" "and" "Components") . "orgheadline22") ((headline "webpack") . "orgheadline21") ((headline "browserify") . "orgheadline20") ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . "orgheadline19") ((headline "mocha") . "orgheadline18") ((headline "jasmine") . "orgheadline17") ((headline "[[http://facebook.github.io/jest/][Jest]]") . "orgheadline16") ((headline "Why" "Immutable" "/" "为毛要不可变") . "orgheadline15") ((headline "让你的数据结构" "immutable" "的工具们") . "orgheadline14") ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . "orgheadline13") ((headline "[[https://github.com/swannodette/mori][mori]]") . "orgheadline12") ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . "orgheadline11") ((headline "Class") . "orgheadline10") ((headline "状态") . "orgheadline9") ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . "orgheadline8") ((headline "Virtual" "DOM" "（Immutable）") . "orgheadline7") ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . "orgheadline6") ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . "orgheadline5") ((headline "单向有什么好") . "orgheadline4") ((headline "双向有什么不好[fn:1]") . "orgheadline3") ((headline "单向绑定") . "orgheadline2") ((headline "双向绑定") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/reactive-programming.org" '(:title "Monadic Reactive Programming in JavaScript" :references (((headline "Monad") . "orgheadline4") ((headline "Applicative") . "orgheadline3") ((headline "Functor") . "orgheadline2") ((headline "Stream") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:title "看我们3天 hackday 都干了些什么" :references (((headline "Footnotes") . "orgheadline20") ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . "orgheadline19") ((headline "1." "把你的" "component" "包到" "Transdux" "里") . "orgheadline18") ((headline "Recap") . "orgheadline17") ((headline "Day" "2" "-" "Show" "Case") . "orgheadline16") ((headline "bindActions") . "orgheadline15") ((headline "分辨不同的" "ReactClass") . "orgheadline14") ((headline "传递" "inputChan" "和" "action" "的" "publication") . "orgheadline13") ((headline "提取框架") . "orgheadline12") ((headline "初版，只实现一个功能") . "orgheadline11") ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . "orgheadline10") ((headline "Day" "0" "-" "Inception") . "orgheadline9") ((headline "Atom") . "orgheadline8") ((headline "Transducers") . "orgheadline7") ((headline "PubSub") . "orgheadline6") ((headline "Channels") . "orgheadline5") ((headline "Clojure" "Avengers" "来相助") . "orgheadline4") ((headline "redux") . "orgheadline3") ((headline "flux") . "orgheadline2") ((headline "Rationale") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/understand-prototype.org" '(:title "理解JavaScript的原型链和继承" :references (((headline "Footnotes") . "orgheadline6") ((headline "Bonus" "继承") . "orgheadline5") ((headline "也没什么卵用得" "contructor") . "orgheadline4") ((headline "=__proto__=" "才是原型链") . "orgheadline3") ((headline "prototype属性是原型链吗？") . "orgheadline2") ((headline "instanceof" "引发的问题") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/ru-lang-second-attampt.org" '(:title "入语言第二试: readtable 与 core.async" :references (((headline "core.async") . "orgheadline2") ((headline "Readtable") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/rethinking-react-dataflow.org" '(:title "Rethinking React Dataflow" :references (((headline "Model") . "orgheadline8") ((headline "继续" "flatMap" "结果到流上") . "orgheadline7") ((headline "发送" "API" "请求") . "orgheadline6") ((headline "Debounce") . "orgheadline5") ((headline "一个简单的" "Pure" "Component") . "orgheadline4") ((headline "🌰") . "orgheadline3") ((headline "Monadic") . "orgheadline2") ((headline "Reactive") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/javascript/functional-javascript/zh/!lambda.org" '(:title "Lambda") org-publish-cache)
(puthash "/emacs/source/org/javascript/functional-javascript/zh/!higher-order-function.org" '(:title "高阶函数 Higher-order function") org-publish-cache)
(puthash "/emacs/source/org/javascript/functional-javascript/zh/!monad.org" '(:title "!monad") org-publish-cache)
(puthash "/emacs/source/org/scala/implicit-conversions.org" '(:title "Implicit, to be or not to be" :references (((headline "Footnotes") . "orgheadline8") ((headline "or" "Not" "To" "Be") . "orgheadline7") ((headline "To" "Be") . "orgheadline6") ((headline "类型类" "Type" "Class") . "orgheadline5") ((headline "隐式转换参数") . "orgheadline4") ((headline "语法糖") . "orgheadline3") ((headline "隐式转换接受者") . "orgheadline2") ((headline "隐式转换是什么鬼") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "/emacs/source/org/write-yourself-a-scheme-in-haskell/!chapter-3-evaluation-pt-1.org" '(:title "!chapter-3-evaluation-pt-1") org-publish-cache)
(puthash "/emacs/source/org/write-yourself-a-scheme-in-haskell/!chapter-2-parsing.org" '(:title "!chapter-2-parsing") org-publish-cache)
(puthash "/emacs/source/org/write-yourself-a-scheme-in-haskell/!chapter-1-compiling-and-running.org" '(:title "!chapter-1-compiling-and-running") org-publish-cache)
(puthash "X038fad6d06f83787e48233a8c306a6a14b356e73" 1487387682 org-publish-cache)
(puthash "X62079b70651165bd97d34bf0e98e1d018b7fc0f5" 1483719650 org-publish-cache)
(puthash "X0dfcb27b0ca576da6682f4c6e669fc0d3e71ad51" 1487387682 org-publish-cache)
(puthash "X04112f176ce2a2f4c6ffe78d97b276216f65cfe0" 1487387682 org-publish-cache)
(puthash "X3f574e86f022747af1eecc3010e8b6616132f752" 1487387682 org-publish-cache)
(puthash "Xaca1cc5d40856e30db5f0bbbf30e22f7edace9b9" 1487387682 org-publish-cache)
(puthash "X4773fedbbeb68507979d3cd4036cdb617405c5d2" 1487387682 org-publish-cache)
(puthash "X3a4cebcfccdd74c37f1bc681f74567e02dd9a357" 1487387682 org-publish-cache)
(puthash "Xb67165dfee52c0316d339adfe572a030175a0f03" 1487387682 org-publish-cache)
(puthash "Xf3a2b27d7a7da289936d2a6257b5e309ac1427b8" 1487387682 org-publish-cache)
(puthash "X2eff979a7f9caba837954dbf37b18f684d5b9f67" 1487387682 org-publish-cache)
(puthash "X1b64742e65b3eea1914855ba77eb9b056e4981b5" 1487387682 org-publish-cache)
(puthash "Xa63dd77ceff52e73dc076c8386f50e307b747020" 1487387682 org-publish-cache)
(puthash "X282555387011efec78112e4b87f4cb08f8d1122f" 1487387682 org-publish-cache)
(puthash "X7880358491475df5ee8db256d1e64851612bb4a4" 1487387682 org-publish-cache)
(puthash "X56a7f95aaa8f09b9f7c1166adbde3c7a1d87cc9a" 1487387682 org-publish-cache)
(puthash "X4fb94577c87676c2fd8d5d8bae794481e02c3307" 1487387682 org-publish-cache)
(puthash "Xafe0f68b98c98e629b2a07731fb5edb24255411f" 1487387682 org-publish-cache)
(puthash "Xcfb16d274e3bad88de0270cd6d44523f76382c39" 1487387682 org-publish-cache)
(puthash "Xbe8eee770c31a53eb65999f1bef1b1116b19fcd2" 1487387682 org-publish-cache)
(puthash "X4590cdead01d7f95b1f09be74eca054d8d81f0a5" 1487387682 org-publish-cache)
(puthash "X5a39905b741d0b8ef94a3415a89c0ee4d5f6e1de" 1487387682 org-publish-cache)
(puthash "/emacs/source/org/index.org" '(:references (((headline "Books") . "orgheadline39") ((headline "Projects") . "orgheadline38") ((headline "[[file:jichao.ouyang.org][About" "Me]]") . "orgheadline37") ((headline "what's" "wrong" "with" "Bamboo") . "orgheadline36") ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . "orgheadline35") ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . "orgheadline34") ((headline "Arrow" "Function") . "orgheadline33") ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . "orgheadline32") ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . "orgheadline31") ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . "orgheadline30") ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . "orgheadline29") ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . "orgheadline28") ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . "orgheadline27") ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . "orgheadline26") ((headline "ClojureScript怎么就不好了") . "orgheadline25") ((headline "Rationale(为毛要整一门语言)") . "orgheadline24") ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . "orgheadline23") ((headline "instanceof" "引发的问题") . "orgheadline22") ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . "orgheadline21") ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . "orgheadline20") ((headline "Stream") . "orgheadline19") ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . "orgheadline18") ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . "orgheadline17") ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . "orgheadline16") ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . "orgheadline15") ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . "orgheadline14") ((headline "Reactive") . "orgheadline13") ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . "orgheadline12") ((headline "隐式转换是什么鬼") . "orgheadline11") ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . "orgheadline10") ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . "orgheadline9") ((headline "前言") . "orgheadline8") ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . "orgheadline7") ((headline "㊙") . "orgheadline6") ((headline "㊙") . "orgheadline5") ((headline "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . "orgheadline4") ((headline "[[file:what-the-fuuuuuuuuuuuuuck-baidu.org][What" "The" "F🖕ck?" "BAIDU" "YOUR" "SISTER]]") . "orgheadline3") ((headline "[[file:grokking-monad/index.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . "orgheadline2") ((headline "[[file:grokking-monad/part2.org][范畴论完全装逼手册(二)" "/" "Grokking" "Monad]]") . "orgheadline1")) :index nil :title "Jichao Ouyang's Blog") org-publish-cache)
(puthash "Xb5d2e8855ac43dcaa6da5721697b1e5d002df755" 1490078394 org-publish-cache)
(puthash "/emacs/source/org/theindex.org" '(:references (((headline "范") . "orgheadline22") ((headline "自") . "orgheadline21") ((headline "米") . "orgheadline20") ((headline "柯") . "orgheadline19") ((headline "同") . "orgheadline18") ((headline "函") . "orgheadline17") ((headline "Y") . "orgheadline16") ((headline "X") . "orgheadline15") ((headline "T") . "orgheadline14") ((headline "R") . "orgheadline13") ((headline "N") . "orgheadline12") ((headline "L") . "orgheadline11") ((headline "K") . "orgheadline10") ((headline "I") . "orgheadline9") ((headline "H") . "orgheadline8") ((headline "G") . "orgheadline7") ((headline "F") . "orgheadline6") ((headline "E") . "orgheadline5") ((headline "D") . "orgheadline4") ((headline "C") . "orgheadline3") ((headline "B") . "orgheadline2") ((headline "A") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "Xccb22f695dd8c879f82f5a678ee60581bcd2b235" 1490078395 org-publish-cache)
(puthash "/emacs/source/org/javascript/essential-ecmascript-2017.org" '(:title "Essential EcmaScript 2017" :references (((headline "ES8" "(EcmaScript" "2017)") . "orgheadline5") ((headline "[[https://github.com/rwaldron/exponentiation-operator][Exponentiation" "Operator]]") . "orgheadline4") ((headline "[[https://github.com/tc39/Array.prototype.includes/][Array.prototype.includes]]") . "orgheadline3") ((headline "ES7" "(EcmaScript" "2016)") . "orgheadline2") ((headline "glossary" "(强行科普)") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "X91c03ec2c5269f3006eb9565d54187af7e276272" 1484236701 org-publish-cache)
(puthash "/emacs/source/org/what-the-fuuuuuuuuuuuuuck-baidu.org" '(:title "What The F🖕ck? BAIDU YOUR SISTER" :references nil :index nil) org-publish-cache)
(puthash "X54837775763640d5447795ecbbe83c926190485d" 1487387682 org-publish-cache)
(puthash "/emacs/source/org/grokking-monad/index.org" '(:title "范畴论完全装逼手册 / Grokking Monad" :references (((headline "References") . "orgheadline17") ((headline "第一部分：@@html:<ruby>范畴论<rt>Catergory" "Theory</rt></ruby>@@") . "orgheadline16") ((headline "Summary") . "orgheadline15") ((headline "/Kleisli" "Catergory/") . "orgheadline14") ((headline "Rank" "N" "Type") . "orgheadline13") ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . "orgheadline12") ((headline "结合律") . "orgheadline11") ((headline "三角等式") . "orgheadline10") ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . "orgheadline9") ((headline "/Adjunction" "Functor/" "伴随函子") . "orgheadline8") ((headline "String" "Diagram") . "orgheadline7") ((headline "/@@html:<ruby>自然变换<rt>Natural" "Transformations</rt></ruby>@@/") . "orgheadline6") ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . "orgheadline5") ((headline "/@@html:<ruby>函子<rt>" "Functor</rt></ruby>@@/") . "orgheadline4") ((headline "/Duel/") . "orgheadline3") ((headline "/Hask/") . "orgheadline2") ((headline "/Category/") . "orgheadline1")) :index (("Catergory" "/emacs/source/org/grokking-monad/index.org" (name . "/Category/")) ("范畴" "/emacs/source/org/grokking-monad/index.org" (name . "/Category/")) ("Hask" "/emacs/source/org/grokking-monad/index.org" (name . "/Hask/")) ("Functor" "/emacs/source/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("函子" "/emacs/source/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("endofunctor" "/emacs/source/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("自函子" "/emacs/source/org/grokking-monad/index.org" (name . "/@@html:<ruby>函子<rt> Functor</rt></ruby>@@/")) ("Natural Transformations" "/emacs/source/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/")) ("自然变换" "/emacs/source/org/grokking-monad/index.org" (name . "/@@html:<ruby>自然变换<rt>Natural Transformations</rt></ruby>@@/")) ("Adjunction Functor" "/emacs/source/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/emacs/source/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/emacs/source/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/emacs/source/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/emacs/source/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/emacs/source/org/grokking-monad/index.org" (name . "Rank N Type")) ("Rank N Type" "/emacs/source/org/grokking-monad/index.org" (name . "Rank N Type")) ("Kleisi Catergory" "/emacs/source/org/grokking-monad/index.org" (name . "/Kleisli Catergory/")))) org-publish-cache)
(puthash "/emacs/source/org/grokking-monad/en.org" '(:title "Grokking Monad" :references nil :index nil) org-publish-cache)
(puthash "/emacs/source/org/write-yourself-a-scheme-in-haskell/index.org" '(:title "用Haskell48小时写你个Scheme" :references (((headline "待续...") . "orgheadline21") ((headline "求值，第一部分") . "orgheadline20") ((headline "实现" "show" "类型类") . "orgheadline19") ((headline "to" "String") . "orgheadline18") ((headline "最后") . "orgheadline17") ((headline "parseNumber") . "orgheadline16") ((headline "parseAtom") . "orgheadline15") ((headline "ParseString") . "orgheadline14") ((headline "返回值") . "orgheadline13") ((headline "空白符") . "orgheadline12") ((headline "pattern" "matching") . "orgheadline11") ((headline "Either") . "orgheadline10") ((headline "Parse") . "orgheadline9") ((headline "定义" "parser") . "orgheadline8") ((headline "写个简单的parser") . "orgheadline7") ((headline "语法分析") . "orgheadline6") ((headline "练习") . "orgheadline5") ((headline "操作符") . "orgheadline4") ((headline "Hello" "World") . "orgheadline3") ((headline "跑起来") . "orgheadline2") ((headline "前言") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "X5a6a3f48a231fba9df04c61fa1f4eadc48320288" 1487387682 org-publish-cache)
(puthash "X8c1bd1da69428f79ecb62d6a8ad96223beb1206c" 1490078302 org-publish-cache)
(puthash "X5b690901394711d5535b58234cd442c9cfef13ce" 1486904480 org-publish-cache)
(puthash "/emacs/source/org/grokking-monad/part2.org" '(:title "范畴论完全装逼手册(二) / Grokking Monad" :references (((headline "Eff") . "orgheadline19") ((headline "Free" "Monad") . "orgheadline18") ((headline "ST") . "orgheadline17") ((headline "MonadFix") . "orgheadline16") ((headline "MonadPlus") . "orgheadline15") ((headline "Cont") . "orgheadline14") ((headline "Monad" "Transform") . "orgheadline13") ((headline "Expection") . "orgheadline12") ((headline "RWS") . "orgheadline11") ((headline "State") . "orgheadline10") ((headline "Writter") . "orgheadline9") ((headline "Reader") . "orgheadline8") ((headline "Validate") . "orgheadline7") ((headline "Either") . "orgheadline6") ((headline "Applicative") . "orgheadline5") ((headline "Bifunctor") . "orgheadline4") ((headline "Arrow") . "orgheadline3") ((headline "Alternative") . "orgheadline2") ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . "orgheadline1")) :index nil) org-publish-cache)
(puthash "Xe60f62512dad263dc470e0b5f3266c20051297e9" 1489933938 org-publish-cache)
